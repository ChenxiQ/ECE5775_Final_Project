-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_empty_n : IN STD_LOGIC;
    strm_in_V_read : OUT STD_LOGIC;
    strm_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_full_n : IN STD_LOGIC;
    strm_out_V_write : OUT STD_LOGIC );
end;


architecture behav of dut is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.741500,HLS_SYN_LAT=52,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=93,HLS_SYN_LUT=469}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_pp0_stg0_fsm_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_pp0_stg1_fsm_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_pp0_stg2_fsm_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_pp0_stg3_fsm_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_pp0_stg4_fsm_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_pp0_stg5_fsm_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_pp0_stg6_fsm_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_pp0_stg7_fsm_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_pp0_stg8_fsm_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_pp0_stg9_fsm_12 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_pp0_stg10_fsm_13 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_pp0_stg11_fsm_14 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_st17_fsm_15 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_31 : BOOLEAN;
    signal strm_in_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg9_fsm_12 : STD_LOGIC;
    signal ap_sig_55 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond_i_reg_301 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg10_fsm_13 : STD_LOGIC;
    signal ap_sig_70 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg11_fsm_14 : STD_LOGIC;
    signal ap_sig_80 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_3 : STD_LOGIC;
    signal ap_sig_90 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal strm_out_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg1_fsm_4 : STD_LOGIC;
    signal ap_sig_103 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg2_fsm_5 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg3_fsm_6 : STD_LOGIC;
    signal ap_sig_122 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg4_fsm_7 : STD_LOGIC;
    signal ap_sig_132 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg5_fsm_8 : STD_LOGIC;
    signal ap_sig_142 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg6_fsm_9 : STD_LOGIC;
    signal ap_sig_152 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg7_fsm_10 : STD_LOGIC;
    signal ap_sig_162 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg8_fsm_11 : STD_LOGIC;
    signal ap_sig_172 : BOOLEAN;
    signal proc_i_reg_110 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_fu_121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_187 : BOOLEAN;
    signal loc_V_1_fu_135_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_281 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_fu_149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_286 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_1_fu_167_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_reg_291 : STD_LOGIC_VECTOR (8 downto 0);
    signal cond_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_297 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_203 : BOOLEAN;
    signal exitcond_i_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_210 : BOOLEAN;
    signal proc_fu_270_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal proc_reg_305 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_223 : BOOLEAN;
    signal proc_i_phi_fu_114_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_209 : BOOLEAN;
    signal loc_V_fu_125_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_cast1_fu_139_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_143_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_i_fu_157_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_i_i_cast_fu_163_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1_fu_182_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sh_assign_1_cast_fu_193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_cast_cast_fu_196_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_fu_189_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_2_i_i_fu_199_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_3_i_i_fu_203_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_fu_215_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_i_fu_209_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_s_fu_223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_227_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_237_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_175_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_i_i_fu_244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_fu_250_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_15 : STD_LOGIC;
    signal ap_sig_391 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210)) and not((ap_const_lv1_0 = exitcond_i_fu_264_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = cond_reg_297)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = cond_reg_297))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210)) and not((exitcond_i_reg_301 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    proc_i_reg_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = cond_reg_297)))) then 
                proc_i_reg_110 <= ap_const_lv4_0;
            elsif (((exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210)))) then 
                proc_i_reg_110 <= proc_reg_305;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                cond_reg_297 <= cond_fu_258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210)))) then
                exitcond_i_reg_301 <= exitcond_i_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_187))) then
                isNeg_reg_286 <= sh_assign_fu_143_p2(8 downto 8);
                loc_V_1_reg_281 <= loc_V_1_fu_135_p1;
                p_Val2_s_reg_276 <= p_Val2_s_fu_121_p1;
                sh_assign_1_reg_291 <= sh_assign_1_fu_167_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210)))) then
                proc_reg_305 <= proc_fu_270_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_187, cond_reg_297, exitcond_i_fu_264_p2, ap_sig_210, ap_sig_209)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_187)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = cond_reg_297)) then
                    ap_NS_fsm <= ap_ST_st17_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                end if;
            when ap_ST_pp0_stg0_fsm_3 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210)) and not((ap_const_lv1_0 = exitcond_i_fu_264_p2)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_4;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210)) and not((ap_const_lv1_0 = exitcond_i_fu_264_p2)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                end if;
            when ap_ST_pp0_stg1_fsm_4 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_4;
                end if;
            when ap_ST_pp0_stg2_fsm_5 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_5;
                end if;
            when ap_ST_pp0_stg3_fsm_6 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg4_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_6;
                end if;
            when ap_ST_pp0_stg4_fsm_7 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg4_fsm_7;
                end if;
            when ap_ST_pp0_stg5_fsm_8 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_8;
                end if;
            when ap_ST_pp0_stg6_fsm_9 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg7_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_9;
                end if;
            when ap_ST_pp0_stg7_fsm_10 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg8_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg7_fsm_10;
                end if;
            when ap_ST_pp0_stg8_fsm_11 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) then
                    ap_NS_fsm <= ap_ST_pp0_stg9_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg8_fsm_11;
                end if;
            when ap_ST_pp0_stg9_fsm_12 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) then
                    ap_NS_fsm <= ap_ST_pp0_stg10_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg9_fsm_12;
                end if;
            when ap_ST_pp0_stg10_fsm_13 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) then
                    ap_NS_fsm <= ap_ST_pp0_stg11_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg10_fsm_13;
                end if;
            when ap_ST_pp0_stg11_fsm_14 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg11_fsm_14;
                end if;
            when ap_ST_st17_fsm_15 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st17_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_15)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st17_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_15)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_103_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_103 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_122_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_122 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_132_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_132 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_142_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_142 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_152_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_152 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_162_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_162 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_172_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_172 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_187_assign_proc : process(ap_start, strm_in_V_empty_n)
    begin
                ap_sig_187 <= ((ap_start = ap_const_logic_0) or (strm_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_203_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_203 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_209_assign_proc : process(strm_out_V_full_n, exitcond_i_reg_301)
    begin
                ap_sig_209 <= ((exitcond_i_reg_301 = ap_const_lv1_0) and (strm_out_V_full_n = ap_const_logic_0));
    end process;


    ap_sig_210_assign_proc : process(strm_in_V_empty_n, strm_out_V_full_n, exitcond_i_reg_301)
    begin
                ap_sig_210 <= (((exitcond_i_reg_301 = ap_const_lv1_0) and (strm_in_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_301 = ap_const_lv1_0) and (strm_out_V_full_n = ap_const_logic_0)));
    end process;


    ap_sig_223_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_223 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_31_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_31 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_391_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_391 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_55_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_55 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_70_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_70 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_80_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_80 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_90 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_3_assign_proc : process(ap_sig_90)
    begin
        if (ap_sig_90) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg10_fsm_13_assign_proc : process(ap_sig_70)
    begin
        if (ap_sig_70) then 
            ap_sig_cseq_ST_pp0_stg10_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg10_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg11_fsm_14_assign_proc : process(ap_sig_80)
    begin
        if (ap_sig_80) then 
            ap_sig_cseq_ST_pp0_stg11_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg11_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg1_fsm_4_assign_proc : process(ap_sig_103)
    begin
        if (ap_sig_103) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg2_fsm_5_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_pp0_stg2_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg2_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg3_fsm_6_assign_proc : process(ap_sig_122)
    begin
        if (ap_sig_122) then 
            ap_sig_cseq_ST_pp0_stg3_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg3_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg4_fsm_7_assign_proc : process(ap_sig_132)
    begin
        if (ap_sig_132) then 
            ap_sig_cseq_ST_pp0_stg4_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg4_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg5_fsm_8_assign_proc : process(ap_sig_142)
    begin
        if (ap_sig_142) then 
            ap_sig_cseq_ST_pp0_stg5_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg5_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg6_fsm_9_assign_proc : process(ap_sig_152)
    begin
        if (ap_sig_152) then 
            ap_sig_cseq_ST_pp0_stg6_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg6_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg7_fsm_10_assign_proc : process(ap_sig_162)
    begin
        if (ap_sig_162) then 
            ap_sig_cseq_ST_pp0_stg7_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg7_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg8_fsm_11_assign_proc : process(ap_sig_172)
    begin
        if (ap_sig_172) then 
            ap_sig_cseq_ST_pp0_stg8_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg8_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg9_fsm_12_assign_proc : process(ap_sig_55)
    begin
        if (ap_sig_55) then 
            ap_sig_cseq_ST_pp0_stg9_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg9_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_15_assign_proc : process(ap_sig_391)
    begin
        if (ap_sig_391) then 
            ap_sig_cseq_ST_st17_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_31)
    begin
        if (ap_sig_31) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_203)
    begin
        if (ap_sig_203) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_223)
    begin
        if (ap_sig_223) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_258_p2 <= "1" when (p_Val2_5_fu_250_p3 = ap_const_lv32_1) else "0";
    exitcond_i_fu_264_p2 <= "1" when (proc_i_phi_fu_114_p4 = ap_const_lv4_8) else "0";
    isNeg_fu_149_p3 <= sh_assign_fu_143_p2(8 downto 8);
    loc_V_1_fu_135_p1 <= p_Val2_s_fu_121_p1(23 - 1 downto 0);
    loc_V_fu_125_p4 <= p_Val2_s_fu_121_p1(30 downto 23);
    p_Result_1_fu_182_p3 <= (ap_const_lv1_1 & loc_V_1_reg_281);
    p_Result_s_fu_175_p3 <= p_Val2_s_reg_276(31 downto 31);
    p_Val2_3_fu_237_p3 <= 
        tmp_s_fu_223_p1 when (isNeg_reg_286(0) = '1') else 
        tmp_1_fu_227_p4;
    p_Val2_5_fu_250_p3 <= 
        p_Val2_7_i_i_fu_244_p2 when (p_Result_s_fu_175_p3(0) = '1') else 
        p_Val2_3_fu_237_p3;
    p_Val2_7_i_i_fu_244_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_3_fu_237_p3));
    p_Val2_s_fu_121_p1 <= strm_in_V_dout;
    proc_fu_270_p2 <= std_logic_vector(unsigned(proc_i_phi_fu_114_p4) + unsigned(ap_const_lv4_1));

    proc_i_phi_fu_114_p4_assign_proc : process(exitcond_i_reg_301, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, proc_i_reg_110, proc_reg_305)
    begin
        if (((exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            proc_i_phi_fu_114_p4 <= proc_reg_305;
        else 
            proc_i_phi_fu_114_p4 <= proc_i_reg_110;
        end if; 
    end process;

        sh_assign_1_cast_cast_fu_196_p1 <= std_logic_vector(resize(signed(sh_assign_1_reg_291),24));

        sh_assign_1_cast_fu_193_p1 <= std_logic_vector(resize(signed(sh_assign_1_reg_291),32));

    sh_assign_1_fu_167_p3 <= 
        tmp_1_i_i_cast_fu_163_p1 when (isNeg_fu_149_p3(0) = '1') else 
        sh_assign_fu_143_p2;
    sh_assign_fu_143_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_cast1_fu_139_p1));

    strm_in_V_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, strm_in_V_empty_n, ap_sig_cseq_ST_pp0_stg9_fsm_12, ap_reg_ppiten_pp0_it0, exitcond_i_reg_301, ap_sig_cseq_ST_pp0_stg10_fsm_13, ap_sig_cseq_ST_pp0_stg11_fsm_14, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_12) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_14)) or ((exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
            strm_in_V_blk_n <= strm_in_V_empty_n;
        else 
            strm_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_pp0_stg9_fsm_12, ap_reg_ppiten_pp0_it0, exitcond_i_reg_301, ap_sig_cseq_ST_pp0_stg10_fsm_13, ap_sig_cseq_ST_pp0_stg11_fsm_14, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_sig_187, ap_sig_210)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_187)) or ((exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_12) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))))) then 
            strm_in_V_read <= ap_const_logic_1;
        else 
            strm_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_blk_n_assign_proc : process(strm_out_V_full_n, ap_sig_cseq_ST_pp0_stg9_fsm_12, ap_reg_ppiten_pp0_it0, exitcond_i_reg_301, ap_sig_cseq_ST_pp0_stg10_fsm_13, ap_sig_cseq_ST_pp0_stg11_fsm_14, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg1_fsm_4, ap_sig_cseq_ST_pp0_stg2_fsm_5, ap_sig_cseq_ST_pp0_stg3_fsm_6, ap_sig_cseq_ST_pp0_stg4_fsm_7, ap_sig_cseq_ST_pp0_stg5_fsm_8, ap_sig_cseq_ST_pp0_stg6_fsm_9, ap_sig_cseq_ST_pp0_stg7_fsm_10, ap_sig_cseq_ST_pp0_stg8_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_12) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_14)) or ((exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_7)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_11)))) then 
            strm_out_V_blk_n <= strm_out_V_full_n;
        else 
            strm_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_din <= ap_const_lv32_0;

    strm_out_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg9_fsm_12, ap_reg_ppiten_pp0_it0, exitcond_i_reg_301, ap_sig_cseq_ST_pp0_stg10_fsm_13, ap_sig_cseq_ST_pp0_stg11_fsm_14, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg1_fsm_4, ap_sig_cseq_ST_pp0_stg2_fsm_5, ap_sig_cseq_ST_pp0_stg3_fsm_6, ap_sig_cseq_ST_pp0_stg4_fsm_7, ap_sig_cseq_ST_pp0_stg5_fsm_8, ap_sig_cseq_ST_pp0_stg6_fsm_9, ap_sig_cseq_ST_pp0_stg7_fsm_10, ap_sig_cseq_ST_pp0_stg8_fsm_11, ap_sig_210, ap_sig_209)
    begin
        if ((((exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_210))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_12) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_210))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_6) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_7) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_8) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_9) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_10) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_i_reg_301 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_209))))) then 
            strm_out_V_write <= ap_const_logic_1;
        else 
            strm_out_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_227_p4 <= tmp_5_i_i_fu_209_p2(54 downto 23);
        tmp_1_i_i_cast_fu_163_p1 <= std_logic_vector(resize(signed(tmp_1_i_i_fu_157_p2),9));

    tmp_1_i_i_fu_157_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_fu_125_p4));
    tmp_2_i_i_fu_199_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_cast_fu_193_p1),78));
    tmp_3_i_i_fu_203_p2 <= std_logic_vector(shift_right(unsigned(p_Result_1_fu_182_p3),to_integer(unsigned('0' & sh_assign_1_cast_cast_fu_196_p1(24-1 downto 0)))));
    tmp_5_i_i_fu_209_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_i_fu_189_p1),to_integer(unsigned('0' & tmp_2_i_i_fu_199_p1(31-1 downto 0)))));
    tmp_fu_215_p3 <= tmp_3_i_i_fu_203_p2(23 downto 23);
    tmp_i_i_fu_189_p1 <= std_logic_vector(resize(unsigned(p_Result_1_fu_182_p3),78));
    tmp_i_i_i_cast1_fu_139_p1 <= std_logic_vector(resize(unsigned(loc_V_fu_125_p4),9));
    tmp_s_fu_223_p1 <= std_logic_vector(resize(unsigned(tmp_fu_215_p3),32));
end behav;
