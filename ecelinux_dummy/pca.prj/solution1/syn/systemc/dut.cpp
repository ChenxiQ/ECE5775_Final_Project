// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> dut::ap_ST_st1_fsm_0 = "1";
const sc_lv<16> dut::ap_ST_st2_fsm_1 = "10";
const sc_lv<16> dut::ap_ST_st3_fsm_2 = "100";
const sc_lv<16> dut::ap_ST_pp0_stg0_fsm_3 = "1000";
const sc_lv<16> dut::ap_ST_pp0_stg1_fsm_4 = "10000";
const sc_lv<16> dut::ap_ST_pp0_stg2_fsm_5 = "100000";
const sc_lv<16> dut::ap_ST_pp0_stg3_fsm_6 = "1000000";
const sc_lv<16> dut::ap_ST_pp0_stg4_fsm_7 = "10000000";
const sc_lv<16> dut::ap_ST_pp0_stg5_fsm_8 = "100000000";
const sc_lv<16> dut::ap_ST_pp0_stg6_fsm_9 = "1000000000";
const sc_lv<16> dut::ap_ST_pp0_stg7_fsm_10 = "10000000000";
const sc_lv<16> dut::ap_ST_pp0_stg8_fsm_11 = "100000000000";
const sc_lv<16> dut::ap_ST_pp0_stg9_fsm_12 = "1000000000000";
const sc_lv<16> dut::ap_ST_pp0_stg10_fsm_13 = "10000000000000";
const sc_lv<16> dut::ap_ST_pp0_stg11_fsm_14 = "100000000000000";
const sc_lv<16> dut::ap_ST_st17_fsm_15 = "1000000000000000";
const sc_lv<32> dut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut::ap_const_lv1_1 = "1";
const sc_lv<32> dut::ap_const_lv32_C = "1100";
const sc_lv<1> dut::ap_const_lv1_0 = "0";
const sc_lv<32> dut::ap_const_lv32_D = "1101";
const sc_lv<32> dut::ap_const_lv32_E = "1110";
const sc_lv<32> dut::ap_const_lv32_3 = "11";
const sc_lv<32> dut::ap_const_lv32_4 = "100";
const sc_lv<32> dut::ap_const_lv32_5 = "101";
const sc_lv<32> dut::ap_const_lv32_6 = "110";
const sc_lv<32> dut::ap_const_lv32_7 = "111";
const sc_lv<32> dut::ap_const_lv32_8 = "1000";
const sc_lv<32> dut::ap_const_lv32_9 = "1001";
const sc_lv<32> dut::ap_const_lv32_A = "1010";
const sc_lv<32> dut::ap_const_lv32_B = "1011";
const sc_lv<32> dut::ap_const_lv32_1 = "1";
const sc_lv<32> dut::ap_const_lv32_2 = "10";
const sc_lv<4> dut::ap_const_lv4_0 = "0000";
const sc_lv<32> dut::ap_const_lv32_17 = "10111";
const sc_lv<32> dut::ap_const_lv32_1E = "11110";
const sc_lv<9> dut::ap_const_lv9_181 = "110000001";
const sc_lv<8> dut::ap_const_lv8_7F = "1111111";
const sc_lv<32> dut::ap_const_lv32_1F = "11111";
const sc_lv<32> dut::ap_const_lv32_36 = "110110";
const sc_lv<4> dut::ap_const_lv4_8 = "1000";
const sc_lv<4> dut::ap_const_lv4_1 = "1";
const sc_lv<32> dut::ap_const_lv32_F = "1111";

dut::dut(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_15 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_15 );

    SC_METHOD(thread_ap_sig_103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_142);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_152);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_162);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_172);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_187);
    sensitive << ( ap_start );
    sensitive << ( strm_in_V_empty_n );

    SC_METHOD(thread_ap_sig_203);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_209);
    sensitive << ( strm_out_V_full_n );
    sensitive << ( exitcond_i_reg_301 );

    SC_METHOD(thread_ap_sig_210);
    sensitive << ( strm_in_V_empty_n );
    sensitive << ( strm_out_V_full_n );
    sensitive << ( exitcond_i_reg_301 );

    SC_METHOD(thread_ap_sig_223);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_391);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_3);
    sensitive << ( ap_sig_90 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg10_fsm_13);
    sensitive << ( ap_sig_70 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg11_fsm_14);
    sensitive << ( ap_sig_80 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_4);
    sensitive << ( ap_sig_103 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg2_fsm_5);
    sensitive << ( ap_sig_112 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg3_fsm_6);
    sensitive << ( ap_sig_122 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg4_fsm_7);
    sensitive << ( ap_sig_132 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg5_fsm_8);
    sensitive << ( ap_sig_142 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg6_fsm_9);
    sensitive << ( ap_sig_152 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg7_fsm_10);
    sensitive << ( ap_sig_162 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg8_fsm_11);
    sensitive << ( ap_sig_172 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg9_fsm_12);
    sensitive << ( ap_sig_55 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_15);
    sensitive << ( ap_sig_391 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_31 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_203 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_223 );

    SC_METHOD(thread_cond_fu_258_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( p_Val2_5_fu_250_p3 );

    SC_METHOD(thread_exitcond_i_fu_264_p2);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_210 );
    sensitive << ( proc_i_phi_fu_114_p4 );

    SC_METHOD(thread_isNeg_fu_149_p3);
    sensitive << ( sh_assign_fu_143_p2 );

    SC_METHOD(thread_loc_V_1_fu_135_p1);
    sensitive << ( p_Val2_s_fu_121_p1 );

    SC_METHOD(thread_loc_V_fu_125_p4);
    sensitive << ( p_Val2_s_fu_121_p1 );

    SC_METHOD(thread_p_Result_1_fu_182_p3);
    sensitive << ( loc_V_1_reg_281 );

    SC_METHOD(thread_p_Result_s_fu_175_p3);
    sensitive << ( p_Val2_s_reg_276 );

    SC_METHOD(thread_p_Val2_3_fu_237_p3);
    sensitive << ( isNeg_reg_286 );
    sensitive << ( tmp_s_fu_223_p1 );
    sensitive << ( tmp_1_fu_227_p4 );

    SC_METHOD(thread_p_Val2_5_fu_250_p3);
    sensitive << ( p_Val2_3_fu_237_p3 );
    sensitive << ( p_Result_s_fu_175_p3 );
    sensitive << ( p_Val2_7_i_i_fu_244_p2 );

    SC_METHOD(thread_p_Val2_7_i_i_fu_244_p2);
    sensitive << ( p_Val2_3_fu_237_p3 );

    SC_METHOD(thread_p_Val2_s_fu_121_p1);
    sensitive << ( strm_in_V_dout );

    SC_METHOD(thread_proc_fu_270_p2);
    sensitive << ( proc_i_phi_fu_114_p4 );

    SC_METHOD(thread_proc_i_phi_fu_114_p4);
    sensitive << ( exitcond_i_reg_301 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( proc_i_reg_110 );
    sensitive << ( proc_reg_305 );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_196_p1);
    sensitive << ( sh_assign_1_reg_291 );

    SC_METHOD(thread_sh_assign_1_cast_fu_193_p1);
    sensitive << ( sh_assign_1_reg_291 );

    SC_METHOD(thread_sh_assign_1_fu_167_p3);
    sensitive << ( isNeg_fu_149_p3 );
    sensitive << ( sh_assign_fu_143_p2 );
    sensitive << ( tmp_1_i_i_cast_fu_163_p1 );

    SC_METHOD(thread_sh_assign_fu_143_p2);
    sensitive << ( tmp_i_i_i_cast1_fu_139_p1 );

    SC_METHOD(thread_strm_in_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( strm_in_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond_i_reg_301 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_strm_in_V_read);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond_i_reg_301 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_187 );
    sensitive << ( ap_sig_210 );

    SC_METHOD(thread_strm_out_V_blk_n);
    sensitive << ( strm_out_V_full_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond_i_reg_301 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_11 );

    SC_METHOD(thread_strm_out_V_din);
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond_i_reg_301 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_11 );
    sensitive << ( ap_sig_210 );
    sensitive << ( ap_sig_209 );

    SC_METHOD(thread_strm_out_V_write);
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_12 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond_i_reg_301 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_3 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_11 );
    sensitive << ( ap_sig_210 );
    sensitive << ( ap_sig_209 );

    SC_METHOD(thread_tmp_1_fu_227_p4);
    sensitive << ( tmp_5_i_i_fu_209_p2 );

    SC_METHOD(thread_tmp_1_i_i_cast_fu_163_p1);
    sensitive << ( tmp_1_i_i_fu_157_p2 );

    SC_METHOD(thread_tmp_1_i_i_fu_157_p2);
    sensitive << ( loc_V_fu_125_p4 );

    SC_METHOD(thread_tmp_2_i_i_fu_199_p1);
    sensitive << ( sh_assign_1_cast_fu_193_p1 );

    SC_METHOD(thread_tmp_3_i_i_fu_203_p2);
    sensitive << ( p_Result_1_fu_182_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_196_p1 );

    SC_METHOD(thread_tmp_5_i_i_fu_209_p2);
    sensitive << ( tmp_i_i_fu_189_p1 );
    sensitive << ( tmp_2_i_i_fu_199_p1 );

    SC_METHOD(thread_tmp_fu_215_p3);
    sensitive << ( tmp_3_i_i_fu_203_p2 );

    SC_METHOD(thread_tmp_i_i_fu_189_p1);
    sensitive << ( p_Result_1_fu_182_p3 );

    SC_METHOD(thread_tmp_i_i_i_cast1_fu_139_p1);
    sensitive << ( loc_V_fu_125_p4 );

    SC_METHOD(thread_tmp_s_fu_223_p1);
    sensitive << ( tmp_fu_215_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_187 );
    sensitive << ( cond_reg_297 );
    sensitive << ( exitcond_i_fu_264_p2 );
    sensitive << ( ap_sig_210 );
    sensitive << ( ap_sig_209 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, strm_in_V_dout, "(port)strm_in_V_dout");
    sc_trace(mVcdFile, strm_in_V_empty_n, "(port)strm_in_V_empty_n");
    sc_trace(mVcdFile, strm_in_V_read, "(port)strm_in_V_read");
    sc_trace(mVcdFile, strm_out_V_din, "(port)strm_out_V_din");
    sc_trace(mVcdFile, strm_out_V_full_n, "(port)strm_out_V_full_n");
    sc_trace(mVcdFile, strm_out_V_write, "(port)strm_out_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_31, "ap_sig_31");
    sc_trace(mVcdFile, strm_in_V_blk_n, "strm_in_V_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg9_fsm_12, "ap_sig_cseq_ST_pp0_stg9_fsm_12");
    sc_trace(mVcdFile, ap_sig_55, "ap_sig_55");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, exitcond_i_reg_301, "exitcond_i_reg_301");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg10_fsm_13, "ap_sig_cseq_ST_pp0_stg10_fsm_13");
    sc_trace(mVcdFile, ap_sig_70, "ap_sig_70");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg11_fsm_14, "ap_sig_cseq_ST_pp0_stg11_fsm_14");
    sc_trace(mVcdFile, ap_sig_80, "ap_sig_80");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_3, "ap_sig_cseq_ST_pp0_stg0_fsm_3");
    sc_trace(mVcdFile, ap_sig_90, "ap_sig_90");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, strm_out_V_blk_n, "strm_out_V_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_4, "ap_sig_cseq_ST_pp0_stg1_fsm_4");
    sc_trace(mVcdFile, ap_sig_103, "ap_sig_103");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg2_fsm_5, "ap_sig_cseq_ST_pp0_stg2_fsm_5");
    sc_trace(mVcdFile, ap_sig_112, "ap_sig_112");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg3_fsm_6, "ap_sig_cseq_ST_pp0_stg3_fsm_6");
    sc_trace(mVcdFile, ap_sig_122, "ap_sig_122");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg4_fsm_7, "ap_sig_cseq_ST_pp0_stg4_fsm_7");
    sc_trace(mVcdFile, ap_sig_132, "ap_sig_132");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg5_fsm_8, "ap_sig_cseq_ST_pp0_stg5_fsm_8");
    sc_trace(mVcdFile, ap_sig_142, "ap_sig_142");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg6_fsm_9, "ap_sig_cseq_ST_pp0_stg6_fsm_9");
    sc_trace(mVcdFile, ap_sig_152, "ap_sig_152");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg7_fsm_10, "ap_sig_cseq_ST_pp0_stg7_fsm_10");
    sc_trace(mVcdFile, ap_sig_162, "ap_sig_162");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg8_fsm_11, "ap_sig_cseq_ST_pp0_stg8_fsm_11");
    sc_trace(mVcdFile, ap_sig_172, "ap_sig_172");
    sc_trace(mVcdFile, proc_i_reg_110, "proc_i_reg_110");
    sc_trace(mVcdFile, p_Val2_s_fu_121_p1, "p_Val2_s_fu_121_p1");
    sc_trace(mVcdFile, p_Val2_s_reg_276, "p_Val2_s_reg_276");
    sc_trace(mVcdFile, ap_sig_187, "ap_sig_187");
    sc_trace(mVcdFile, loc_V_1_fu_135_p1, "loc_V_1_fu_135_p1");
    sc_trace(mVcdFile, loc_V_1_reg_281, "loc_V_1_reg_281");
    sc_trace(mVcdFile, isNeg_fu_149_p3, "isNeg_fu_149_p3");
    sc_trace(mVcdFile, isNeg_reg_286, "isNeg_reg_286");
    sc_trace(mVcdFile, sh_assign_1_fu_167_p3, "sh_assign_1_fu_167_p3");
    sc_trace(mVcdFile, sh_assign_1_reg_291, "sh_assign_1_reg_291");
    sc_trace(mVcdFile, cond_fu_258_p2, "cond_fu_258_p2");
    sc_trace(mVcdFile, cond_reg_297, "cond_reg_297");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_203, "ap_sig_203");
    sc_trace(mVcdFile, exitcond_i_fu_264_p2, "exitcond_i_fu_264_p2");
    sc_trace(mVcdFile, ap_sig_210, "ap_sig_210");
    sc_trace(mVcdFile, proc_fu_270_p2, "proc_fu_270_p2");
    sc_trace(mVcdFile, proc_reg_305, "proc_reg_305");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_223, "ap_sig_223");
    sc_trace(mVcdFile, proc_i_phi_fu_114_p4, "proc_i_phi_fu_114_p4");
    sc_trace(mVcdFile, ap_sig_209, "ap_sig_209");
    sc_trace(mVcdFile, loc_V_fu_125_p4, "loc_V_fu_125_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast1_fu_139_p1, "tmp_i_i_i_cast1_fu_139_p1");
    sc_trace(mVcdFile, sh_assign_fu_143_p2, "sh_assign_fu_143_p2");
    sc_trace(mVcdFile, tmp_1_i_i_fu_157_p2, "tmp_1_i_i_fu_157_p2");
    sc_trace(mVcdFile, tmp_1_i_i_cast_fu_163_p1, "tmp_1_i_i_cast_fu_163_p1");
    sc_trace(mVcdFile, p_Result_1_fu_182_p3, "p_Result_1_fu_182_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_193_p1, "sh_assign_1_cast_fu_193_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_196_p1, "sh_assign_1_cast_cast_fu_196_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_189_p1, "tmp_i_i_fu_189_p1");
    sc_trace(mVcdFile, tmp_2_i_i_fu_199_p1, "tmp_2_i_i_fu_199_p1");
    sc_trace(mVcdFile, tmp_3_i_i_fu_203_p2, "tmp_3_i_i_fu_203_p2");
    sc_trace(mVcdFile, tmp_fu_215_p3, "tmp_fu_215_p3");
    sc_trace(mVcdFile, tmp_5_i_i_fu_209_p2, "tmp_5_i_i_fu_209_p2");
    sc_trace(mVcdFile, tmp_s_fu_223_p1, "tmp_s_fu_223_p1");
    sc_trace(mVcdFile, tmp_1_fu_227_p4, "tmp_1_fu_227_p4");
    sc_trace(mVcdFile, p_Val2_3_fu_237_p3, "p_Val2_3_fu_237_p3");
    sc_trace(mVcdFile, p_Result_s_fu_175_p3, "p_Result_s_fu_175_p3");
    sc_trace(mVcdFile, p_Val2_7_i_i_fu_244_p2, "p_Val2_7_i_i_fu_244_p2");
    sc_trace(mVcdFile, p_Val2_5_fu_250_p3, "p_Val2_5_fu_250_p3");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_15, "ap_sig_cseq_ST_st17_fsm_15");
    sc_trace(mVcdFile, ap_sig_391, "ap_sig_391");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dut.hdltvin.dat");
    mHdltvoutHandle.open("dut.hdltvout.dat");
}

dut::~dut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void dut::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_264_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_297.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_14.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_297.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_14.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read()) && 
                     !esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_297.read()))) {
        proc_i_reg_110 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read()))) {
        proc_i_reg_110 = proc_reg_305.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        cond_reg_297 = cond_fu_258_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read()))) {
        exitcond_i_reg_301 = exitcond_i_fu_264_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !ap_sig_187.read())) {
        isNeg_reg_286 = sh_assign_fu_143_p2.read().range(8, 8);
        loc_V_1_reg_281 = loc_V_1_fu_135_p1.read();
        p_Val2_s_reg_276 = p_Val2_s_fu_121_p1.read();
        sh_assign_1_reg_291 = sh_assign_1_fu_167_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read()))) {
        proc_reg_305 = proc_fu_270_p2.read();
    }
}

void dut::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_15.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_15.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_103() {
    ap_sig_103 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void dut::thread_ap_sig_112() {
    ap_sig_112 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void dut::thread_ap_sig_122() {
    ap_sig_122 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void dut::thread_ap_sig_132() {
    ap_sig_132 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void dut::thread_ap_sig_142() {
    ap_sig_142 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void dut::thread_ap_sig_152() {
    ap_sig_152 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void dut::thread_ap_sig_162() {
    ap_sig_162 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void dut::thread_ap_sig_172() {
    ap_sig_172 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void dut::thread_ap_sig_187() {
    ap_sig_187 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(strm_in_V_empty_n.read(), ap_const_logic_0));
}

void dut::thread_ap_sig_203() {
    ap_sig_203 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut::thread_ap_sig_209() {
    ap_sig_209 = (esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(strm_out_V_full_n.read(), ap_const_logic_0));
}

void dut::thread_ap_sig_210() {
    ap_sig_210 = ((esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(strm_in_V_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(strm_out_V_full_n.read(), ap_const_logic_0)));
}

void dut::thread_ap_sig_223() {
    ap_sig_223 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut::thread_ap_sig_31() {
    ap_sig_31 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut::thread_ap_sig_391() {
    ap_sig_391 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void dut::thread_ap_sig_55() {
    ap_sig_55 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void dut::thread_ap_sig_70() {
    ap_sig_70 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void dut::thread_ap_sig_80() {
    ap_sig_80 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void dut::thread_ap_sig_90() {
    ap_sig_90 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void dut::thread_ap_sig_cseq_ST_pp0_stg0_fsm_3() {
    if (ap_sig_90.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg10_fsm_13() {
    if (ap_sig_70.read()) {
        ap_sig_cseq_ST_pp0_stg10_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg10_fsm_13 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg11_fsm_14() {
    if (ap_sig_80.read()) {
        ap_sig_cseq_ST_pp0_stg11_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg11_fsm_14 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg1_fsm_4() {
    if (ap_sig_103.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_4 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg2_fsm_5() {
    if (ap_sig_112.read()) {
        ap_sig_cseq_ST_pp0_stg2_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg2_fsm_5 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg3_fsm_6() {
    if (ap_sig_122.read()) {
        ap_sig_cseq_ST_pp0_stg3_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg3_fsm_6 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg4_fsm_7() {
    if (ap_sig_132.read()) {
        ap_sig_cseq_ST_pp0_stg4_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg4_fsm_7 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg5_fsm_8() {
    if (ap_sig_142.read()) {
        ap_sig_cseq_ST_pp0_stg5_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg5_fsm_8 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg6_fsm_9() {
    if (ap_sig_152.read()) {
        ap_sig_cseq_ST_pp0_stg6_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg6_fsm_9 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg7_fsm_10() {
    if (ap_sig_162.read()) {
        ap_sig_cseq_ST_pp0_stg7_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg7_fsm_10 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg8_fsm_11() {
    if (ap_sig_172.read()) {
        ap_sig_cseq_ST_pp0_stg8_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg8_fsm_11 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_pp0_stg9_fsm_12() {
    if (ap_sig_55.read()) {
        ap_sig_cseq_ST_pp0_stg9_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg9_fsm_12 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_st17_fsm_15() {
    if (ap_sig_391.read()) {
        ap_sig_cseq_ST_st17_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_15 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_31.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_203.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_223.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut::thread_cond_fu_258_p2() {
    cond_fu_258_p2 = (!p_Val2_5_fu_250_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(p_Val2_5_fu_250_p3.read() == ap_const_lv32_1);
}

void dut::thread_exitcond_i_fu_264_p2() {
    exitcond_i_fu_264_p2 = (!proc_i_phi_fu_114_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(proc_i_phi_fu_114_p4.read() == ap_const_lv4_8);
}

void dut::thread_isNeg_fu_149_p3() {
    isNeg_fu_149_p3 = sh_assign_fu_143_p2.read().range(8, 8);
}

void dut::thread_loc_V_1_fu_135_p1() {
    loc_V_1_fu_135_p1 = p_Val2_s_fu_121_p1.read().range(23-1, 0);
}

void dut::thread_loc_V_fu_125_p4() {
    loc_V_fu_125_p4 = p_Val2_s_fu_121_p1.read().range(30, 23);
}

void dut::thread_p_Result_1_fu_182_p3() {
    p_Result_1_fu_182_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_reg_281.read());
}

void dut::thread_p_Result_s_fu_175_p3() {
    p_Result_s_fu_175_p3 = p_Val2_s_reg_276.read().range(31, 31);
}

void dut::thread_p_Val2_3_fu_237_p3() {
    p_Val2_3_fu_237_p3 = (!isNeg_reg_286.read()[0].is_01())? sc_lv<32>(): ((isNeg_reg_286.read()[0].to_bool())? tmp_s_fu_223_p1.read(): tmp_1_fu_227_p4.read());
}

void dut::thread_p_Val2_5_fu_250_p3() {
    p_Val2_5_fu_250_p3 = (!p_Result_s_fu_175_p3.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_fu_175_p3.read()[0].to_bool())? p_Val2_7_i_i_fu_244_p2.read(): p_Val2_3_fu_237_p3.read());
}

void dut::thread_p_Val2_7_i_i_fu_244_p2() {
    p_Val2_7_i_i_fu_244_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_3_fu_237_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_3_fu_237_p3.read()));
}

void dut::thread_p_Val2_s_fu_121_p1() {
    p_Val2_s_fu_121_p1 = strm_in_V_dout.read();
}

void dut::thread_proc_fu_270_p2() {
    proc_fu_270_p2 = (!proc_i_phi_fu_114_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(proc_i_phi_fu_114_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dut::thread_proc_i_phi_fu_114_p4() {
    if ((esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        proc_i_phi_fu_114_p4 = proc_reg_305.read();
    } else {
        proc_i_phi_fu_114_p4 = proc_i_reg_110.read();
    }
}

void dut::thread_sh_assign_1_cast_cast_fu_196_p1() {
    sh_assign_1_cast_cast_fu_196_p1 = esl_sext<24,9>(sh_assign_1_reg_291.read());
}

void dut::thread_sh_assign_1_cast_fu_193_p1() {
    sh_assign_1_cast_fu_193_p1 = esl_sext<32,9>(sh_assign_1_reg_291.read());
}

void dut::thread_sh_assign_1_fu_167_p3() {
    sh_assign_1_fu_167_p3 = (!isNeg_fu_149_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_149_p3.read()[0].to_bool())? tmp_1_i_i_cast_fu_163_p1.read(): sh_assign_fu_143_p2.read());
}

void dut::thread_sh_assign_fu_143_p2() {
    sh_assign_fu_143_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_cast1_fu_139_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_cast1_fu_139_p1.read()));
}

void dut::thread_strm_in_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_12.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_14.read())) || 
         (esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        strm_in_V_blk_n = strm_in_V_empty_n.read();
    } else {
        strm_in_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_in_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !ap_sig_187.read()) || 
         (esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_12.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_14.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())))) {
        strm_in_V_read = ap_const_logic_1;
    } else {
        strm_in_V_read = ap_const_logic_0;
    }
}

void dut::thread_strm_out_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_12.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_14.read())) || 
         (esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_11.read())))) {
        strm_out_V_blk_n = strm_out_V_full_n.read();
    } else {
        strm_out_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_out_V_din() {
    strm_out_V_din = ap_const_lv32_0;
}

void dut::thread_strm_out_V_write() {
    if (((esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_12.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_13.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_14.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_9.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_10.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond_i_reg_301.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_11.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())))) {
        strm_out_V_write = ap_const_logic_1;
    } else {
        strm_out_V_write = ap_const_logic_0;
    }
}

void dut::thread_tmp_1_fu_227_p4() {
    tmp_1_fu_227_p4 = tmp_5_i_i_fu_209_p2.read().range(54, 23);
}

void dut::thread_tmp_1_i_i_cast_fu_163_p1() {
    tmp_1_i_i_cast_fu_163_p1 = esl_sext<9,8>(tmp_1_i_i_fu_157_p2.read());
}

void dut::thread_tmp_1_i_i_fu_157_p2() {
    tmp_1_i_i_fu_157_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_fu_125_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_fu_125_p4.read()));
}

void dut::thread_tmp_2_i_i_fu_199_p1() {
    tmp_2_i_i_fu_199_p1 = esl_zext<78,32>(sh_assign_1_cast_fu_193_p1.read());
}

void dut::thread_tmp_3_i_i_fu_203_p2() {
    tmp_3_i_i_fu_203_p2 = (!sh_assign_1_cast_cast_fu_196_p1.read().is_01())? sc_lv<24>(): p_Result_1_fu_182_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_196_p1.read().to_uint();
}

void dut::thread_tmp_5_i_i_fu_209_p2() {
    tmp_5_i_i_fu_209_p2 = (!tmp_2_i_i_fu_199_p1.read().is_01())? sc_lv<78>(): tmp_i_i_fu_189_p1.read() << (unsigned short)tmp_2_i_i_fu_199_p1.read().to_uint();
}

void dut::thread_tmp_fu_215_p3() {
    tmp_fu_215_p3 = tmp_3_i_i_fu_203_p2.read().range(23, 23);
}

void dut::thread_tmp_i_i_fu_189_p1() {
    tmp_i_i_fu_189_p1 = esl_zext<78,24>(p_Result_1_fu_182_p3.read());
}

void dut::thread_tmp_i_i_i_cast1_fu_139_p1() {
    tmp_i_i_i_cast1_fu_139_p1 = esl_zext<9,8>(loc_V_fu_125_p4.read());
}

void dut::thread_tmp_s_fu_223_p1() {
    tmp_s_fu_223_p1 = esl_zext<32,1>(tmp_fu_215_p3.read());
}

void dut::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_187.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, cond_reg_297.read())) {
                ap_NS_fsm = ap_ST_st17_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_264_p2.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_210.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_264_p2.read()))) {
                ap_NS_fsm = ap_ST_st17_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_4;
            }
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_5;
            }
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_6;
            }
            break;
        case 128 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_7;
            }
            break;
        case 256 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_8;
            }
            break;
        case 512 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg7_fsm_10;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_9;
            }
            break;
        case 1024 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg8_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg7_fsm_10;
            }
            break;
        case 2048 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_209.read())) {
                ap_NS_fsm = ap_ST_pp0_stg9_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg8_fsm_11;
            }
            break;
        case 4096 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) {
                ap_NS_fsm = ap_ST_pp0_stg10_fsm_13;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg9_fsm_12;
            }
            break;
        case 8192 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) {
                ap_NS_fsm = ap_ST_pp0_stg11_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg10_fsm_13;
            }
            break;
        case 16384 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_210.read())) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg11_fsm_14;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXX";
            break;
    }
}

void dut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_dout\" :  \"" << strm_in_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_empty_n\" :  \"" << strm_in_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_in_V_read\" :  \"" << strm_in_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_din\" :  \"" << strm_out_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_out_V_full_n\" :  \"" << strm_out_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_write\" :  \"" << strm_out_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

