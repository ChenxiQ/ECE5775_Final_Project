// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_HH_
#define _dut_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_calc_svd.h"

namespace ap_rtl {

struct dut : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > strm_in_V_dout;
    sc_in< sc_logic > strm_in_V_empty_n;
    sc_out< sc_logic > strm_in_V_read;
    sc_out< sc_lv<32> > strm_out_V_din;
    sc_in< sc_logic > strm_out_V_full_n;
    sc_out< sc_logic > strm_out_V_write;


    // Module declarations
    dut(sc_module_name name);
    SC_HAS_PROCESS(dut);

    ~dut();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dut_calc_svd* grp_dut_calc_svd_fu_76;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_18;
    sc_signal< sc_logic > strm_in_V_blk_n;
    sc_signal< sc_lv<32> > p_Val2_s_fu_84_p1;
    sc_signal< sc_lv<32> > p_Val2_s_reg_227;
    sc_signal< bool > ap_sig_41;
    sc_signal< sc_lv<23> > loc_V_1_fu_98_p1;
    sc_signal< sc_lv<23> > loc_V_1_reg_232;
    sc_signal< sc_lv<1> > isNeg_fu_112_p3;
    sc_signal< sc_lv<1> > isNeg_reg_237;
    sc_signal< sc_lv<9> > sh_assign_1_fu_130_p3;
    sc_signal< sc_lv<9> > sh_assign_1_reg_242;
    sc_signal< sc_lv<1> > cond_fu_221_p2;
    sc_signal< sc_lv<1> > cond_reg_248;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_57;
    sc_signal< sc_logic > grp_dut_calc_svd_fu_76_ap_start;
    sc_signal< sc_logic > grp_dut_calc_svd_fu_76_ap_done;
    sc_signal< sc_logic > grp_dut_calc_svd_fu_76_ap_idle;
    sc_signal< sc_logic > grp_dut_calc_svd_fu_76_ap_ready;
    sc_signal< sc_logic > grp_dut_calc_svd_fu_76_strm_in_V_read;
    sc_signal< sc_lv<32> > grp_dut_calc_svd_fu_76_strm_out_V_din;
    sc_signal< sc_logic > grp_dut_calc_svd_fu_76_strm_out_V_write;
    sc_signal< sc_logic > ap_reg_grp_dut_calc_svd_fu_76_ap_start;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_82;
    sc_signal< sc_lv<8> > loc_V_fu_88_p4;
    sc_signal< sc_lv<9> > tmp_i_i_i_cast1_fu_102_p1;
    sc_signal< sc_lv<9> > sh_assign_fu_106_p2;
    sc_signal< sc_lv<8> > tmp_13_i_i_fu_120_p2;
    sc_signal< sc_lv<9> > tmp_13_i_i_cast_fu_126_p1;
    sc_signal< sc_lv<24> > p_Result_1_fu_145_p3;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_156_p1;
    sc_signal< sc_lv<24> > sh_assign_1_cast_cast_fu_159_p1;
    sc_signal< sc_lv<78> > tmp_i_i_fu_152_p1;
    sc_signal< sc_lv<78> > tmp_14_i_i_fu_162_p1;
    sc_signal< sc_lv<24> > tmp_15_i_i_fu_166_p2;
    sc_signal< sc_lv<1> > tmp_fu_178_p3;
    sc_signal< sc_lv<78> > tmp_17_i_i_fu_172_p2;
    sc_signal< sc_lv<32> > tmp_2_fu_186_p1;
    sc_signal< sc_lv<32> > tmp_3_fu_190_p4;
    sc_signal< sc_lv<32> > p_Val2_3_fu_200_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_138_p3;
    sc_signal< sc_lv<32> > p_Val2_8_i_i_fu_207_p2;
    sc_signal< sc_lv<32> > p_Val2_5_fu_213_p3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_st2_fsm_1;
    static const sc_lv<3> ap_ST_st3_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_36;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_18();
    void thread_ap_sig_41();
    void thread_ap_sig_57();
    void thread_ap_sig_82();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_cond_fu_221_p2();
    void thread_grp_dut_calc_svd_fu_76_ap_start();
    void thread_isNeg_fu_112_p3();
    void thread_loc_V_1_fu_98_p1();
    void thread_loc_V_fu_88_p4();
    void thread_p_Result_1_fu_145_p3();
    void thread_p_Result_s_fu_138_p3();
    void thread_p_Val2_3_fu_200_p3();
    void thread_p_Val2_5_fu_213_p3();
    void thread_p_Val2_8_i_i_fu_207_p2();
    void thread_p_Val2_s_fu_84_p1();
    void thread_sh_assign_1_cast_cast_fu_159_p1();
    void thread_sh_assign_1_cast_fu_156_p1();
    void thread_sh_assign_1_fu_130_p3();
    void thread_sh_assign_fu_106_p2();
    void thread_strm_in_V_blk_n();
    void thread_strm_in_V_read();
    void thread_strm_out_V_din();
    void thread_strm_out_V_write();
    void thread_tmp_13_i_i_cast_fu_126_p1();
    void thread_tmp_13_i_i_fu_120_p2();
    void thread_tmp_14_i_i_fu_162_p1();
    void thread_tmp_15_i_i_fu_166_p2();
    void thread_tmp_17_i_i_fu_172_p2();
    void thread_tmp_2_fu_186_p1();
    void thread_tmp_3_fu_190_p4();
    void thread_tmp_fu_178_p3();
    void thread_tmp_i_i_fu_152_p1();
    void thread_tmp_i_i_i_cast1_fu_102_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
