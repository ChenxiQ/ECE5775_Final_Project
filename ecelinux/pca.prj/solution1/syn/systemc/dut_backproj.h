// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_backproj_HH_
#define _dut_backproj_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_fadd_32ns_32ns_32_5_full_dsp.h"
#include "dut_fmul_32ns_32ns_32_4_max_dsp.h"
#include "dut_backproj_A.h"

namespace ap_rtl {

struct dut_backproj : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > strm_in_V_dout;
    sc_in< sc_logic > strm_in_V_empty_n;
    sc_out< sc_logic > strm_in_V_read;
    sc_out< sc_lv<32> > strm_out_V_din;
    sc_in< sc_logic > strm_out_V_full_n;
    sc_out< sc_logic > strm_out_V_write;


    // Module declarations
    dut_backproj(sc_module_name name);
    SC_HAS_PROCESS(dut_backproj);

    ~dut_backproj();

    sc_trace_file* mVcdFile;

    dut_backproj_A* A_U;
    dut_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* dut_fadd_32ns_32ns_32_5_full_dsp_U1;
    dut_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* dut_fmul_32ns_32ns_32_4_max_dsp_U2;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_26;
    sc_signal< sc_logic > strm_in_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_2;
    sc_signal< bool > ap_sig_45;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond7_reg_281;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg1_fsm_4;
    sc_signal< bool > ap_sig_61;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_290;
    sc_signal< sc_logic > strm_out_V_blk_n;
    sc_signal< sc_lv<1> > tmp_2_reg_322;
    sc_signal< sc_lv<1> > ap_reg_ppstg_tmp_2_reg_322_pp1_iter1;
    sc_signal< sc_lv<10> > m_reg_127;
    sc_signal< sc_lv<17> > indvar_flatten_reg_139;
    sc_signal< sc_lv<10> > k_reg_150;
    sc_signal< sc_lv<1> > exitcond8_fu_175_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_94;
    sc_signal< sc_lv<4> > i_2_fu_181_p2;
    sc_signal< sc_lv<4> > i_2_reg_276;
    sc_signal< sc_lv<1> > exitcond7_fu_187_p2;
    sc_signal< bool > ap_sig_101;
    sc_signal< sc_lv<10> > m_2_fu_193_p2;
    sc_signal< sc_lv<10> > m_2_reg_285;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_204_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_3;
    sc_signal< bool > ap_sig_115;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_290_pp1_iter1;
    sc_signal< sc_lv<17> > indvar_flatten_next_fu_210_p2;
    sc_signal< sc_lv<17> > indvar_flatten_next_reg_294;
    sc_signal< sc_lv<10> > k_mid2_fu_222_p3;
    sc_signal< sc_lv<10> > k_mid2_reg_299;
    sc_signal< sc_lv<1> > tmp_8_fu_230_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_307;
    sc_signal< bool > ap_sig_130;
    sc_signal< bool > ap_sig_134;
    sc_signal< sc_lv<32> > tmp_171_reg_317;
    sc_signal< sc_lv<1> > tmp_2_fu_239_p2;
    sc_signal< sc_lv<10> > k_1_fu_244_p2;
    sc_signal< sc_lv<10> > k_1_reg_326;
    sc_signal< sc_lv<32> > A_q0;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg2_fsm_5;
    sc_signal< bool > ap_sig_157;
    sc_signal< sc_lv<32> > grp_fu_165_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_336;
    sc_signal< sc_lv<32> > grp_fu_161_p2;
    sc_signal< sc_lv<32> > tmp_172_reg_346;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg4_fsm_7;
    sc_signal< bool > ap_sig_186;
    sc_signal< sc_lv<10> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_logic > A_we0;
    sc_signal< sc_lv<4> > i_reg_116;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_8;
    sc_signal< bool > ap_sig_212;
    sc_signal< sc_lv<10> > m_phi_fu_131_p4;
    sc_signal< sc_lv<17> > indvar_flatten_phi_fu_143_p4;
    sc_signal< sc_lv<10> > k_phi_fu_154_p4;
    sc_signal< sc_lv<64> > tmp_s_fu_199_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_235_p1;
    sc_signal< sc_lv<32> > tmp_fu_76;
    sc_signal< sc_lv<32> > grp_fu_161_p0;
    sc_signal< sc_lv<1> > exitcond_fu_216_p2;
    sc_signal< sc_logic > grp_fu_161_ce;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg3_fsm_6;
    sc_signal< bool > ap_sig_292;
    sc_signal< sc_logic > grp_fu_165_ce;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_st1_fsm_0;
    static const sc_lv<9> ap_ST_st2_fsm_1;
    static const sc_lv<9> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<9> ap_ST_pp1_stg0_fsm_3;
    static const sc_lv<9> ap_ST_pp1_stg1_fsm_4;
    static const sc_lv<9> ap_ST_pp1_stg2_fsm_5;
    static const sc_lv<9> ap_ST_pp1_stg3_fsm_6;
    static const sc_lv<9> ap_ST_pp1_stg4_fsm_7;
    static const sc_lv<9> ap_ST_st17_fsm_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<17> ap_const_lv17_13240;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<10> ap_const_lv10_30F;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_A_we0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_101();
    void thread_ap_sig_115();
    void thread_ap_sig_130();
    void thread_ap_sig_134();
    void thread_ap_sig_157();
    void thread_ap_sig_186();
    void thread_ap_sig_212();
    void thread_ap_sig_26();
    void thread_ap_sig_292();
    void thread_ap_sig_45();
    void thread_ap_sig_61();
    void thread_ap_sig_94();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_2();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_3();
    void thread_ap_sig_cseq_ST_pp1_stg1_fsm_4();
    void thread_ap_sig_cseq_ST_pp1_stg2_fsm_5();
    void thread_ap_sig_cseq_ST_pp1_stg3_fsm_6();
    void thread_ap_sig_cseq_ST_pp1_stg4_fsm_7();
    void thread_ap_sig_cseq_ST_st17_fsm_8();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_exitcond7_fu_187_p2();
    void thread_exitcond8_fu_175_p2();
    void thread_exitcond_flatten_fu_204_p2();
    void thread_exitcond_fu_216_p2();
    void thread_grp_fu_161_ce();
    void thread_grp_fu_161_p0();
    void thread_grp_fu_165_ce();
    void thread_i_2_fu_181_p2();
    void thread_indvar_flatten_next_fu_210_p2();
    void thread_indvar_flatten_phi_fu_143_p4();
    void thread_k_1_fu_244_p2();
    void thread_k_mid2_fu_222_p3();
    void thread_k_phi_fu_154_p4();
    void thread_m_2_fu_193_p2();
    void thread_m_phi_fu_131_p4();
    void thread_strm_in_V_blk_n();
    void thread_strm_in_V_read();
    void thread_strm_out_V_blk_n();
    void thread_strm_out_V_din();
    void thread_strm_out_V_write();
    void thread_tmp_2_fu_239_p2();
    void thread_tmp_8_fu_230_p2();
    void thread_tmp_9_fu_235_p1();
    void thread_tmp_s_fu_199_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
