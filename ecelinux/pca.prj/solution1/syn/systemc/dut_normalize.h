// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_normalize_HH_
#define _dut_normalize_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_faddfsub_32ns_32ns_32_5_full_dsp.h"
#include "dut_fdiv_32ns_32ns_32_16.h"

namespace ap_rtl {

struct dut_normalize : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<18> > X_address0;
    sc_out< sc_logic > X_ce0;
    sc_out< sc_logic > X_we0;
    sc_out< sc_lv<32> > X_d0;
    sc_in< sc_lv<32> > X_q0;
    sc_out< sc_lv<10> > mean_address0;
    sc_out< sc_logic > mean_ce0;
    sc_out< sc_logic > mean_we0;
    sc_out< sc_lv<32> > mean_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    dut_normalize(sc_module_name name);
    SC_HAS_PROCESS(dut_normalize);

    ~dut_normalize();

    sc_trace_file* mVcdFile;

    dut_faddfsub_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* dut_faddfsub_32ns_32ns_32_5_full_dsp_U1;
    dut_fdiv_32ns_32ns_32_16<1,16,32,32,32>* dut_fdiv_32ns_32ns_32_16_U2;
    sc_signal< sc_lv<33> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_50;
    sc_signal< sc_lv<32> > reg_132;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_76;
    sc_signal< sc_logic > ap_sig_cseq_ST_st27_fsm_26;
    sc_signal< bool > ap_sig_83;
    sc_signal< sc_lv<18> > next_mul_fu_138_p2;
    sc_signal< sc_lv<18> > next_mul_reg_214;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_93;
    sc_signal< sc_lv<10> > j_2_fu_150_p2;
    sc_signal< sc_lv<10> > j_2_reg_222;
    sc_signal< sc_lv<64> > tmp_s_fu_156_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_227;
    sc_signal< sc_lv<1> > exitcond2_fu_144_p2;
    sc_signal< sc_lv<8> > i_3_fu_166_p2;
    sc_signal< sc_lv<8> > i_3_reg_235;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_110;
    sc_signal< sc_lv<1> > exitcond1_fu_160_p2;
    sc_signal< sc_lv<32> > grp_fu_121_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_124;
    sc_signal< sc_lv<32> > grp_fu_126_p2;
    sc_signal< sc_lv<32> > tmp_133_reg_250;
    sc_signal< sc_logic > ap_sig_cseq_ST_st24_fsm_23;
    sc_signal< bool > ap_sig_133;
    sc_signal< sc_lv<8> > i_4_fu_193_p2;
    sc_signal< sc_lv<8> > i_4_reg_259;
    sc_signal< sc_logic > ap_sig_cseq_ST_st26_fsm_25;
    sc_signal< bool > ap_sig_142;
    sc_signal< sc_lv<18> > X_addr_1_reg_264;
    sc_signal< sc_lv<1> > exitcond_fu_187_p2;
    sc_signal< sc_lv<32> > tmp_136_reg_269;
    sc_signal< sc_logic > ap_sig_cseq_ST_st32_fsm_31;
    sc_signal< bool > ap_sig_155;
    sc_signal< sc_lv<10> > j_reg_64;
    sc_signal< sc_lv<18> > phi_mul_reg_75;
    sc_signal< sc_lv<32> > sum_reg_87;
    sc_signal< sc_lv<8> > i_reg_99;
    sc_signal< sc_lv<8> > i1_reg_110;
    sc_signal< sc_logic > ap_sig_cseq_ST_st25_fsm_24;
    sc_signal< bool > ap_sig_180;
    sc_signal< sc_logic > ap_sig_cseq_ST_st33_fsm_32;
    sc_signal< bool > ap_sig_187;
    sc_signal< sc_lv<64> > tmp_172_cast_fu_182_p1;
    sc_signal< sc_lv<64> > tmp_173_cast_fu_209_p1;
    sc_signal< sc_lv<32> > grp_fu_121_p0;
    sc_signal< sc_lv<32> > grp_fu_121_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_203;
    sc_signal< sc_logic > ap_sig_cseq_ST_st28_fsm_27;
    sc_signal< bool > ap_sig_210;
    sc_signal< sc_lv<18> > tmp_134_cast_fu_172_p1;
    sc_signal< sc_lv<18> > tmp_157_fu_176_p2;
    sc_signal< sc_lv<18> > tmp_135_cast_fu_199_p1;
    sc_signal< sc_lv<18> > tmp_158_fu_203_p2;
    sc_signal< sc_lv<2> > grp_fu_121_opcode;
    sc_signal< sc_lv<33> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<33> ap_ST_st1_fsm_0;
    static const sc_lv<33> ap_ST_st2_fsm_1;
    static const sc_lv<33> ap_ST_st3_fsm_2;
    static const sc_lv<33> ap_ST_st4_fsm_3;
    static const sc_lv<33> ap_ST_st5_fsm_4;
    static const sc_lv<33> ap_ST_st6_fsm_5;
    static const sc_lv<33> ap_ST_st7_fsm_6;
    static const sc_lv<33> ap_ST_st8_fsm_7;
    static const sc_lv<33> ap_ST_st9_fsm_8;
    static const sc_lv<33> ap_ST_st10_fsm_9;
    static const sc_lv<33> ap_ST_st11_fsm_10;
    static const sc_lv<33> ap_ST_st12_fsm_11;
    static const sc_lv<33> ap_ST_st13_fsm_12;
    static const sc_lv<33> ap_ST_st14_fsm_13;
    static const sc_lv<33> ap_ST_st15_fsm_14;
    static const sc_lv<33> ap_ST_st16_fsm_15;
    static const sc_lv<33> ap_ST_st17_fsm_16;
    static const sc_lv<33> ap_ST_st18_fsm_17;
    static const sc_lv<33> ap_ST_st19_fsm_18;
    static const sc_lv<33> ap_ST_st20_fsm_19;
    static const sc_lv<33> ap_ST_st21_fsm_20;
    static const sc_lv<33> ap_ST_st22_fsm_21;
    static const sc_lv<33> ap_ST_st23_fsm_22;
    static const sc_lv<33> ap_ST_st24_fsm_23;
    static const sc_lv<33> ap_ST_st25_fsm_24;
    static const sc_lv<33> ap_ST_st26_fsm_25;
    static const sc_lv<33> ap_ST_st27_fsm_26;
    static const sc_lv<33> ap_ST_st28_fsm_27;
    static const sc_lv<33> ap_ST_st29_fsm_28;
    static const sc_lv<33> ap_ST_st30_fsm_29;
    static const sc_lv<33> ap_ST_st31_fsm_30;
    static const sc_lv<33> ap_ST_st32_fsm_31;
    static const sc_lv<33> ap_ST_st33_fsm_32;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_43480000;
    static const sc_lv<18> ap_const_lv18_C8;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<8> ap_const_lv8_C8;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_X_address0();
    void thread_X_ce0();
    void thread_X_d0();
    void thread_X_we0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_110();
    void thread_ap_sig_124();
    void thread_ap_sig_133();
    void thread_ap_sig_142();
    void thread_ap_sig_155();
    void thread_ap_sig_180();
    void thread_ap_sig_187();
    void thread_ap_sig_203();
    void thread_ap_sig_210();
    void thread_ap_sig_50();
    void thread_ap_sig_76();
    void thread_ap_sig_83();
    void thread_ap_sig_93();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st24_fsm_23();
    void thread_ap_sig_cseq_ST_st25_fsm_24();
    void thread_ap_sig_cseq_ST_st26_fsm_25();
    void thread_ap_sig_cseq_ST_st27_fsm_26();
    void thread_ap_sig_cseq_ST_st28_fsm_27();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st32_fsm_31();
    void thread_ap_sig_cseq_ST_st33_fsm_32();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_exitcond1_fu_160_p2();
    void thread_exitcond2_fu_144_p2();
    void thread_exitcond_fu_187_p2();
    void thread_grp_fu_121_opcode();
    void thread_grp_fu_121_p0();
    void thread_grp_fu_121_p1();
    void thread_i_3_fu_166_p2();
    void thread_i_4_fu_193_p2();
    void thread_j_2_fu_150_p2();
    void thread_mean_address0();
    void thread_mean_ce0();
    void thread_mean_d0();
    void thread_mean_we0();
    void thread_next_mul_fu_138_p2();
    void thread_tmp_134_cast_fu_172_p1();
    void thread_tmp_135_cast_fu_199_p1();
    void thread_tmp_157_fu_176_p2();
    void thread_tmp_158_fu_203_p2();
    void thread_tmp_172_cast_fu_182_p1();
    void thread_tmp_173_cast_fu_209_p1();
    void thread_tmp_s_fu_156_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
