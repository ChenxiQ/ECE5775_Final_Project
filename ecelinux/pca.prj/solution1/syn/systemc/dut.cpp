// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> dut::ap_ST_st1_fsm_0 = "1";
const sc_lv<3> dut::ap_ST_st2_fsm_1 = "10";
const sc_lv<3> dut::ap_ST_st3_fsm_2 = "100";
const sc_lv<32> dut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut::ap_const_lv1_1 = "1";
const sc_lv<32> dut::ap_const_lv32_1 = "1";
const sc_lv<1> dut::ap_const_lv1_0 = "0";
const sc_lv<32> dut::ap_const_lv32_2 = "10";
const sc_lv<32> dut::ap_const_lv32_17 = "10111";
const sc_lv<32> dut::ap_const_lv32_1E = "11110";
const sc_lv<9> dut::ap_const_lv9_181 = "110000001";
const sc_lv<32> dut::ap_const_lv32_8 = "1000";
const sc_lv<8> dut::ap_const_lv8_7F = "1111111";
const sc_lv<32> dut::ap_const_lv32_1F = "11111";
const sc_lv<32> dut::ap_const_lv32_36 = "110110";

dut::dut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_dut_calc_svd_fu_76 = new dut_calc_svd("grp_dut_calc_svd_fu_76");
    grp_dut_calc_svd_fu_76->ap_clk(ap_clk);
    grp_dut_calc_svd_fu_76->ap_rst(ap_rst);
    grp_dut_calc_svd_fu_76->ap_start(grp_dut_calc_svd_fu_76_ap_start);
    grp_dut_calc_svd_fu_76->ap_done(grp_dut_calc_svd_fu_76_ap_done);
    grp_dut_calc_svd_fu_76->ap_idle(grp_dut_calc_svd_fu_76_ap_idle);
    grp_dut_calc_svd_fu_76->ap_ready(grp_dut_calc_svd_fu_76_ap_ready);
    grp_dut_calc_svd_fu_76->strm_in_V_dout(strm_in_V_dout);
    grp_dut_calc_svd_fu_76->strm_in_V_empty_n(strm_in_V_empty_n);
    grp_dut_calc_svd_fu_76->strm_in_V_read(grp_dut_calc_svd_fu_76_strm_in_V_read);
    grp_dut_calc_svd_fu_76->strm_out_V_din(grp_dut_calc_svd_fu_76_strm_out_V_din);
    grp_dut_calc_svd_fu_76->strm_out_V_full_n(strm_out_V_full_n);
    grp_dut_calc_svd_fu_76->strm_out_V_write(grp_dut_calc_svd_fu_76_strm_out_V_write);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( cond_reg_248 );
    sensitive << ( grp_dut_calc_svd_fu_76_ap_done );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( cond_reg_248 );
    sensitive << ( grp_dut_calc_svd_fu_76_ap_done );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_ap_sig_18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_41);
    sensitive << ( ap_start );
    sensitive << ( strm_in_V_empty_n );

    SC_METHOD(thread_ap_sig_57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_18 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_57 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_82 );

    SC_METHOD(thread_cond_fu_221_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( p_Val2_5_fu_213_p3 );

    SC_METHOD(thread_grp_dut_calc_svd_fu_76_ap_start);
    sensitive << ( ap_reg_grp_dut_calc_svd_fu_76_ap_start );

    SC_METHOD(thread_isNeg_fu_112_p3);
    sensitive << ( sh_assign_fu_106_p2 );

    SC_METHOD(thread_loc_V_1_fu_98_p1);
    sensitive << ( p_Val2_s_fu_84_p1 );

    SC_METHOD(thread_loc_V_fu_88_p4);
    sensitive << ( p_Val2_s_fu_84_p1 );

    SC_METHOD(thread_p_Result_1_fu_145_p3);
    sensitive << ( loc_V_1_reg_232 );

    SC_METHOD(thread_p_Result_s_fu_138_p3);
    sensitive << ( p_Val2_s_reg_227 );

    SC_METHOD(thread_p_Val2_3_fu_200_p3);
    sensitive << ( isNeg_reg_237 );
    sensitive << ( tmp_2_fu_186_p1 );
    sensitive << ( tmp_3_fu_190_p4 );

    SC_METHOD(thread_p_Val2_5_fu_213_p3);
    sensitive << ( p_Val2_3_fu_200_p3 );
    sensitive << ( p_Result_s_fu_138_p3 );
    sensitive << ( p_Val2_8_i_i_fu_207_p2 );

    SC_METHOD(thread_p_Val2_8_i_i_fu_207_p2);
    sensitive << ( p_Val2_3_fu_200_p3 );

    SC_METHOD(thread_p_Val2_s_fu_84_p1);
    sensitive << ( strm_in_V_dout );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_159_p1);
    sensitive << ( sh_assign_1_reg_242 );

    SC_METHOD(thread_sh_assign_1_cast_fu_156_p1);
    sensitive << ( sh_assign_1_reg_242 );

    SC_METHOD(thread_sh_assign_1_fu_130_p3);
    sensitive << ( isNeg_fu_112_p3 );
    sensitive << ( sh_assign_fu_106_p2 );
    sensitive << ( tmp_13_i_i_cast_fu_126_p1 );

    SC_METHOD(thread_sh_assign_fu_106_p2);
    sensitive << ( tmp_i_i_i_cast1_fu_102_p1 );

    SC_METHOD(thread_strm_in_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( strm_in_V_empty_n );

    SC_METHOD(thread_strm_in_V_read);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_41 );
    sensitive << ( cond_reg_248 );
    sensitive << ( grp_dut_calc_svd_fu_76_strm_in_V_read );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_strm_out_V_din);
    sensitive << ( cond_reg_248 );
    sensitive << ( grp_dut_calc_svd_fu_76_strm_out_V_din );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_strm_out_V_write);
    sensitive << ( cond_reg_248 );
    sensitive << ( grp_dut_calc_svd_fu_76_strm_out_V_write );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_tmp_13_i_i_cast_fu_126_p1);
    sensitive << ( tmp_13_i_i_fu_120_p2 );

    SC_METHOD(thread_tmp_13_i_i_fu_120_p2);
    sensitive << ( loc_V_fu_88_p4 );

    SC_METHOD(thread_tmp_14_i_i_fu_162_p1);
    sensitive << ( sh_assign_1_cast_fu_156_p1 );

    SC_METHOD(thread_tmp_15_i_i_fu_166_p2);
    sensitive << ( p_Result_1_fu_145_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_159_p1 );

    SC_METHOD(thread_tmp_17_i_i_fu_172_p2);
    sensitive << ( tmp_i_i_fu_152_p1 );
    sensitive << ( tmp_14_i_i_fu_162_p1 );

    SC_METHOD(thread_tmp_2_fu_186_p1);
    sensitive << ( tmp_fu_178_p3 );

    SC_METHOD(thread_tmp_3_fu_190_p4);
    sensitive << ( tmp_17_i_i_fu_172_p2 );

    SC_METHOD(thread_tmp_fu_178_p3);
    sensitive << ( tmp_15_i_i_fu_166_p2 );

    SC_METHOD(thread_tmp_i_i_fu_152_p1);
    sensitive << ( p_Result_1_fu_145_p3 );

    SC_METHOD(thread_tmp_i_i_i_cast1_fu_102_p1);
    sensitive << ( loc_V_fu_88_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_41 );
    sensitive << ( cond_reg_248 );
    sensitive << ( grp_dut_calc_svd_fu_76_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_reg_grp_dut_calc_svd_fu_76_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, strm_in_V_dout, "(port)strm_in_V_dout");
    sc_trace(mVcdFile, strm_in_V_empty_n, "(port)strm_in_V_empty_n");
    sc_trace(mVcdFile, strm_in_V_read, "(port)strm_in_V_read");
    sc_trace(mVcdFile, strm_out_V_din, "(port)strm_out_V_din");
    sc_trace(mVcdFile, strm_out_V_full_n, "(port)strm_out_V_full_n");
    sc_trace(mVcdFile, strm_out_V_write, "(port)strm_out_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_18, "ap_sig_18");
    sc_trace(mVcdFile, strm_in_V_blk_n, "strm_in_V_blk_n");
    sc_trace(mVcdFile, p_Val2_s_fu_84_p1, "p_Val2_s_fu_84_p1");
    sc_trace(mVcdFile, p_Val2_s_reg_227, "p_Val2_s_reg_227");
    sc_trace(mVcdFile, ap_sig_41, "ap_sig_41");
    sc_trace(mVcdFile, loc_V_1_fu_98_p1, "loc_V_1_fu_98_p1");
    sc_trace(mVcdFile, loc_V_1_reg_232, "loc_V_1_reg_232");
    sc_trace(mVcdFile, isNeg_fu_112_p3, "isNeg_fu_112_p3");
    sc_trace(mVcdFile, isNeg_reg_237, "isNeg_reg_237");
    sc_trace(mVcdFile, sh_assign_1_fu_130_p3, "sh_assign_1_fu_130_p3");
    sc_trace(mVcdFile, sh_assign_1_reg_242, "sh_assign_1_reg_242");
    sc_trace(mVcdFile, cond_fu_221_p2, "cond_fu_221_p2");
    sc_trace(mVcdFile, cond_reg_248, "cond_reg_248");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_57, "ap_sig_57");
    sc_trace(mVcdFile, grp_dut_calc_svd_fu_76_ap_start, "grp_dut_calc_svd_fu_76_ap_start");
    sc_trace(mVcdFile, grp_dut_calc_svd_fu_76_ap_done, "grp_dut_calc_svd_fu_76_ap_done");
    sc_trace(mVcdFile, grp_dut_calc_svd_fu_76_ap_idle, "grp_dut_calc_svd_fu_76_ap_idle");
    sc_trace(mVcdFile, grp_dut_calc_svd_fu_76_ap_ready, "grp_dut_calc_svd_fu_76_ap_ready");
    sc_trace(mVcdFile, grp_dut_calc_svd_fu_76_strm_in_V_read, "grp_dut_calc_svd_fu_76_strm_in_V_read");
    sc_trace(mVcdFile, grp_dut_calc_svd_fu_76_strm_out_V_din, "grp_dut_calc_svd_fu_76_strm_out_V_din");
    sc_trace(mVcdFile, grp_dut_calc_svd_fu_76_strm_out_V_write, "grp_dut_calc_svd_fu_76_strm_out_V_write");
    sc_trace(mVcdFile, ap_reg_grp_dut_calc_svd_fu_76_ap_start, "ap_reg_grp_dut_calc_svd_fu_76_ap_start");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_82, "ap_sig_82");
    sc_trace(mVcdFile, loc_V_fu_88_p4, "loc_V_fu_88_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast1_fu_102_p1, "tmp_i_i_i_cast1_fu_102_p1");
    sc_trace(mVcdFile, sh_assign_fu_106_p2, "sh_assign_fu_106_p2");
    sc_trace(mVcdFile, tmp_13_i_i_fu_120_p2, "tmp_13_i_i_fu_120_p2");
    sc_trace(mVcdFile, tmp_13_i_i_cast_fu_126_p1, "tmp_13_i_i_cast_fu_126_p1");
    sc_trace(mVcdFile, p_Result_1_fu_145_p3, "p_Result_1_fu_145_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_156_p1, "sh_assign_1_cast_fu_156_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_159_p1, "sh_assign_1_cast_cast_fu_159_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_152_p1, "tmp_i_i_fu_152_p1");
    sc_trace(mVcdFile, tmp_14_i_i_fu_162_p1, "tmp_14_i_i_fu_162_p1");
    sc_trace(mVcdFile, tmp_15_i_i_fu_166_p2, "tmp_15_i_i_fu_166_p2");
    sc_trace(mVcdFile, tmp_fu_178_p3, "tmp_fu_178_p3");
    sc_trace(mVcdFile, tmp_17_i_i_fu_172_p2, "tmp_17_i_i_fu_172_p2");
    sc_trace(mVcdFile, tmp_2_fu_186_p1, "tmp_2_fu_186_p1");
    sc_trace(mVcdFile, tmp_3_fu_190_p4, "tmp_3_fu_190_p4");
    sc_trace(mVcdFile, p_Val2_3_fu_200_p3, "p_Val2_3_fu_200_p3");
    sc_trace(mVcdFile, p_Result_s_fu_138_p3, "p_Result_s_fu_138_p3");
    sc_trace(mVcdFile, p_Val2_8_i_i_fu_207_p2, "p_Val2_8_i_i_fu_207_p2");
    sc_trace(mVcdFile, p_Val2_5_fu_213_p3, "p_Val2_5_fu_213_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dut.hdltvin.dat");
    mHdltvoutHandle.open("dut.hdltvout.dat");
}

dut::~dut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_dut_calc_svd_fu_76;
}

void dut::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_dut_calc_svd_fu_76_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
             !esl_seteq<1,1,1>(cond_fu_221_p2.read(), ap_const_lv1_0))) {
            ap_reg_grp_dut_calc_svd_fu_76_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dut_calc_svd_fu_76_ap_ready.read())) {
            ap_reg_grp_dut_calc_svd_fu_76_ap_start = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        cond_reg_248 = cond_fu_221_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !ap_sig_41.read())) {
        isNeg_reg_237 = sh_assign_fu_106_p2.read().range(8, 8);
        loc_V_1_reg_232 = loc_V_1_fu_98_p1.read();
        p_Val2_s_reg_227 = p_Val2_s_fu_84_p1.read();
        sh_assign_1_reg_242 = sh_assign_1_fu_130_p3.read();
    }
}

void dut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !(!esl_seteq<1,1,1>(cond_reg_248.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, grp_dut_calc_svd_fu_76_ap_done.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !(!esl_seteq<1,1,1>(cond_reg_248.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, grp_dut_calc_svd_fu_76_ap_done.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_18() {
    ap_sig_18 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut::thread_ap_sig_41() {
    ap_sig_41 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(strm_in_V_empty_n.read(), ap_const_logic_0));
}

void dut::thread_ap_sig_57() {
    ap_sig_57 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut::thread_ap_sig_82() {
    ap_sig_82 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_18.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_57.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_82.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut::thread_cond_fu_221_p2() {
    cond_fu_221_p2 = (!p_Val2_5_fu_213_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(p_Val2_5_fu_213_p3.read() == ap_const_lv32_1);
}

void dut::thread_grp_dut_calc_svd_fu_76_ap_start() {
    grp_dut_calc_svd_fu_76_ap_start = ap_reg_grp_dut_calc_svd_fu_76_ap_start.read();
}

void dut::thread_isNeg_fu_112_p3() {
    isNeg_fu_112_p3 = sh_assign_fu_106_p2.read().range(8, 8);
}

void dut::thread_loc_V_1_fu_98_p1() {
    loc_V_1_fu_98_p1 = p_Val2_s_fu_84_p1.read().range(23-1, 0);
}

void dut::thread_loc_V_fu_88_p4() {
    loc_V_fu_88_p4 = p_Val2_s_fu_84_p1.read().range(30, 23);
}

void dut::thread_p_Result_1_fu_145_p3() {
    p_Result_1_fu_145_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_reg_232.read());
}

void dut::thread_p_Result_s_fu_138_p3() {
    p_Result_s_fu_138_p3 = p_Val2_s_reg_227.read().range(31, 31);
}

void dut::thread_p_Val2_3_fu_200_p3() {
    p_Val2_3_fu_200_p3 = (!isNeg_reg_237.read()[0].is_01())? sc_lv<32>(): ((isNeg_reg_237.read()[0].to_bool())? tmp_2_fu_186_p1.read(): tmp_3_fu_190_p4.read());
}

void dut::thread_p_Val2_5_fu_213_p3() {
    p_Val2_5_fu_213_p3 = (!p_Result_s_fu_138_p3.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_fu_138_p3.read()[0].to_bool())? p_Val2_8_i_i_fu_207_p2.read(): p_Val2_3_fu_200_p3.read());
}

void dut::thread_p_Val2_8_i_i_fu_207_p2() {
    p_Val2_8_i_i_fu_207_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_3_fu_200_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_3_fu_200_p3.read()));
}

void dut::thread_p_Val2_s_fu_84_p1() {
    p_Val2_s_fu_84_p1 = strm_in_V_dout.read();
}

void dut::thread_sh_assign_1_cast_cast_fu_159_p1() {
    sh_assign_1_cast_cast_fu_159_p1 = esl_sext<24,9>(sh_assign_1_reg_242.read());
}

void dut::thread_sh_assign_1_cast_fu_156_p1() {
    sh_assign_1_cast_fu_156_p1 = esl_sext<32,9>(sh_assign_1_reg_242.read());
}

void dut::thread_sh_assign_1_fu_130_p3() {
    sh_assign_1_fu_130_p3 = (!isNeg_fu_112_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_112_p3.read()[0].to_bool())? tmp_13_i_i_cast_fu_126_p1.read(): sh_assign_fu_106_p2.read());
}

void dut::thread_sh_assign_fu_106_p2() {
    sh_assign_fu_106_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_cast1_fu_102_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_cast1_fu_102_p1.read()));
}

void dut::thread_strm_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        strm_in_V_blk_n = strm_in_V_empty_n.read();
    } else {
        strm_in_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_in_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !ap_sig_41.read())) {
        strm_in_V_read = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(cond_reg_248.read(), ap_const_lv1_0))) {
        strm_in_V_read = grp_dut_calc_svd_fu_76_strm_in_V_read.read();
    } else {
        strm_in_V_read = ap_const_logic_0;
    }
}

void dut::thread_strm_out_V_din() {
    strm_out_V_din = grp_dut_calc_svd_fu_76_strm_out_V_din.read();
}

void dut::thread_strm_out_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(cond_reg_248.read(), ap_const_lv1_0))) {
        strm_out_V_write = grp_dut_calc_svd_fu_76_strm_out_V_write.read();
    } else {
        strm_out_V_write = ap_const_logic_0;
    }
}

void dut::thread_tmp_13_i_i_cast_fu_126_p1() {
    tmp_13_i_i_cast_fu_126_p1 = esl_sext<9,8>(tmp_13_i_i_fu_120_p2.read());
}

void dut::thread_tmp_13_i_i_fu_120_p2() {
    tmp_13_i_i_fu_120_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_fu_88_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_fu_88_p4.read()));
}

void dut::thread_tmp_14_i_i_fu_162_p1() {
    tmp_14_i_i_fu_162_p1 = esl_zext<78,32>(sh_assign_1_cast_fu_156_p1.read());
}

void dut::thread_tmp_15_i_i_fu_166_p2() {
    tmp_15_i_i_fu_166_p2 = (!sh_assign_1_cast_cast_fu_159_p1.read().is_01())? sc_lv<24>(): p_Result_1_fu_145_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_159_p1.read().to_uint();
}

void dut::thread_tmp_17_i_i_fu_172_p2() {
    tmp_17_i_i_fu_172_p2 = (!tmp_14_i_i_fu_162_p1.read().is_01())? sc_lv<78>(): tmp_i_i_fu_152_p1.read() << (unsigned short)tmp_14_i_i_fu_162_p1.read().to_uint();
}

void dut::thread_tmp_2_fu_186_p1() {
    tmp_2_fu_186_p1 = esl_zext<32,1>(tmp_fu_178_p3.read());
}

void dut::thread_tmp_3_fu_190_p4() {
    tmp_3_fu_190_p4 = tmp_17_i_i_fu_172_p2.read().range(54, 23);
}

void dut::thread_tmp_fu_178_p3() {
    tmp_fu_178_p3 = tmp_15_i_i_fu_166_p2.read().range(23, 23);
}

void dut::thread_tmp_i_i_fu_152_p1() {
    tmp_i_i_fu_152_p1 = esl_zext<78,24>(p_Result_1_fu_145_p3.read());
}

void dut::thread_tmp_i_i_i_cast1_fu_102_p1() {
    tmp_i_i_i_cast1_fu_102_p1 = esl_zext<9,8>(loc_V_fu_88_p4.read());
}

void dut::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_41.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            if (!(!esl_seteq<1,1,1>(cond_reg_248.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, grp_dut_calc_svd_fu_76_ap_done.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void dut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_dout\" :  \"" << strm_in_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_empty_n\" :  \"" << strm_in_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_in_V_read\" :  \"" << strm_in_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_din\" :  \"" << strm_out_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_out_V_full_n\" :  \"" << strm_out_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_write\" :  \"" << strm_out_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

