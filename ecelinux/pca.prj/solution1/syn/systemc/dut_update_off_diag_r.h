// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_update_off_diag_r_HH_
#define _dut_update_off_diag_r_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_fadd_32ns_32ns_32_5_full_dsp.h"
#include "dut_fmul_32ns_32ns_32_4_max_dsp.h"

namespace ap_rtl {

struct dut_update_off_diag_r : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > strm_in_V_dout;
    sc_in< sc_logic > strm_in_V_empty_n;
    sc_out< sc_logic > strm_in_V_read;
    sc_out< sc_lv<32> > strm_out_V_din;
    sc_in< sc_logic > strm_out_V_full_n;
    sc_out< sc_logic > strm_out_V_write;


    // Module declarations
    dut_update_off_diag_r(sc_module_name name);
    SC_HAS_PROCESS(dut_update_off_diag_r);

    ~dut_update_off_diag_r();

    sc_trace_file* mVcdFile;

    dut_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* dut_fadd_32ns_32ns_32_5_full_dsp_U11;
    dut_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* dut_fmul_32ns_32ns_32_4_max_dsp_U12;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_33;
    sc_signal< sc_logic > strm_in_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg1_fsm_2;
    sc_signal< bool > ap_sig_52;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_125;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg2_fsm_3;
    sc_signal< bool > ap_sig_68;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg3_fsm_4;
    sc_signal< bool > ap_sig_78;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg4_fsm_5;
    sc_signal< bool > ap_sig_88;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg5_fsm_6;
    sc_signal< bool > ap_sig_98;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg6_fsm_7;
    sc_signal< bool > ap_sig_108;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg7_fsm_8;
    sc_signal< bool > ap_sig_118;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg8_fsm_9;
    sc_signal< bool > ap_sig_128;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg9_fsm_10;
    sc_signal< bool > ap_sig_138;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg10_fsm_11;
    sc_signal< bool > ap_sig_148;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg11_fsm_12;
    sc_signal< bool > ap_sig_158;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg12_fsm_13;
    sc_signal< bool > ap_sig_168;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg13_fsm_14;
    sc_signal< bool > ap_sig_178;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_188;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > strm_out_V_blk_n;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_125_pp0_iter1;
    sc_signal< sc_lv<19> > indvar_flatten_reg_61;
    sc_signal< sc_lv<32> > grp_fu_76_p2;
    sc_signal< sc_lv<32> > reg_80;
    sc_signal< bool > ap_sig_221;
    sc_signal< sc_lv<32> > reg_86;
    sc_signal< bool > ap_sig_233;
    sc_signal< sc_lv<32> > reg_91;
    sc_signal< sc_lv<32> > reg_96;
    sc_signal< sc_lv<32> > reg_102;
    sc_signal< sc_lv<32> > grp_fu_72_p2;
    sc_signal< sc_lv<32> > reg_108;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_113_p2;
    sc_signal< sc_lv<19> > indvar_flatten_next_fu_119_p2;
    sc_signal< sc_lv<19> > indvar_flatten_next_reg_129;
    sc_signal< sc_lv<32> > tmp_6_reg_134;
    sc_signal< sc_lv<32> > tmp_7_reg_139;
    sc_signal< sc_lv<32> > tmp_8_reg_144;
    sc_signal< sc_lv<32> > ap_reg_ppstg_tmp_8_reg_144_pp0_iter1;
    sc_signal< sc_lv<32> > tmp_9_reg_149;
    sc_signal< sc_lv<32> > tmp_10_reg_154;
    sc_signal< sc_lv<32> > tmp_11_reg_159;
    sc_signal< sc_lv<32> > tmp_12_reg_164;
    sc_signal< sc_lv<32> > tmp_13_reg_169;
    sc_signal< sc_lv<32> > tmp_14_reg_174;
    sc_signal< sc_lv<32> > tmp_15_reg_179;
    sc_signal< sc_lv<32> > tmp_16_reg_184;
    sc_signal< sc_lv<32> > tmp_17_reg_189;
    sc_signal< sc_lv<32> > tmp_18_reg_194;
    sc_signal< sc_lv<32> > tmp_19_reg_199;
    sc_signal< sc_lv<32> > tmp_3_i2_reg_204;
    sc_signal< sc_lv<32> > tmp_i3_reg_209;
    sc_signal< sc_lv<19> > indvar_flatten_phi_fu_65_p4;
    sc_signal< sc_lv<32> > grp_fu_72_p0;
    sc_signal< sc_lv<32> > grp_fu_72_p1;
    sc_signal< sc_lv<32> > grp_fu_76_p0;
    sc_signal< sc_lv<32> > grp_fu_76_p1;
    sc_signal< sc_logic > grp_fu_72_ce;
    sc_signal< sc_logic > grp_fu_76_ce;
    sc_signal< sc_logic > ap_sig_cseq_ST_st31_fsm_15;
    sc_signal< bool > ap_sig_451;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_st1_fsm_0;
    static const sc_lv<16> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<16> ap_ST_pp0_stg1_fsm_2;
    static const sc_lv<16> ap_ST_pp0_stg2_fsm_3;
    static const sc_lv<16> ap_ST_pp0_stg3_fsm_4;
    static const sc_lv<16> ap_ST_pp0_stg4_fsm_5;
    static const sc_lv<16> ap_ST_pp0_stg5_fsm_6;
    static const sc_lv<16> ap_ST_pp0_stg6_fsm_7;
    static const sc_lv<16> ap_ST_pp0_stg7_fsm_8;
    static const sc_lv<16> ap_ST_pp0_stg8_fsm_9;
    static const sc_lv<16> ap_ST_pp0_stg9_fsm_10;
    static const sc_lv<16> ap_ST_pp0_stg10_fsm_11;
    static const sc_lv<16> ap_ST_pp0_stg11_fsm_12;
    static const sc_lv<16> ap_ST_pp0_stg12_fsm_13;
    static const sc_lv<16> ap_ST_pp0_stg13_fsm_14;
    static const sc_lv<16> ap_ST_st31_fsm_15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<19> ap_const_lv19_4AD70;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_108();
    void thread_ap_sig_118();
    void thread_ap_sig_128();
    void thread_ap_sig_138();
    void thread_ap_sig_148();
    void thread_ap_sig_158();
    void thread_ap_sig_168();
    void thread_ap_sig_178();
    void thread_ap_sig_188();
    void thread_ap_sig_221();
    void thread_ap_sig_233();
    void thread_ap_sig_33();
    void thread_ap_sig_451();
    void thread_ap_sig_52();
    void thread_ap_sig_68();
    void thread_ap_sig_78();
    void thread_ap_sig_88();
    void thread_ap_sig_98();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_pp0_stg10_fsm_11();
    void thread_ap_sig_cseq_ST_pp0_stg11_fsm_12();
    void thread_ap_sig_cseq_ST_pp0_stg12_fsm_13();
    void thread_ap_sig_cseq_ST_pp0_stg13_fsm_14();
    void thread_ap_sig_cseq_ST_pp0_stg1_fsm_2();
    void thread_ap_sig_cseq_ST_pp0_stg2_fsm_3();
    void thread_ap_sig_cseq_ST_pp0_stg3_fsm_4();
    void thread_ap_sig_cseq_ST_pp0_stg4_fsm_5();
    void thread_ap_sig_cseq_ST_pp0_stg5_fsm_6();
    void thread_ap_sig_cseq_ST_pp0_stg6_fsm_7();
    void thread_ap_sig_cseq_ST_pp0_stg7_fsm_8();
    void thread_ap_sig_cseq_ST_pp0_stg8_fsm_9();
    void thread_ap_sig_cseq_ST_pp0_stg9_fsm_10();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st31_fsm_15();
    void thread_exitcond_flatten_fu_113_p2();
    void thread_grp_fu_72_ce();
    void thread_grp_fu_72_p0();
    void thread_grp_fu_72_p1();
    void thread_grp_fu_76_ce();
    void thread_grp_fu_76_p0();
    void thread_grp_fu_76_p1();
    void thread_indvar_flatten_next_fu_119_p2();
    void thread_indvar_flatten_phi_fu_65_p4();
    void thread_strm_in_V_blk_n();
    void thread_strm_in_V_read();
    void thread_strm_out_V_blk_n();
    void thread_strm_out_V_din();
    void thread_strm_out_V_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
