// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_update_off_diag_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        top_left,
        bottom_right,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        s_col_temp_0_address0,
        s_col_temp_0_ce0,
        s_col_temp_0_we0,
        s_col_temp_0_d0,
        s_col_temp_0_q0,
        s_col_temp_1_address0,
        s_col_temp_1_ce0,
        s_col_temp_1_we0,
        s_col_temp_1_d0,
        s_col_temp_1_q0,
        s_row_temp_0_address0,
        s_row_temp_0_ce0,
        s_row_temp_0_we0,
        s_row_temp_0_d0,
        s_row_temp_0_q0,
        s_row_temp_1_address0,
        s_row_temp_1_ce0,
        s_row_temp_1_we0,
        s_row_temp_1_d0,
        s_row_temp_1_q0
);

parameter    ap_ST_st1_fsm_0 = 23'b1;
parameter    ap_ST_st2_fsm_1 = 23'b10;
parameter    ap_ST_st3_fsm_2 = 23'b100;
parameter    ap_ST_st4_fsm_3 = 23'b1000;
parameter    ap_ST_st5_fsm_4 = 23'b10000;
parameter    ap_ST_st6_fsm_5 = 23'b100000;
parameter    ap_ST_st7_fsm_6 = 23'b1000000;
parameter    ap_ST_st8_fsm_7 = 23'b10000000;
parameter    ap_ST_st9_fsm_8 = 23'b100000000;
parameter    ap_ST_st10_fsm_9 = 23'b1000000000;
parameter    ap_ST_st11_fsm_10 = 23'b10000000000;
parameter    ap_ST_st12_fsm_11 = 23'b100000000000;
parameter    ap_ST_st13_fsm_12 = 23'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 23'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 23'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 23'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 23'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 23'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 23'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 23'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 23'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 23'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 23'b10000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv10_310 = 10'b1100010000;
parameter    ap_const_lv10_1 = 10'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] top_left;
input  [31:0] bottom_right;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
output  [9:0] s_col_temp_0_address0;
output   s_col_temp_0_ce0;
output   s_col_temp_0_we0;
output  [31:0] s_col_temp_0_d0;
input  [31:0] s_col_temp_0_q0;
output  [9:0] s_col_temp_1_address0;
output   s_col_temp_1_ce0;
output   s_col_temp_1_we0;
output  [31:0] s_col_temp_1_d0;
input  [31:0] s_col_temp_1_q0;
output  [9:0] s_row_temp_0_address0;
output   s_row_temp_0_ce0;
output   s_row_temp_0_we0;
output  [31:0] s_row_temp_0_d0;
input  [31:0] s_row_temp_0_q0;
output  [9:0] s_row_temp_1_address0;
output   s_row_temp_1_ce0;
output   s_row_temp_1_we0;
output  [31:0] s_row_temp_1_d0;
input  [31:0] s_row_temp_1_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] s_col_temp_0_address0;
reg s_col_temp_0_ce0;
reg s_col_temp_0_we0;
reg[9:0] s_col_temp_1_address0;
reg s_col_temp_1_ce0;
reg s_col_temp_1_we0;
reg[9:0] s_row_temp_0_address0;
reg s_row_temp_0_ce0;
reg s_row_temp_0_we0;
reg[9:0] s_row_temp_1_address0;
reg s_row_temp_1_ce0;
reg s_row_temp_1_we0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_40;
wire   [31:0] grp_fu_188_p2;
reg   [31:0] reg_212;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_94;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_101;
wire   [31:0] grp_fu_193_p2;
reg   [31:0] reg_217;
wire   [31:0] grp_fu_198_p2;
reg   [31:0] reg_222;
wire   [31:0] grp_fu_203_p2;
reg   [31:0] reg_227;
wire   [31:0] grp_fu_180_p2;
reg   [31:0] reg_232;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_117;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_124;
wire   [31:0] grp_fu_184_p2;
reg   [31:0] reg_238;
wire   [9:0] off_col_1_fu_254_p2;
reg   [9:0] off_col_1_reg_375;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_159;
wire   [0:0] or_cond_fu_270_p2;
reg   [0:0] or_cond_reg_380;
wire   [0:0] exitcond1_fu_248_p2;
reg   [9:0] s_col_temp_0_addr_reg_384;
reg   [9:0] s_col_temp_1_addr_reg_389;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_180;
wire   [9:0] off_row_1_fu_292_p2;
reg   [9:0] off_row_1_reg_409;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_190;
wire   [0:0] or_cond2_fu_308_p2;
reg   [0:0] or_cond2_reg_414;
wire   [0:0] exitcond_fu_286_p2;
reg   [9:0] s_row_temp_0_addr_reg_418;
reg   [9:0] s_row_temp_1_addr_reg_423;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_210;
reg   [9:0] off_col_reg_158;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_221;
reg   [9:0] off_row_reg_169;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_230;
wire   [63:0] tmp_6_fu_276_p1;
wire   [63:0] tmp_s_fu_314_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_251;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_258;
reg   [31:0] grp_fu_188_p0;
reg   [31:0] grp_fu_188_p1;
reg   [31:0] grp_fu_193_p0;
reg   [31:0] grp_fu_193_p1;
reg   [31:0] grp_fu_198_p0;
reg   [31:0] grp_fu_198_p1;
reg   [31:0] grp_fu_203_p0;
reg   [31:0] grp_fu_203_p1;
wire   [31:0] off_col_cast2_fu_244_p1;
wire   [0:0] tmp_fu_260_p2;
wire   [0:0] tmp_5_fu_265_p2;
wire   [31:0] off_row_cast1_fu_282_p1;
wire   [0:0] tmp_7_fu_298_p2;
wire   [0:0] tmp_8_fu_303_p2;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'b1;
end

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_212),
    .din1(reg_217),
    .ce(1'b1),
    .dout(grp_fu_180_p2)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_222),
    .din1(reg_227),
    .ce(1'b1),
    .dout(grp_fu_184_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_188_p0),
    .din1(grp_fu_188_p1),
    .ce(1'b1),
    .dout(grp_fu_188_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_193_p0),
    .din1(grp_fu_193_p1),
    .ce(1'b1),
    .dout(grp_fu_193_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(grp_fu_198_p1),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_203_p0),
    .din1(grp_fu_203_p1),
    .ce(1'b1),
    .dout(grp_fu_203_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        off_col_reg_158 <= off_col_1_reg_375;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        off_col_reg_158 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_248_p2 == 1'b0))) begin
        off_row_reg_169 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        off_row_reg_169 <= off_row_1_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        off_col_1_reg_375 <= off_col_1_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        off_row_1_reg_409 <= off_row_1_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == exitcond_fu_286_p2))) begin
        or_cond2_reg_414 <= or_cond2_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_248_p2 == 1'b0))) begin
        or_cond_reg_380 <= or_cond_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        reg_212 <= grp_fu_188_p2;
        reg_217 <= grp_fu_193_p2;
        reg_222 <= grp_fu_198_p2;
        reg_227 <= grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        reg_232 <= grp_fu_180_p2;
        reg_238 <= grp_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_248_p2 == 1'b0) & (or_cond_fu_270_p2 == 1'b0))) begin
        s_col_temp_0_addr_reg_384 <= tmp_6_fu_276_p1;
        s_col_temp_1_addr_reg_389 <= tmp_6_fu_276_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == exitcond_fu_286_p2) & (1'b0 == or_cond2_fu_308_p2))) begin
        s_row_temp_0_addr_reg_418 <= tmp_s_fu_314_p1;
        s_row_temp_1_addr_reg_423 <= tmp_s_fu_314_p1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_fu_286_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == exitcond_fu_286_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_117) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_221) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_190) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_210) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_101) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_258) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_40) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_124) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_230) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_180) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_94) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_251) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_188_p0 = s_row_temp_0_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_188_p0 = s_col_temp_0_q0;
    end else begin
        grp_fu_188_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_188_p1 = p_read4;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_188_p1 = p_read;
    end else begin
        grp_fu_188_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_193_p0 = s_row_temp_1_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_193_p0 = s_col_temp_1_q0;
    end else begin
        grp_fu_193_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_193_p1 = p_read6;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_193_p1 = p_read2;
    end else begin
        grp_fu_193_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_198_p0 = s_row_temp_0_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_198_p0 = s_col_temp_0_q0;
    end else begin
        grp_fu_198_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_198_p1 = p_read5;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_198_p1 = p_read1;
    end else begin
        grp_fu_198_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_203_p0 = s_row_temp_1_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_203_p0 = s_col_temp_1_q0;
    end else begin
        grp_fu_203_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_203_p1 = p_read7;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_203_p1 = p_read3;
    end else begin
        grp_fu_203_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        s_col_temp_0_address0 = s_col_temp_0_addr_reg_384;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        s_col_temp_0_address0 = tmp_6_fu_276_p1;
    end else begin
        s_col_temp_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        s_col_temp_0_ce0 = 1'b1;
    end else begin
        s_col_temp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (or_cond_reg_380 == 1'b0))) begin
        s_col_temp_0_we0 = 1'b1;
    end else begin
        s_col_temp_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        s_col_temp_1_address0 = s_col_temp_1_addr_reg_389;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        s_col_temp_1_address0 = tmp_6_fu_276_p1;
    end else begin
        s_col_temp_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        s_col_temp_1_ce0 = 1'b1;
    end else begin
        s_col_temp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (or_cond_reg_380 == 1'b0))) begin
        s_col_temp_1_we0 = 1'b1;
    end else begin
        s_col_temp_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        s_row_temp_0_address0 = s_row_temp_0_addr_reg_418;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        s_row_temp_0_address0 = tmp_s_fu_314_p1;
    end else begin
        s_row_temp_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22))) begin
        s_row_temp_0_ce0 = 1'b1;
    end else begin
        s_row_temp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (1'b0 == or_cond2_reg_414))) begin
        s_row_temp_0_we0 = 1'b1;
    end else begin
        s_row_temp_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        s_row_temp_1_address0 = s_row_temp_1_addr_reg_423;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        s_row_temp_1_address0 = tmp_s_fu_314_p1;
    end else begin
        s_row_temp_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22))) begin
        s_row_temp_1_ce0 = 1'b1;
    end else begin
        s_row_temp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (1'b0 == or_cond2_reg_414))) begin
        s_row_temp_1_we0 = 1'b1;
    end else begin
        s_row_temp_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (((exitcond1_fu_248_p2 == 1'b0) & ~(or_cond_fu_270_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else if (((exitcond1_fu_248_p2 == 1'b0) & (or_cond_fu_270_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st13_fsm_12 : begin
            if (~(1'b0 == exitcond_fu_286_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((1'b0 == exitcond_fu_286_p2) & ~(1'b0 == or_cond2_fu_308_p2))) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_101 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_117 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_124 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_180 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_190 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_210 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_221 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_230 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_251 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_258 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_40 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_94 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

assign exitcond1_fu_248_p2 = ((off_col_reg_158 == ap_const_lv10_310) ? 1'b1 : 1'b0);

assign exitcond_fu_286_p2 = ((off_row_reg_169 == ap_const_lv10_310) ? 1'b1 : 1'b0);

assign off_col_1_fu_254_p2 = (off_col_reg_158 + ap_const_lv10_1);

assign off_col_cast2_fu_244_p1 = off_col_reg_158;

assign off_row_1_fu_292_p2 = (off_row_reg_169 + ap_const_lv10_1);

assign off_row_cast1_fu_282_p1 = off_row_reg_169;

assign or_cond2_fu_308_p2 = (tmp_7_fu_298_p2 | tmp_8_fu_303_p2);

assign or_cond_fu_270_p2 = (tmp_fu_260_p2 | tmp_5_fu_265_p2);

assign s_col_temp_0_d0 = reg_232;

assign s_col_temp_1_d0 = reg_238;

assign s_row_temp_0_d0 = reg_232;

assign s_row_temp_1_d0 = reg_238;

assign tmp_5_fu_265_p2 = ((off_col_cast2_fu_244_p1 == top_left) ? 1'b1 : 1'b0);

assign tmp_6_fu_276_p1 = off_col_reg_158;

assign tmp_7_fu_298_p2 = ((off_row_cast1_fu_282_p1 == bottom_right) ? 1'b1 : 1'b0);

assign tmp_8_fu_303_p2 = ((off_row_cast1_fu_282_p1 == top_left) ? 1'b1 : 1'b0);

assign tmp_fu_260_p2 = ((off_col_cast2_fu_244_p1 == bottom_right) ? 1'b1 : 1'b0);

assign tmp_s_fu_314_p1 = off_row_reg_169;

endmodule //dut_update_off_diag_s
