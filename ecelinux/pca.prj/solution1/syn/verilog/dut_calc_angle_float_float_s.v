// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_calc_angle_float_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_re,
        A_im,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_st1_fsm_0 = 108'b1;
parameter    ap_ST_st2_fsm_1 = 108'b10;
parameter    ap_ST_st3_fsm_2 = 108'b100;
parameter    ap_ST_st4_fsm_3 = 108'b1000;
parameter    ap_ST_st5_fsm_4 = 108'b10000;
parameter    ap_ST_st6_fsm_5 = 108'b100000;
parameter    ap_ST_st7_fsm_6 = 108'b1000000;
parameter    ap_ST_st8_fsm_7 = 108'b10000000;
parameter    ap_ST_st9_fsm_8 = 108'b100000000;
parameter    ap_ST_st10_fsm_9 = 108'b1000000000;
parameter    ap_ST_st11_fsm_10 = 108'b10000000000;
parameter    ap_ST_st12_fsm_11 = 108'b100000000000;
parameter    ap_ST_st13_fsm_12 = 108'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 108'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 108'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 108'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 108'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 108'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 108'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 108'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 108'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 108'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 108'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 108'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 108'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 108'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 108'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 108'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 108'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 108'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 108'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 108'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 108'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 108'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 108'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 108'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 108'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 108'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 108'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 108'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 108'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 108'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 108'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 108'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 108'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 108'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 108'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 108'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 108'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 108'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 108'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 108'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 108'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 108'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 108'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 108'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 108'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 108'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 108'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 108'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 108'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 108'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 108'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 108'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 108'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 108'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 108'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 108'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 108'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 108'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 108'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 108'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_6B = 32'b1101011;
parameter    ap_const_lv32_3F3504F3 = 32'b111111001101010000010011110011;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_68 = 32'b1101000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_18 = 9'b11000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_BF3504F3 = 32'b10111111001101010000010011110011;
parameter    ap_const_lv31_3F800000 = 31'b111111100000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_re;
input  [31:0] A_im;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [107:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_125;
wire   [31:0] grp_fu_96_p2;
reg   [31:0] reg_114;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_142;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_149;
wire   [31:0] grp_fu_88_p2;
reg   [31:0] reg_121;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_159;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_166;
reg    ap_sig_cseq_ST_st88_fsm_87;
reg    ap_sig_174;
wire   [31:0] grp_fu_82_p2;
reg   [31:0] reg_128;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_184;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_191;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_199;
reg    ap_sig_cseq_ST_st93_fsm_92;
reg    ap_sig_207;
wire   [31:0] grp_fu_102_p2;
reg   [31:0] reg_135;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_217;
reg    ap_sig_cseq_ST_st104_fsm_103;
reg    ap_sig_224;
wire   [0:0] demorgan_fu_197_p2;
reg   [0:0] demorgan_reg_305;
wire   [0:0] demorgan5_fu_221_p2;
reg   [0:0] demorgan5_reg_309;
wire   [0:0] grp_fu_107_p3;
reg   [0:0] p_Result_7_reg_313;
wire   [31:0] storemerge1_fu_235_p3;
wire   [31:0] p_s_fu_243_p3;
wire   [31:0] p_1_fu_251_p3;
wire   [31:0] ret_i_i_i_i_fu_266_p1;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_264;
reg   [31:0] sinThetaA_int_reg_338;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_272;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_280;
wire   [31:0] tanThetaAdiv_phi_fu_51_p4;
reg   [31:0] tanThetaAdiv_reg_48;
reg   [31:0] cosThetaAdiv2_write_assign_phi_fu_61_p6;
reg   [31:0] cosThetaAdiv2_write_assign_reg_58;
reg    ap_sig_cseq_ST_st108_fsm_107;
reg    ap_sig_292;
reg   [31:0] sinThetaAdiv2_write_assign_phi_fu_73_p6;
reg   [31:0] sinThetaAdiv2_write_assign_reg_69;
reg   [31:0] grp_fu_82_p0;
reg   [31:0] grp_fu_82_p1;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_309;
wire   [0:0] p_Result_12_fu_275_p3;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_322;
reg   [31:0] grp_fu_88_p0;
reg   [31:0] grp_fu_88_p1;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_332;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_339;
reg    ap_sig_cseq_ST_st85_fsm_84;
reg    ap_sig_346;
reg    ap_sig_cseq_ST_st105_fsm_104;
reg    ap_sig_353;
reg   [31:0] grp_fu_96_p0;
reg   [31:0] grp_fu_96_p1;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_363;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_370;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_378;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_385;
wire   [31:0] p_Val2_s_fu_142_p1;
wire   [31:0] p_Val2_4_fu_157_p1;
wire   [7:0] loc_V_1_fu_161_p4;
wire   [8:0] lhs_V_cast_fu_171_p1;
wire   [7:0] loc_V_fu_147_p4;
wire   [8:0] r_V_fu_175_p2;
wire   [8:0] tmp_i_cast_fu_181_p1;
wire   [0:0] ult_fu_185_p2;
wire   [0:0] notrhs_i_fu_191_p2;
wire   [8:0] r_V_1_fu_203_p2;
wire   [0:0] ult3_fu_209_p2;
wire   [0:0] notrhs_i1_fu_215_p2;
wire   [0:0] p_Result_10_fu_227_p3;
wire   [31:0] p_Result_11_fu_259_p3;
wire   [31:0] p_Val2_7_fu_271_p1;
reg   [1:0] grp_fu_82_opcode;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [107:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 108'b1;
#0 ap_return_0_preg = 32'b00000000000000000000000000000000;
#0 ap_return_1_preg = 32'b00000000000000000000000000000000;
end

dut_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_faddfsub_32ns_32ns_32_5_full_dsp_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_82_p0),
    .din1(grp_fu_82_p1),
    .opcode(grp_fu_82_opcode),
    .ce(1'b1),
    .dout(grp_fu_82_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_88_p0),
    .din1(grp_fu_88_p1),
    .ce(1'b1),
    .dout(grp_fu_88_p2)
);

dut_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fdiv_32ns_32ns_32_16_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_96_p0),
    .din1(grp_fu_96_p1),
    .ce(1'b1),
    .dout(grp_fu_96_p2)
);

dut_frsqrt_32ns_32ns_32_11_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_frsqrt_32ns_32ns_32_11_full_dsp_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_0),
    .din1(reg_128),
    .ce(1'b1),
    .dout(grp_fu_102_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= ap_const_lv32_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
            ap_return_0_preg <= cosThetaAdiv2_write_assign_phi_fu_61_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= ap_const_lv32_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
            ap_return_1_preg <= sinThetaAdiv2_write_assign_phi_fu_73_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(demorgan_fu_197_p2 == 1'b0))) begin
        cosThetaAdiv2_write_assign_reg_58 <= p_s_fu_243_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & (demorgan_fu_197_p2 == 1'b0) & ~(demorgan5_fu_221_p2 == 1'b0))) begin
        cosThetaAdiv2_write_assign_reg_58 <= storemerge1_fu_235_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st108_fsm_107) & (demorgan_reg_305 == 1'b0) & (demorgan5_reg_309 == 1'b0))) begin
        cosThetaAdiv2_write_assign_reg_58 <= reg_135;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(demorgan_fu_197_p2 == 1'b0))) begin
        sinThetaAdiv2_write_assign_reg_69 <= p_1_fu_251_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & (demorgan_fu_197_p2 == 1'b0) & ~(demorgan5_fu_221_p2 == 1'b0))) begin
        sinThetaAdiv2_write_assign_reg_69 <= ap_const_lv32_3F3504F3;
    end else if (((1'b1 == ap_sig_cseq_ST_st108_fsm_107) & (demorgan_reg_305 == 1'b0) & (demorgan5_reg_309 == 1'b0))) begin
        sinThetaAdiv2_write_assign_reg_69 <= grp_fu_88_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & (demorgan_fu_197_p2 == 1'b0))) begin
        demorgan5_reg_309 <= demorgan5_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        demorgan_reg_305 <= demorgan_fu_197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & (demorgan_fu_197_p2 == 1'b0) & (demorgan5_fu_221_p2 == 1'b0))) begin
        p_Result_7_reg_313 <= p_Val2_s_fu_142_p1[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st64_fsm_63))) begin
        reg_114 <= grp_fu_96_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st88_fsm_87))) begin
        reg_121 <= grp_fu_88_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st68_fsm_67) | (1'b1 == ap_sig_cseq_ST_st93_fsm_92))) begin
        reg_128 <= grp_fu_82_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st104_fsm_103))) begin
        reg_135 <= grp_fu_102_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        sinThetaA_int_reg_338 <= grp_fu_88_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st84_fsm_83))) begin
        tanThetaAdiv_reg_48 <= grp_fu_96_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st108_fsm_107))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
        ap_return_0 = cosThetaAdiv2_write_assign_phi_fu_61_p6;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
        ap_return_1 = sinThetaAdiv2_write_assign_phi_fu_73_p6;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (ap_sig_224) begin
        ap_sig_cseq_ST_st104_fsm_103 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st104_fsm_103 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_353) begin
        ap_sig_cseq_ST_st105_fsm_104 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st105_fsm_104 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_292) begin
        ap_sig_cseq_ST_st108_fsm_107 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st108_fsm_107 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_142) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_332) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_125) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_309) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_184) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_378) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_217) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_264) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_166) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_339) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_272) begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_191) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_363) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_149) begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_199) begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_370) begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_280) begin
        ap_sig_cseq_ST_st84_fsm_83 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_346) begin
        ap_sig_cseq_ST_st85_fsm_84 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st85_fsm_84 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_174) begin
        ap_sig_cseq_ST_st88_fsm_87 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st88_fsm_87 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_322) begin
        ap_sig_cseq_ST_st89_fsm_88 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_207) begin
        ap_sig_cseq_ST_st93_fsm_92 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st93_fsm_92 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_385) begin
        ap_sig_cseq_ST_st94_fsm_93 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st108_fsm_107) & (demorgan_reg_305 == 1'b0) & (demorgan5_reg_309 == 1'b0))) begin
        cosThetaAdiv2_write_assign_phi_fu_61_p6 = reg_135;
    end else begin
        cosThetaAdiv2_write_assign_phi_fu_61_p6 = cosThetaAdiv2_write_assign_reg_58;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == p_Result_12_fu_275_p3))) begin
        grp_fu_82_opcode = ap_const_lv2_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | ((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & (1'b0 == p_Result_12_fu_275_p3)) | (1'b1 == ap_sig_cseq_ST_st89_fsm_88))) begin
        grp_fu_82_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_82_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == p_Result_12_fu_275_p3))) begin
        grp_fu_82_p0 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | ((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & (1'b0 == p_Result_12_fu_275_p3)) | (1'b1 == ap_sig_cseq_ST_st89_fsm_88))) begin
        grp_fu_82_p0 = reg_121;
    end else begin
        grp_fu_82_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == p_Result_12_fu_275_p3))) begin
        grp_fu_82_p1 = reg_121;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | ((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & (1'b0 == p_Result_12_fu_275_p3)) | (1'b1 == ap_sig_cseq_ST_st89_fsm_88))) begin
        grp_fu_82_p1 = ap_const_lv32_3F800000;
    end else begin
        grp_fu_82_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st105_fsm_104)) begin
        grp_fu_88_p0 = reg_135;
    end else if ((1'b1 == ap_sig_cseq_ST_st85_fsm_84)) begin
        grp_fu_88_p0 = tanThetaAdiv_reg_48;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        grp_fu_88_p0 = reg_121;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_88_p0 = ret_i_i_i_i_fu_266_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_88_p0 = reg_114;
    end else begin
        grp_fu_88_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st105_fsm_104)) begin
        grp_fu_88_p1 = tanThetaAdiv_reg_48;
    end else if ((1'b1 == ap_sig_cseq_ST_st85_fsm_84)) begin
        grp_fu_88_p1 = tanThetaAdiv_phi_fu_51_p4;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_88_p1 = reg_135;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        grp_fu_88_p1 = reg_114;
    end else begin
        grp_fu_88_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        grp_fu_96_p0 = reg_128;
    end else if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_96_p0 = sinThetaA_int_reg_338;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_96_p0 = A_im;
    end else begin
        grp_fu_96_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        grp_fu_96_p1 = sinThetaA_int_reg_338;
    end else if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_96_p1 = reg_128;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_96_p1 = A_re;
    end else begin
        grp_fu_96_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st108_fsm_107) & (demorgan_reg_305 == 1'b0) & (demorgan5_reg_309 == 1'b0))) begin
        sinThetaAdiv2_write_assign_phi_fu_73_p6 = grp_fu_88_p2;
    end else begin
        sinThetaAdiv2_write_assign_phi_fu_73_p6 = sinThetaAdiv2_write_assign_reg_69;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if ((~(ap_start == 1'b0) & (~(demorgan5_fu_221_p2 == 1'b0) | ~(demorgan_fu_197_p2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_st108_fsm_107;
            end else if ((~(ap_start == 1'b0) & (demorgan_fu_197_p2 == 1'b0) & (demorgan5_fu_221_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            if (~(1'b0 == p_Result_12_fu_275_p3)) begin
                ap_NS_fsm = ap_ST_st65_fsm_64;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_125 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_142 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_149 = (1'b1 == ap_CS_fsm[ap_const_lv32_3F]);
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_166 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_174 = (1'b1 == ap_CS_fsm[ap_const_lv32_57]);
end

always @ (*) begin
    ap_sig_184 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_191 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_199 = (1'b1 == ap_CS_fsm[ap_const_lv32_43]);
end

always @ (*) begin
    ap_sig_207 = (1'b1 == ap_CS_fsm[ap_const_lv32_5C]);
end

always @ (*) begin
    ap_sig_217 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_224 = (1'b1 == ap_CS_fsm[ap_const_lv32_67]);
end

always @ (*) begin
    ap_sig_264 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_272 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_280 = (1'b1 == ap_CS_fsm[ap_const_lv32_53]);
end

always @ (*) begin
    ap_sig_292 = (1'b1 == ap_CS_fsm[ap_const_lv32_6B]);
end

always @ (*) begin
    ap_sig_309 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_322 = (1'b1 == ap_CS_fsm[ap_const_lv32_58]);
end

always @ (*) begin
    ap_sig_332 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_339 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_346 = (1'b1 == ap_CS_fsm[ap_const_lv32_54]);
end

always @ (*) begin
    ap_sig_353 = (1'b1 == ap_CS_fsm[ap_const_lv32_68]);
end

always @ (*) begin
    ap_sig_363 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_370 = (1'b1 == ap_CS_fsm[ap_const_lv32_44]);
end

always @ (*) begin
    ap_sig_378 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_385 = (1'b1 == ap_CS_fsm[ap_const_lv32_5D]);
end

assign demorgan5_fu_221_p2 = (ult3_fu_209_p2 | notrhs_i1_fu_215_p2);

assign demorgan_fu_197_p2 = (ult_fu_185_p2 | notrhs_i_fu_191_p2);

assign grp_fu_107_p3 = p_Val2_s_fu_142_p1[ap_const_lv32_1F];

assign lhs_V_cast_fu_171_p1 = loc_V_1_fu_161_p4;

assign loc_V_1_fu_161_p4 = {{p_Val2_4_fu_157_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign loc_V_fu_147_p4 = {{p_Val2_s_fu_142_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign notrhs_i1_fu_215_p2 = ((loc_V_fu_147_p4 == ap_const_lv8_0) ? 1'b1 : 1'b0);

assign notrhs_i_fu_191_p2 = ((loc_V_1_fu_161_p4 == ap_const_lv8_0) ? 1'b1 : 1'b0);

assign p_1_fu_251_p3 = ((grp_fu_107_p3[0:0] === 1'b1) ? ap_const_lv32_3F800000 : ap_const_lv32_0);

assign p_Result_10_fu_227_p3 = p_Val2_4_fu_157_p1[ap_const_lv32_1F];

assign p_Result_11_fu_259_p3 = {{p_Result_7_reg_313}, {ap_const_lv31_3F800000}};

assign p_Result_12_fu_275_p3 = p_Val2_7_fu_271_p1[ap_const_lv32_1F];

assign p_Val2_4_fu_157_p1 = A_im;

assign p_Val2_7_fu_271_p1 = reg_121;

assign p_Val2_s_fu_142_p1 = A_re;

assign p_s_fu_243_p3 = ((grp_fu_107_p3[0:0] === 1'b1) ? ap_const_lv32_0 : ap_const_lv32_3F800000);

assign r_V_1_fu_203_p2 = (tmp_i_cast_fu_181_p1 + ap_const_lv9_18);

assign r_V_fu_175_p2 = (lhs_V_cast_fu_171_p1 + ap_const_lv9_18);

assign ret_i_i_i_i_fu_266_p1 = p_Result_11_fu_259_p3;

assign storemerge1_fu_235_p3 = ((p_Result_10_fu_227_p3[0:0] === 1'b1) ? ap_const_lv32_BF3504F3 : ap_const_lv32_3F3504F3);

assign tanThetaAdiv_phi_fu_51_p4 = tanThetaAdiv_reg_48;

assign tmp_i_cast_fu_181_p1 = loc_V_fu_147_p4;

assign ult3_fu_209_p2 = ((r_V_1_fu_203_p2 < lhs_V_cast_fu_171_p1) ? 1'b1 : 1'b0);

assign ult_fu_185_p2 = ((r_V_fu_175_p2 < tmp_i_cast_fu_181_p1) ? 1'b1 : 1'b0);

endmodule //dut_calc_angle_float_float_s
