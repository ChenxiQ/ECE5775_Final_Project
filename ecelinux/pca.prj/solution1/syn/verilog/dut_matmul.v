// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_matmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_V_dout,
        strm_in_V_empty_n,
        strm_in_V_read,
        strm_out_V_din,
        strm_out_V_full_n,
        strm_out_V_write
);

parameter    ap_ST_st1_fsm_0 = 16'b1;
parameter    ap_ST_st2_fsm_1 = 16'b10;
parameter    ap_ST_st3_fsm_2 = 16'b100;
parameter    ap_ST_st4_fsm_3 = 16'b1000;
parameter    ap_ST_st5_fsm_4 = 16'b10000;
parameter    ap_ST_st6_fsm_5 = 16'b100000;
parameter    ap_ST_st7_fsm_6 = 16'b1000000;
parameter    ap_ST_st8_fsm_7 = 16'b10000000;
parameter    ap_ST_st9_fsm_8 = 16'b100000000;
parameter    ap_ST_st10_fsm_9 = 16'b1000000000;
parameter    ap_ST_st11_fsm_10 = 16'b10000000000;
parameter    ap_ST_st12_fsm_11 = 16'b100000000000;
parameter    ap_ST_st13_fsm_12 = 16'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 16'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 16'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 16'b1000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv10_310 = 10'b1100010000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv7_64 = 7'b1100100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv7_63 = 7'b1100011;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_V_dout;
input   strm_in_V_empty_n;
output   strm_in_V_read;
output  [31:0] strm_out_V_din;
input   strm_out_V_full_n;
output   strm_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg strm_in_V_read;
reg strm_out_V_write;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_33;
reg    strm_in_V_blk_n;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_52;
wire   [0:0] exitcond8_fu_209_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_63;
wire   [0:0] exitcond6_fu_238_p2;
reg    strm_out_V_blk_n;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_75;
reg   [0:0] tmp_5_reg_362;
wire   [9:0] i_1_fu_203_p2;
reg   [9:0] i_1_reg_310;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_88;
wire   [6:0] m_1_fu_215_p2;
reg    ap_sig_94;
wire   [9:0] j_1_fu_232_p2;
reg   [9:0] j_1_reg_326;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_104;
wire   [6:0] n_1_fu_244_p2;
reg    ap_sig_109;
wire   [6:0] k_1_fu_261_p2;
reg   [6:0] k_1_reg_342;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_119;
wire   [0:0] tmp_2_fu_267_p2;
reg   [0:0] tmp_2_reg_347;
wire   [0:0] exitcond_fu_255_p2;
wire   [0:0] tmp_5_fu_279_p2;
wire   [31:0] A_q0;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_138;
wire   [31:0] B_q0;
wire   [31:0] grp_fu_186_p2;
reg   [31:0] tmp_4_reg_376;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_149;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_158;
wire   [31:0] grp_fu_182_p2;
reg   [31:0] result_reg_386;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_167;
reg   [6:0] A_address0;
reg    A_ce0;
reg    A_we0;
reg   [6:0] B_address0;
reg    B_ce0;
reg    B_we0;
reg   [9:0] i_reg_127;
wire   [0:0] exitcond7_fu_226_p2;
reg   [6:0] m_reg_138;
wire   [0:0] exitcond9_fu_197_p2;
reg   [9:0] j_reg_149;
reg   [6:0] n_reg_160;
reg   [6:0] k_reg_171;
reg    ap_sig_217;
wire   [63:0] tmp_s_fu_221_p1;
wire   [63:0] tmp_1_fu_250_p1;
wire   [63:0] tmp_3_fu_273_p1;
reg   [31:0] tmp_fu_64;
wire   [31:0] grp_fu_182_p0;
reg   [15:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'b1;
end

dut_matmul_A #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
A_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_address0),
    .ce0(A_ce0),
    .we0(A_we0),
    .d0(strm_in_V_dout),
    .q0(A_q0)
);

dut_matmul_A #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
B_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_address0),
    .ce0(B_ce0),
    .we0(B_we0),
    .d0(strm_in_V_dout),
    .q0(B_q0)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_182_p0),
    .din1(tmp_4_reg_376),
    .ce(1'b1),
    .dout(grp_fu_182_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A_q0),
    .din1(B_q0),
    .ce(1'b1),
    .dout(grp_fu_186_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond7_fu_226_p2))) begin
        i_reg_127 <= i_1_reg_310;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_127 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_94 & ~(exitcond8_fu_209_p2 == 1'b0))) begin
        j_reg_149 <= ap_const_lv10_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond_fu_255_p2))) begin
        j_reg_149 <= j_1_reg_326;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_109 & ~(1'b0 == exitcond6_fu_238_p2))) begin
        k_reg_171 <= ap_const_lv7_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & ~ap_sig_217)) begin
        k_reg_171 <= k_1_reg_342;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond8_fu_209_p2 == 1'b0) & ~ap_sig_94)) begin
        m_reg_138 <= m_1_fu_215_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_197_p2))) begin
        m_reg_138 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_fu_238_p2) & ~ap_sig_109)) begin
        n_reg_160 <= n_1_fu_244_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond7_fu_226_p2))) begin
        n_reg_160 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & ~ap_sig_217)) begin
        tmp_fu_64 <= result_reg_386;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        tmp_fu_64 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_310 <= i_1_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_1_reg_326 <= j_1_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        k_1_reg_342 <= k_1_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        result_reg_386 <= grp_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond_fu_255_p2))) begin
        tmp_2_reg_347 <= tmp_2_fu_267_p2;
        tmp_5_reg_362 <= tmp_5_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        tmp_4_reg_376 <= grp_fu_186_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        A_address0 = tmp_s_fu_221_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        A_address0 = tmp_3_fu_273_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_94) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond8_fu_209_p2 == 1'b0) & ~ap_sig_94)) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        B_address0 = tmp_1_fu_250_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        B_address0 = tmp_3_fu_273_p1;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_109) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_fu_238_p2) & ~ap_sig_109)) begin
        B_we0 = 1'b1;
    end else begin
        B_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond9_fu_197_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond9_fu_197_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_149) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_158) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_167) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_75) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_33) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_88) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_52) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_104) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_63) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_119) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_138) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond8_fu_209_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_fu_238_p2)))) begin
        strm_in_V_blk_n = strm_in_V_empty_n;
    end else begin
        strm_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond8_fu_209_p2 == 1'b0) & ~ap_sig_94) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond6_fu_238_p2) & ~ap_sig_109))) begin
        strm_in_V_read = 1'b1;
    end else begin
        strm_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & ~(1'b0 == tmp_5_reg_362))) begin
        strm_out_V_blk_n = strm_out_V_full_n;
    end else begin
        strm_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) & ~(1'b0 == tmp_5_reg_362) & ~ap_sig_217)) begin
        strm_out_V_write = 1'b1;
    end else begin
        strm_out_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond9_fu_197_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (((exitcond8_fu_209_p2 == 1'b0) & ~ap_sig_94)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else if ((~ap_sig_94 & ~(exitcond8_fu_209_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond7_fu_226_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (((1'b0 == exitcond6_fu_238_p2) & ~ap_sig_109)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if ((~ap_sig_109 & ~(1'b0 == exitcond6_fu_238_p2))) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == exitcond_fu_255_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            if (~ap_sig_217) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_104 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_109 = ((1'b0 == exitcond6_fu_238_p2) & (strm_in_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_119 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_138 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_149 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_158 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_167 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_217 = (~(1'b0 == tmp_5_reg_362) & (strm_out_V_full_n == 1'b0));
end

always @ (*) begin
    ap_sig_33 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_52 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_63 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_75 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_88 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_94 = ((exitcond8_fu_209_p2 == 1'b0) & (strm_in_V_empty_n == 1'b0));
end

assign exitcond6_fu_238_p2 = ((n_reg_160 == ap_const_lv7_64) ? 1'b1 : 1'b0);

assign exitcond7_fu_226_p2 = ((j_reg_149 == ap_const_lv10_310) ? 1'b1 : 1'b0);

assign exitcond8_fu_209_p2 = ((m_reg_138 == ap_const_lv7_64) ? 1'b1 : 1'b0);

assign exitcond9_fu_197_p2 = ((i_reg_127 == ap_const_lv10_310) ? 1'b1 : 1'b0);

assign exitcond_fu_255_p2 = ((k_reg_171 == ap_const_lv7_64) ? 1'b1 : 1'b0);

assign grp_fu_182_p0 = ((tmp_2_reg_347[0:0] === 1'b1) ? ap_const_lv32_0 : tmp_fu_64);

assign i_1_fu_203_p2 = (i_reg_127 + ap_const_lv10_1);

assign j_1_fu_232_p2 = (j_reg_149 + ap_const_lv10_1);

assign k_1_fu_261_p2 = (k_reg_171 + ap_const_lv7_1);

assign m_1_fu_215_p2 = (m_reg_138 + ap_const_lv7_1);

assign n_1_fu_244_p2 = (n_reg_160 + ap_const_lv7_1);

assign strm_out_V_din = result_reg_386;

assign tmp_1_fu_250_p1 = n_reg_160;

assign tmp_2_fu_267_p2 = ((k_reg_171 == ap_const_lv7_0) ? 1'b1 : 1'b0);

assign tmp_3_fu_273_p1 = k_reg_171;

assign tmp_5_fu_279_p2 = ((k_reg_171 == ap_const_lv7_63) ? 1'b1 : 1'b0);

assign tmp_s_fu_221_p1 = m_reg_138;

endmodule //dut_matmul
