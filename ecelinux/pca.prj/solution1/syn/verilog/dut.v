// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.419400,HLS_SYN_LAT=386,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=31,HLS_SYN_FF=7966,HLS_SYN_LUT=12722}" *)

module dut (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_V_dout,
        strm_in_V_empty_n,
        strm_in_V_read,
        strm_out_V_din,
        strm_out_V_full_n,
        strm_out_V_write
);

parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_st2_fsm_1 = 3'b10;
parameter    ap_ST_st3_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_36 = 32'b110110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_V_dout;
input   strm_in_V_empty_n;
output   strm_in_V_read;
output  [31:0] strm_out_V_din;
input   strm_out_V_full_n;
output   strm_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg strm_in_V_read;
reg strm_out_V_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_18;
reg    strm_in_V_blk_n;
wire   [31:0] p_Val2_s_fu_84_p1;
reg   [31:0] p_Val2_s_reg_227;
reg    ap_sig_41;
wire   [22:0] loc_V_1_fu_98_p1;
reg   [22:0] loc_V_1_reg_232;
wire   [0:0] isNeg_fu_112_p3;
reg   [0:0] isNeg_reg_237;
wire   [8:0] sh_assign_1_fu_130_p3;
reg   [8:0] sh_assign_1_reg_242;
wire   [0:0] cond_fu_221_p2;
reg   [0:0] cond_reg_248;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_57;
wire    grp_dut_calc_svd_fu_76_ap_start;
wire    grp_dut_calc_svd_fu_76_ap_done;
wire    grp_dut_calc_svd_fu_76_ap_idle;
wire    grp_dut_calc_svd_fu_76_ap_ready;
wire    grp_dut_calc_svd_fu_76_strm_in_V_read;
wire   [31:0] grp_dut_calc_svd_fu_76_strm_out_V_din;
wire    grp_dut_calc_svd_fu_76_strm_out_V_write;
reg    ap_reg_grp_dut_calc_svd_fu_76_ap_start;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_82;
wire   [7:0] loc_V_fu_88_p4;
wire   [8:0] tmp_i_i_i_cast1_fu_102_p1;
wire   [8:0] sh_assign_fu_106_p2;
wire   [7:0] tmp_13_i_i_fu_120_p2;
wire  signed [8:0] tmp_13_i_i_cast_fu_126_p1;
wire   [23:0] p_Result_1_fu_145_p3;
wire  signed [31:0] sh_assign_1_cast_fu_156_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_159_p1;
wire   [77:0] tmp_i_i_fu_152_p1;
wire   [77:0] tmp_14_i_i_fu_162_p1;
wire   [23:0] tmp_15_i_i_fu_166_p2;
wire   [0:0] tmp_fu_178_p3;
wire   [77:0] tmp_17_i_i_fu_172_p2;
wire   [31:0] tmp_2_fu_186_p1;
wire   [31:0] tmp_3_fu_190_p4;
wire   [31:0] p_Val2_3_fu_200_p3;
wire   [0:0] p_Result_s_fu_138_p3;
wire   [31:0] p_Val2_8_i_i_fu_207_p2;
wire   [31:0] p_Val2_5_fu_213_p3;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_reg_grp_dut_calc_svd_fu_76_ap_start = 1'b0;
end

dut_calc_svd grp_dut_calc_svd_fu_76(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_calc_svd_fu_76_ap_start),
    .ap_done(grp_dut_calc_svd_fu_76_ap_done),
    .ap_idle(grp_dut_calc_svd_fu_76_ap_idle),
    .ap_ready(grp_dut_calc_svd_fu_76_ap_ready),
    .strm_in_V_dout(strm_in_V_dout),
    .strm_in_V_empty_n(strm_in_V_empty_n),
    .strm_in_V_read(grp_dut_calc_svd_fu_76_strm_in_V_read),
    .strm_out_V_din(grp_dut_calc_svd_fu_76_strm_out_V_din),
    .strm_out_V_full_n(strm_out_V_full_n),
    .strm_out_V_write(grp_dut_calc_svd_fu_76_strm_out_V_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_calc_svd_fu_76_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(cond_fu_221_p2 == 1'b0))) begin
            ap_reg_grp_dut_calc_svd_fu_76_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_calc_svd_fu_76_ap_ready)) begin
            ap_reg_grp_dut_calc_svd_fu_76_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        cond_reg_248 <= cond_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_41)) begin
        isNeg_reg_237 <= sh_assign_fu_106_p2[ap_const_lv32_8];
        loc_V_1_reg_232 <= loc_V_1_fu_98_p1;
        p_Val2_s_reg_227 <= p_Val2_s_fu_84_p1;
        sh_assign_1_reg_242 <= sh_assign_1_fu_130_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(~(cond_reg_248 == 1'b0) & (1'b0 == grp_dut_calc_svd_fu_76_ap_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(~(cond_reg_248 == 1'b0) & (1'b0 == grp_dut_calc_svd_fu_76_ap_done)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_18) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_57) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        strm_in_V_blk_n = strm_in_V_empty_n;
    end else begin
        strm_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_41)) begin
        strm_in_V_read = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(cond_reg_248 == 1'b0))) begin
        strm_in_V_read = grp_dut_calc_svd_fu_76_strm_in_V_read;
    end else begin
        strm_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(cond_reg_248 == 1'b0))) begin
        strm_out_V_write = grp_dut_calc_svd_fu_76_strm_out_V_write;
    end else begin
        strm_out_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_41) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            if (~(~(cond_reg_248 == 1'b0) & (1'b0 == grp_dut_calc_svd_fu_76_ap_done))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_18 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_41 = ((ap_start == 1'b0) | (strm_in_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_57 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign cond_fu_221_p2 = ((p_Val2_5_fu_213_p3 == ap_const_lv32_1) ? 1'b1 : 1'b0);

assign grp_dut_calc_svd_fu_76_ap_start = ap_reg_grp_dut_calc_svd_fu_76_ap_start;

assign isNeg_fu_112_p3 = sh_assign_fu_106_p2[ap_const_lv32_8];

assign loc_V_1_fu_98_p1 = p_Val2_s_fu_84_p1[22:0];

assign loc_V_fu_88_p4 = {{p_Val2_s_fu_84_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign p_Result_1_fu_145_p3 = {{1'b1}, {loc_V_1_reg_232}};

assign p_Result_s_fu_138_p3 = p_Val2_s_reg_227[ap_const_lv32_1F];

assign p_Val2_3_fu_200_p3 = ((isNeg_reg_237[0:0] === 1'b1) ? tmp_2_fu_186_p1 : tmp_3_fu_190_p4);

assign p_Val2_5_fu_213_p3 = ((p_Result_s_fu_138_p3[0:0] === 1'b1) ? p_Val2_8_i_i_fu_207_p2 : p_Val2_3_fu_200_p3);

assign p_Val2_8_i_i_fu_207_p2 = (ap_const_lv32_0 - p_Val2_3_fu_200_p3);

assign p_Val2_s_fu_84_p1 = strm_in_V_dout;

assign sh_assign_1_cast_cast_fu_159_p1 = $signed(sh_assign_1_reg_242);

assign sh_assign_1_cast_fu_156_p1 = $signed(sh_assign_1_reg_242);

assign sh_assign_1_fu_130_p3 = ((isNeg_fu_112_p3[0:0] === 1'b1) ? tmp_13_i_i_cast_fu_126_p1 : sh_assign_fu_106_p2);

assign sh_assign_fu_106_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast1_fu_102_p1));

assign strm_out_V_din = grp_dut_calc_svd_fu_76_strm_out_V_din;

assign tmp_13_i_i_cast_fu_126_p1 = $signed(tmp_13_i_i_fu_120_p2);

assign tmp_13_i_i_fu_120_p2 = (ap_const_lv8_7F - loc_V_fu_88_p4);

assign tmp_14_i_i_fu_162_p1 = $unsigned(sh_assign_1_cast_fu_156_p1);

assign tmp_15_i_i_fu_166_p2 = p_Result_1_fu_145_p3 >> sh_assign_1_cast_cast_fu_159_p1;

assign tmp_17_i_i_fu_172_p2 = tmp_i_i_fu_152_p1 << tmp_14_i_i_fu_162_p1;

assign tmp_2_fu_186_p1 = tmp_fu_178_p3;

assign tmp_3_fu_190_p4 = {{tmp_17_i_i_fu_172_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_fu_178_p3 = tmp_15_i_i_fu_166_p2[ap_const_lv32_17];

assign tmp_i_i_fu_152_p1 = p_Result_1_fu_145_p3;

assign tmp_i_i_i_cast1_fu_102_p1 = loc_V_fu_88_p4;

endmodule //dut
