// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_cov (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_address0,
        X_ce0,
        X_q0,
        XXT_address0,
        XXT_ce0,
        XXT_we0,
        XXT_d0,
        XXT_q0
);

parameter    ap_ST_st1_fsm_0 = 26'b1;
parameter    ap_ST_st2_fsm_1 = 26'b10;
parameter    ap_ST_st3_fsm_2 = 26'b100;
parameter    ap_ST_st4_fsm_3 = 26'b1000;
parameter    ap_ST_st5_fsm_4 = 26'b10000;
parameter    ap_ST_st6_fsm_5 = 26'b100000;
parameter    ap_ST_st7_fsm_6 = 26'b1000000;
parameter    ap_ST_st8_fsm_7 = 26'b10000000;
parameter    ap_ST_st9_fsm_8 = 26'b100000000;
parameter    ap_ST_st10_fsm_9 = 26'b1000000000;
parameter    ap_ST_st11_fsm_10 = 26'b10000000000;
parameter    ap_ST_st12_fsm_11 = 26'b100000000000;
parameter    ap_ST_st13_fsm_12 = 26'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 26'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 26'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 26'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 26'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 26'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 26'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 26'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 26'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 26'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 26'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 26'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 26'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 26'b10000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv18_0 = 18'b000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv20_0 = 20'b00000000000000000000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_43470000 = 32'b1000011010001110000000000000000;
parameter    ap_const_lv18_C8 = 18'b11001000;
parameter    ap_const_lv10_310 = 10'b1100010000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv8_C8 = 8'b11001000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv18_310 = 18'b1100010000;
parameter    ap_const_lv20_310 = 20'b1100010000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [17:0] X_address0;
output   X_ce0;
input  [31:0] X_q0;
output  [19:0] XXT_address0;
output   XXT_ce0;
output   XXT_we0;
output  [31:0] XXT_d0;
input  [31:0] XXT_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[17:0] X_address0;
reg X_ce0;
reg[19:0] XXT_address0;
reg XXT_ce0;
reg XXT_we0;
reg[31:0] XXT_d0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_43;
wire   [17:0] next_mul2_fu_175_p2;
reg   [17:0] next_mul2_reg_284;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_69;
wire   [9:0] i_7_fu_187_p2;
reg   [9:0] i_7_reg_292;
wire   [17:0] tmp_cast_fu_193_p1;
reg   [17:0] tmp_cast_reg_297;
wire   [0:0] exitcond3_fu_181_p2;
wire   [7:0] j_5_fu_203_p2;
reg   [7:0] j_5_reg_305;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_86;
wire   [0:0] exitcond2_fu_197_p2;
wire   [17:0] next_mul_fu_224_p2;
reg   [17:0] next_mul_reg_315;
wire   [17:0] tmp_186_fu_230_p2;
reg   [17:0] tmp_186_reg_320;
wire   [19:0] next_mul4_fu_239_p2;
reg   [19:0] next_mul4_reg_325;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_104;
wire   [9:0] i_8_fu_251_p2;
reg   [9:0] i_8_reg_333;
wire   [9:0] j_6_fu_263_p2;
reg   [9:0] j_6_reg_341;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_115;
reg   [19:0] XXT_addr_reg_346;
wire   [0:0] exitcond_fu_257_p2;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_128;
wire   [31:0] grp_fu_168_p2;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_137;
reg   [17:0] XT_address0;
reg    XT_ce0;
reg    XT_we0;
wire   [31:0] XT_q0;
wire    grp_dut_matrix_multiply_alt26_fu_159_ap_start;
wire    grp_dut_matrix_multiply_alt26_fu_159_ap_done;
wire    grp_dut_matrix_multiply_alt26_fu_159_ap_idle;
wire    grp_dut_matrix_multiply_alt26_fu_159_ap_ready;
wire   [17:0] grp_dut_matrix_multiply_alt26_fu_159_A_address0;
wire    grp_dut_matrix_multiply_alt26_fu_159_A_ce0;
wire   [17:0] grp_dut_matrix_multiply_alt26_fu_159_B_address0;
wire    grp_dut_matrix_multiply_alt26_fu_159_B_ce0;
wire   [19:0] grp_dut_matrix_multiply_alt26_fu_159_C_address0;
wire    grp_dut_matrix_multiply_alt26_fu_159_C_ce0;
wire    grp_dut_matrix_multiply_alt26_fu_159_C_we0;
wire   [31:0] grp_dut_matrix_multiply_alt26_fu_159_C_d0;
reg   [9:0] i_reg_80;
reg   [17:0] phi_mul1_reg_91;
reg   [7:0] j_reg_103;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_183;
reg   [17:0] phi_mul_reg_114;
reg   [9:0] i1_reg_125;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_195;
reg   [19:0] phi_mul3_reg_136;
reg   [9:0] j2_reg_148;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_212;
wire   [0:0] exitcond1_fu_245_p2;
reg    ap_reg_grp_dut_matrix_multiply_alt26_fu_159_ap_start;
wire   [63:0] tmp_202_cast_fu_219_p1;
wire   [63:0] tmp_204_cast_fu_235_p1;
wire   [63:0] tmp_205_cast_fu_279_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_231;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_239;
wire   [17:0] tmp_151_cast_fu_209_p1;
wire   [17:0] tmp_s_fu_213_p2;
wire   [19:0] tmp_152_cast_fu_269_p1;
wire   [19:0] tmp_187_fu_273_p2;
reg   [25:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'b1;
#0 ap_reg_grp_dut_matrix_multiply_alt26_fu_159_ap_start = 1'b0;
end

dut_cov_XT #(
    .DataWidth( 32 ),
    .AddressRange( 156800 ),
    .AddressWidth( 18 ))
XT_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(XT_address0),
    .ce0(XT_ce0),
    .we0(XT_we0),
    .d0(X_q0),
    .q0(XT_q0)
);

dut_matrix_multiply_alt26 grp_dut_matrix_multiply_alt26_fu_159(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_matrix_multiply_alt26_fu_159_ap_start),
    .ap_done(grp_dut_matrix_multiply_alt26_fu_159_ap_done),
    .ap_idle(grp_dut_matrix_multiply_alt26_fu_159_ap_idle),
    .ap_ready(grp_dut_matrix_multiply_alt26_fu_159_ap_ready),
    .A_address0(grp_dut_matrix_multiply_alt26_fu_159_A_address0),
    .A_ce0(grp_dut_matrix_multiply_alt26_fu_159_A_ce0),
    .A_q0(X_q0),
    .B_address0(grp_dut_matrix_multiply_alt26_fu_159_B_address0),
    .B_ce0(grp_dut_matrix_multiply_alt26_fu_159_B_ce0),
    .B_q0(XT_q0),
    .C_address0(grp_dut_matrix_multiply_alt26_fu_159_C_address0),
    .C_ce0(grp_dut_matrix_multiply_alt26_fu_159_C_ce0),
    .C_we0(grp_dut_matrix_multiply_alt26_fu_159_C_we0),
    .C_d0(grp_dut_matrix_multiply_alt26_fu_159_C_d0)
);

dut_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fdiv_32ns_32ns_32_16_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(XXT_q0),
    .din1(ap_const_lv32_43470000),
    .ce(1'b1),
    .dout(grp_fu_168_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_matrix_multiply_alt26_fu_159_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_181_p2 == 1'b0))) begin
            ap_reg_grp_dut_matrix_multiply_alt26_fu_159_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_matrix_multiply_alt26_fu_159_ap_ready)) begin
            ap_reg_grp_dut_matrix_multiply_alt26_fu_159_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond_fu_257_p2))) begin
        i1_reg_125 <= i_8_reg_333;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == grp_dut_matrix_multiply_alt26_fu_159_ap_done))) begin
        i1_reg_125 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond2_fu_197_p2))) begin
        i_reg_80 <= i_7_reg_292;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_80 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond1_fu_245_p2))) begin
        j2_reg_148 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        j2_reg_148 <= j_6_reg_341;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_181_p2 == 1'b0))) begin
        j_reg_103 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_reg_103 <= j_5_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond2_fu_197_p2))) begin
        phi_mul1_reg_91 <= next_mul2_reg_284;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        phi_mul1_reg_91 <= ap_const_lv18_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond_fu_257_p2))) begin
        phi_mul3_reg_136 <= next_mul4_reg_325;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == grp_dut_matrix_multiply_alt26_fu_159_ap_done))) begin
        phi_mul3_reg_136 <= ap_const_lv20_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_181_p2 == 1'b0))) begin
        phi_mul_reg_114 <= ap_const_lv18_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        phi_mul_reg_114 <= next_mul_reg_315;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond_fu_257_p2))) begin
        XXT_addr_reg_346 <= tmp_205_cast_fu_279_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_7_reg_292 <= i_7_fu_187_p2;
        next_mul2_reg_284 <= next_mul2_fu_175_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_8_reg_333 <= i_8_fu_251_p2;
        next_mul4_reg_325 <= next_mul4_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_5_reg_305 <= j_5_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        j_6_reg_341 <= j_6_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond2_fu_197_p2))) begin
        next_mul_reg_315 <= next_mul_fu_224_p2;
        tmp_186_reg_320 <= tmp_186_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_181_p2 == 1'b0))) begin
        tmp_cast_reg_297[9 : 0] <= tmp_cast_fu_193_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        XT_address0 = tmp_204_cast_fu_235_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        XT_address0 = grp_dut_matrix_multiply_alt26_fu_159_B_address0;
    end else begin
        XT_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        XT_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        XT_ce0 = grp_dut_matrix_multiply_alt26_fu_159_B_ce0;
    end else begin
        XT_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        XT_we0 = 1'b1;
    end else begin
        XT_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        XXT_address0 = XXT_addr_reg_346;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        XXT_address0 = tmp_205_cast_fu_279_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        XXT_address0 = grp_dut_matrix_multiply_alt26_fu_159_C_address0;
    end else begin
        XXT_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        XXT_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        XXT_ce0 = grp_dut_matrix_multiply_alt26_fu_159_C_ce0;
    end else begin
        XXT_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        XXT_d0 = grp_fu_168_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        XXT_d0 = grp_dut_matrix_multiply_alt26_fu_159_C_d0;
    end else begin
        XXT_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        XXT_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        XXT_we0 = grp_dut_matrix_multiply_alt26_fu_159_C_we0;
    end else begin
        XXT_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        X_address0 = tmp_202_cast_fu_219_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        X_address0 = grp_dut_matrix_multiply_alt26_fu_159_A_address0;
    end else begin
        X_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        X_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        X_ce0 = grp_dut_matrix_multiply_alt26_fu_159_A_ce0;
    end else begin
        X_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond1_fu_245_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond1_fu_245_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_43) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_212) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_69) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_86) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_183) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_195) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_104) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_115) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_231) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_239) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((exitcond3_fu_181_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((1'b0 == exitcond2_fu_197_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == grp_dut_matrix_multiply_alt26_fu_159_ap_done)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == exitcond1_fu_245_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if ((1'b0 == exitcond_fu_257_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_104 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_115 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_183 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_195 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_212 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_231 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_239 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_43 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_69 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_86 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign exitcond1_fu_245_p2 = ((i1_reg_125 == ap_const_lv10_310) ? 1'b1 : 1'b0);

assign exitcond2_fu_197_p2 = ((j_reg_103 == ap_const_lv8_C8) ? 1'b1 : 1'b0);

assign exitcond3_fu_181_p2 = ((i_reg_80 == ap_const_lv10_310) ? 1'b1 : 1'b0);

assign exitcond_fu_257_p2 = ((j2_reg_148 == ap_const_lv10_310) ? 1'b1 : 1'b0);

assign grp_dut_matrix_multiply_alt26_fu_159_ap_start = ap_reg_grp_dut_matrix_multiply_alt26_fu_159_ap_start;

assign i_7_fu_187_p2 = (i_reg_80 + ap_const_lv10_1);

assign i_8_fu_251_p2 = (i1_reg_125 + ap_const_lv10_1);

assign j_5_fu_203_p2 = (j_reg_103 + ap_const_lv8_1);

assign j_6_fu_263_p2 = (j2_reg_148 + ap_const_lv10_1);

assign next_mul2_fu_175_p2 = (phi_mul1_reg_91 + ap_const_lv18_C8);

assign next_mul4_fu_239_p2 = (phi_mul3_reg_136 + ap_const_lv20_310);

assign next_mul_fu_224_p2 = (phi_mul_reg_114 + ap_const_lv18_310);

assign tmp_151_cast_fu_209_p1 = j_reg_103;

assign tmp_152_cast_fu_269_p1 = j2_reg_148;

assign tmp_186_fu_230_p2 = (phi_mul_reg_114 + tmp_cast_reg_297);

assign tmp_187_fu_273_p2 = (phi_mul3_reg_136 + tmp_152_cast_fu_269_p1);

assign tmp_202_cast_fu_219_p1 = tmp_s_fu_213_p2;

assign tmp_204_cast_fu_235_p1 = tmp_186_reg_320;

assign tmp_205_cast_fu_279_p1 = tmp_187_fu_273_p2;

assign tmp_cast_fu_193_p1 = i_reg_80;

assign tmp_s_fu_213_p2 = (phi_mul1_reg_91 + tmp_151_cast_fu_209_p1);

always @ (posedge ap_clk) begin
    tmp_cast_reg_297[17:10] <= 8'b00000000;
end

endmodule //dut_cov
