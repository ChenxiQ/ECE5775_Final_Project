-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_calc_svd_update_on_diag_s_off_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    top_left : IN STD_LOGIC_VECTOR (31 downto 0);
    bottom_right : IN STD_LOGIC_VECTOR (31 downto 0);
    s_temp_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    s_temp_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    s_temp_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    s_temp_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (31 downto 0);
    u_row_temp_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    u_row_temp_0_ce0 : OUT STD_LOGIC;
    u_row_temp_0_we0 : OUT STD_LOGIC;
    u_row_temp_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    u_row_temp_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    u_row_temp_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    u_row_temp_1_ce0 : OUT STD_LOGIC;
    u_row_temp_1_we0 : OUT STD_LOGIC;
    u_row_temp_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    u_row_temp_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v_row_temp_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v_row_temp_0_ce0 : OUT STD_LOGIC;
    v_row_temp_0_we0 : OUT STD_LOGIC;
    v_row_temp_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v_row_temp_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v_row_temp_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v_row_temp_1_ce0 : OUT STD_LOGIC;
    v_row_temp_1_we0 : OUT STD_LOGIC;
    v_row_temp_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v_row_temp_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dut_calc_svd_update_on_diag_s_off_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (53 downto 0) := "000000000001000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (53 downto 0) := "000000000010000000000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (53 downto 0) := "000000000100000000000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (53 downto 0) := "000000001000000000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (53 downto 0) := "000000010000000000000000000000000000000000000000000000";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (53 downto 0) := "000000100000000000000000000000000000000000000000000000";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (53 downto 0) := "000001000000000000000000000000000000000000000000000000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (53 downto 0) := "000010000000000000000000000000000000000000000000000000";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (53 downto 0) := "000100000000000000000000000000000000000000000000000000";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (53 downto 0) := "001000000000000000000000000000000000000000000000000000";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (53 downto 0) := "010000000000000000000000000000000000000000000000000000";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (53 downto 0) := "100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_71 : BOOLEAN;
    signal grp_fu_221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_148 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_155 : BOOLEAN;
    signal grp_fu_227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_368 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st43_fsm_42 : STD_LOGIC;
    signal ap_sig_167 : BOOLEAN;
    signal grp_fu_239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_179 : BOOLEAN;
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_186 : BOOLEAN;
    signal ap_sig_cseq_ST_st29_fsm_28 : STD_LOGIC;
    signal ap_sig_194 : BOOLEAN;
    signal ap_sig_cseq_ST_st38_fsm_37 : STD_LOGIC;
    signal ap_sig_202 : BOOLEAN;
    signal ap_sig_cseq_ST_st48_fsm_47 : STD_LOGIC;
    signal ap_sig_210 : BOOLEAN;
    signal grp_fu_265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_418 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_423 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_428 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st25_fsm_24 : STD_LOGIC;
    signal ap_sig_237 : BOOLEAN;
    signal ap_sig_cseq_ST_st34_fsm_33 : STD_LOGIC;
    signal ap_sig_244 : BOOLEAN;
    signal reg_433 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_438 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st53_fsm_52 : STD_LOGIC;
    signal ap_sig_255 : BOOLEAN;
    signal reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosA_half_reg_806 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_277 : BOOLEAN;
    signal grp_dut_calc_angle_float_float_s_fu_209_ap_done : STD_LOGIC;
    signal grp_dut_calc_angle_float_float_s_fu_215_ap_done : STD_LOGIC;
    signal sinA_half_reg_813 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosB_half_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal sinB_half_reg_826 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_assign_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_299 : BOOLEAN;
    signal a2_assign_1_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vy_int_fu_504_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vy_int_reg_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_310 : BOOLEAN;
    signal uy_int_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uy_int_reg_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_319 : BOOLEAN;
    signal ap_sig_cseq_ST_st35_fsm_34 : STD_LOGIC;
    signal ap_sig_328 : BOOLEAN;
    signal w_out_fu_561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_out_reg_908 : STD_LOGIC_VECTOR (31 downto 0);
    signal vw_int_3_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vw_int_3_reg_913 : STD_LOGIC_VECTOR (31 downto 0);
    signal vx_int_fu_579_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vx_int_reg_921 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_out_2_fu_610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_out_2_reg_929 : STD_LOGIC_VECTOR (31 downto 0);
    signal vy_int_2_fu_618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vy_int_2_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal vz_int_fu_627_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal vz_int_reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i1_reg_950 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i_i1_reg_955 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_i1_reg_960 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_316_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i2_i1_reg_965 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i4_i1_reg_970 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i5_i1_reg_975 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i7_i1_reg_980 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i8_i1_reg_985 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal vw_out_reg_1000 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal vx_out_reg_1005 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal vy_out_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal vz_out_reg_1015 : STD_LOGIC_VECTOR (31 downto 0);
    signal off_row_2_fu_647_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal off_row_2_reg_1023 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st44_fsm_43 : STD_LOGIC;
    signal ap_sig_391 : BOOLEAN;
    signal or_cond_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1028 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_row_temp_1_addr_reg_1032 : STD_LOGIC_VECTOR (9 downto 0);
    signal u_row_temp_1_addr_reg_1037 : STD_LOGIC_VECTOR (9 downto 0);
    signal v_row_temp_0_addr_reg_1042 : STD_LOGIC_VECTOR (9 downto 0);
    signal u_row_temp_0_addr_reg_1047 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st45_fsm_44 : STD_LOGIC;
    signal ap_sig_416 : BOOLEAN;
    signal vw_out_1_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal vx_out_1_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dut_calc_angle_float_float_s_fu_209_ap_start : STD_LOGIC;
    signal grp_dut_calc_angle_float_float_s_fu_209_ap_idle : STD_LOGIC;
    signal grp_dut_calc_angle_float_float_s_fu_209_ap_ready : STD_LOGIC;
    signal grp_dut_calc_angle_float_float_s_fu_209_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dut_calc_angle_float_float_s_fu_209_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dut_calc_angle_float_float_s_fu_215_ap_start : STD_LOGIC;
    signal grp_dut_calc_angle_float_float_s_fu_215_ap_idle : STD_LOGIC;
    signal grp_dut_calc_angle_float_float_s_fu_215_ap_ready : STD_LOGIC;
    signal grp_dut_calc_angle_float_float_s_fu_215_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dut_calc_angle_float_float_s_fu_215_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal off_row_reg_198 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st54_fsm_53 : STD_LOGIC;
    signal ap_sig_448 : BOOLEAN;
    signal ap_reg_grp_dut_calc_angle_float_float_s_fu_209_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_457 : BOOLEAN;
    signal ap_reg_grp_dut_calc_angle_float_float_s_fu_215_ap_start : STD_LOGIC := '0';
    signal tmp_7_fu_669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_473 : BOOLEAN;
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_480 : BOOLEAN;
    signal ap_sig_cseq_ST_st30_fsm_29 : STD_LOGIC;
    signal ap_sig_488 : BOOLEAN;
    signal ap_sig_cseq_ST_st39_fsm_38 : STD_LOGIC;
    signal ap_sig_496 : BOOLEAN;
    signal ap_sig_cseq_ST_st49_fsm_48 : STD_LOGIC;
    signal ap_sig_504 : BOOLEAN;
    signal grp_fu_227_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_233_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_233_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_239_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_261_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_265_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_269_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_to_int_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_neg_fu_469_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_to_int_16_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_neg_17_fu_483_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal vy_int_to_int_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vy_int_neg_fu_498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal uy_int_to_int_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uy_int_neg_fu_514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_out_1_neg_fu_537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal vw_int_to_int_fu_547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vw_int_neg_fu_551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_529_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_out_1_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vw_int_fu_557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_fu_588_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_out_1_neg_fu_600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_fu_592_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_out_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal off_row_cast1_fu_637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_221_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_239_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (53 downto 0);

    component dut_calc_angle_float_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_M_real : IN STD_LOGIC_VECTOR (31 downto 0);
        A_M_imag : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_faddfsub_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_dut_calc_angle_float_float_s_fu_209 : component dut_calc_angle_float_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_calc_angle_float_float_s_fu_209_ap_start,
        ap_done => grp_dut_calc_angle_float_float_s_fu_209_ap_done,
        ap_idle => grp_dut_calc_angle_float_float_s_fu_209_ap_idle,
        ap_ready => grp_dut_calc_angle_float_float_s_fu_209_ap_ready,
        A_M_real => reg_349,
        A_M_imag => reg_360,
        ap_return_0 => grp_dut_calc_angle_float_float_s_fu_209_ap_return_0,
        ap_return_1 => grp_dut_calc_angle_float_float_s_fu_209_ap_return_1);

    grp_dut_calc_angle_float_float_s_fu_215 : component dut_calc_angle_float_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_calc_angle_float_float_s_fu_215_ap_start,
        ap_done => grp_dut_calc_angle_float_float_s_fu_215_ap_done,
        ap_idle => grp_dut_calc_angle_float_float_s_fu_215_ap_idle,
        ap_ready => grp_dut_calc_angle_float_float_s_fu_215_ap_ready,
        A_M_real => reg_368,
        A_M_imag => reg_377,
        ap_return_0 => grp_dut_calc_angle_float_float_s_fu_215_ap_return_0,
        ap_return_1 => grp_dut_calc_angle_float_float_s_fu_215_ap_return_1);

    dut_faddfsub_32ns_32ns_32_5_full_dsp_U27 : component dut_faddfsub_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_221_p0,
        din1 => grp_fu_221_p1,
        opcode => grp_fu_221_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_221_p2);

    dut_fadd_32ns_32ns_32_5_full_dsp_U28 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_227_p0,
        din1 => grp_fu_227_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_227_p2);

    dut_fadd_32ns_32ns_32_5_full_dsp_U29 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_233_p0,
        din1 => grp_fu_233_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_233_p2);

    dut_faddfsub_32ns_32ns_32_5_full_dsp_U30 : component dut_faddfsub_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_239_p0,
        din1 => grp_fu_239_p1,
        opcode => grp_fu_239_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_239_p2);

    dut_fadd_32ns_32ns_32_5_full_dsp_U31 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i_i1_reg_950,
        din1 => tmp_3_i_i1_reg_955,
        ce => ap_const_logic_1,
        dout => grp_fu_245_p2);

    dut_fadd_32ns_32ns_32_5_full_dsp_U32 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i1_i1_reg_960,
        din1 => tmp_3_i2_i1_reg_965,
        ce => ap_const_logic_1,
        dout => grp_fu_249_p2);

    dut_fadd_32ns_32ns_32_5_full_dsp_U33 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i4_i1_reg_970,
        din1 => tmp_3_i5_i1_reg_975,
        ce => ap_const_logic_1,
        dout => grp_fu_253_p2);

    dut_fadd_32ns_32ns_32_5_full_dsp_U34 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i7_i1_reg_980,
        din1 => tmp_3_i8_i1_reg_985,
        ce => ap_const_logic_1,
        dout => grp_fu_257_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U35 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_261_p0,
        din1 => grp_fu_261_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_261_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U36 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_265_p0,
        din1 => grp_fu_265_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_265_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U37 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_269_p0,
        din1 => grp_fu_269_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_269_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U38 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_273_p0,
        din1 => grp_fu_273_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_273_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U39 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_277_p0,
        din1 => grp_fu_277_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_277_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U40 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_281_p0,
        din1 => grp_fu_281_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_281_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U41 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_285_p0,
        din1 => grp_fu_285_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_285_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U42 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_289_p0,
        din1 => grp_fu_289_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_289_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U43 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vw_int_3_fu_569_p3,
        din1 => p_read16,
        ce => ap_const_logic_1,
        dout => grp_fu_301_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U44 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vx_int_fu_579_p3,
        din1 => p_read17,
        ce => ap_const_logic_1,
        dout => grp_fu_306_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U45 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vy_int_2_fu_618_p3,
        din1 => p_read16,
        ce => ap_const_logic_1,
        dout => grp_fu_311_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U46 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vz_int_fu_627_p3,
        din1 => p_read17,
        ce => ap_const_logic_1,
        dout => grp_fu_316_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U47 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vw_int_3_fu_569_p3,
        din1 => p_read18,
        ce => ap_const_logic_1,
        dout => grp_fu_321_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U48 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vx_int_fu_579_p3,
        din1 => p_read19,
        ce => ap_const_logic_1,
        dout => grp_fu_326_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U49 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vy_int_2_fu_618_p3,
        din1 => p_read18,
        ce => ap_const_logic_1,
        dout => grp_fu_331_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U50 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vz_int_fu_627_p3,
        din1 => p_read19,
        ce => ap_const_logic_1,
        dout => grp_fu_336_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_dut_calc_angle_float_float_s_fu_209_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_calc_angle_float_float_s_fu_209_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                    ap_reg_grp_dut_calc_angle_float_float_s_fu_209_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_calc_angle_float_float_s_fu_209_ap_ready)) then 
                    ap_reg_grp_dut_calc_angle_float_float_s_fu_209_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_calc_angle_float_float_s_fu_215_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_calc_angle_float_float_s_fu_215_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                    ap_reg_grp_dut_calc_angle_float_float_s_fu_215_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_calc_angle_float_float_s_fu_215_ap_ready)) then 
                    ap_reg_grp_dut_calc_angle_float_float_s_fu_215_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    off_row_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
                off_row_reg_198 <= off_row_2_reg_1023;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then 
                off_row_reg_198 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_dut_calc_angle_float_float_s_fu_209_ap_done) or (ap_const_logic_0 = grp_dut_calc_angle_float_float_s_fu_215_ap_done))))) then
                cosA_half_reg_806 <= grp_dut_calc_angle_float_float_s_fu_209_ap_return_0;
                cosB_half_reg_820 <= grp_dut_calc_angle_float_float_s_fu_215_ap_return_0;
                sinA_half_reg_813 <= grp_dut_calc_angle_float_float_s_fu_209_ap_return_1;
                sinB_half_reg_826 <= grp_dut_calc_angle_float_float_s_fu_215_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then
                off_row_2_reg_1023 <= off_row_2_fu_647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and (exitcond_fu_641_p2 = ap_const_lv1_0))) then
                or_cond_reg_1028 <= or_cond_fu_663_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then
                reg_349 <= grp_fu_221_p2;
                reg_360 <= grp_fu_227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42))) then
                reg_368 <= grp_fu_233_p2;
                reg_377 <= grp_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28) or (ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47))) then
                reg_384 <= grp_fu_261_p2;
                reg_390 <= grp_fu_265_p2;
                reg_395 <= grp_fu_269_p2;
                reg_401 <= grp_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47))) then
                reg_406 <= grp_fu_277_p2;
                reg_412 <= grp_fu_281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47))) then
                reg_418 <= grp_fu_285_p2;
                reg_423 <= grp_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33))) then
                reg_428 <= grp_fu_221_p2;
                reg_433 <= grp_fu_227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52))) then
                reg_438 <= grp_fu_233_p2;
                reg_444 <= grp_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then
                tmp_3_i2_i1_reg_965 <= grp_fu_316_p2;
                tmp_3_i5_i1_reg_975 <= grp_fu_326_p2;
                tmp_3_i8_i1_reg_985 <= grp_fu_336_p2;
                tmp_3_i_i1_reg_955 <= grp_fu_306_p2;
                tmp_i1_i1_reg_960 <= grp_fu_311_p2;
                tmp_i4_i1_reg_970 <= grp_fu_321_p2;
                tmp_i7_i1_reg_980 <= grp_fu_331_p2;
                tmp_i_i1_reg_950 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and (exitcond_fu_641_p2 = ap_const_lv1_0) and (or_cond_fu_663_p2 = ap_const_lv1_0))) then
                u_row_temp_0_addr_reg_1047 <= tmp_7_fu_669_p1(10 - 1 downto 0);
                u_row_temp_1_addr_reg_1037 <= tmp_7_fu_669_p1(10 - 1 downto 0);
                v_row_temp_0_addr_reg_1042 <= tmp_7_fu_669_p1(10 - 1 downto 0);
                v_row_temp_1_addr_reg_1032 <= tmp_7_fu_669_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then
                uy_int_reg_852 <= uy_int_fu_520_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then
                vw_int_3_reg_913 <= vw_int_3_fu_569_p3;
                vx_int_reg_921 <= vx_int_fu_579_p3;
                vy_int_2_reg_934 <= vy_int_2_fu_618_p3;
                vz_int_reg_942 <= vz_int_fu_627_p3;
                w_out_reg_908 <= w_out_fu_561_p3;
                z_out_2_reg_929 <= z_out_2_fu_610_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_52)) then
                vw_out_1_reg_1076 <= grp_fu_221_p2;
                vx_out_1_reg_1081 <= grp_fu_227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then
                vw_out_reg_1000 <= grp_fu_245_p2;
                vx_out_reg_1005 <= grp_fu_249_p2;
                vy_out_reg_1010 <= grp_fu_253_p2;
                vz_out_reg_1015 <= grp_fu_257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                vy_int_reg_844 <= vy_int_fu_504_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_dut_calc_angle_float_float_s_fu_209_ap_done, grp_dut_calc_angle_float_float_s_fu_215_ap_done, or_cond_fu_663_p2, exitcond_fu_641_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not(((ap_const_logic_0 = grp_dut_calc_angle_float_float_s_fu_209_ap_done) or (ap_const_logic_0 = grp_dut_calc_angle_float_float_s_fu_215_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                if (not((exitcond_fu_641_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((exitcond_fu_641_p2 = ap_const_lv1_0) and not((or_cond_fu_663_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st54_fsm_53;
                else
                    ap_NS_fsm <= ap_ST_st45_fsm_44;
                end if;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st54_fsm_53;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a2_assign_1_fu_489_p1 <= tmp_neg_17_fu_483_p2;
    a2_assign_fu_475_p1 <= tmp_neg_fu_469_p2;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st44_fsm_43, exitcond_fu_641_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and not((exitcond_fu_641_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, exitcond_fu_641_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) and not((exitcond_fu_641_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= reg_428;
    ap_return_1 <= reg_433;
    ap_return_10 <= uy_int_reg_852;
    ap_return_11 <= reg_349;
    ap_return_12 <= vw_int_3_reg_913;
    ap_return_13 <= vy_int_2_reg_934;
    ap_return_14 <= vx_int_reg_921;
    ap_return_15 <= vz_int_reg_942;
    ap_return_16 <= w_out_reg_908;
    ap_return_17 <= z_out_2_reg_929;
    ap_return_2 <= reg_368;
    ap_return_3 <= reg_377;
    ap_return_4 <= vw_out_reg_1000;
    ap_return_5 <= vx_out_reg_1005;
    ap_return_6 <= vy_out_reg_1010;
    ap_return_7 <= vz_out_reg_1015;
    ap_return_8 <= reg_349;
    ap_return_9 <= reg_360;

    ap_sig_148_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_148 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_155_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_155 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_167_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_167 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    ap_sig_179_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_179 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_186_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_186 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_194_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_194 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    ap_sig_202_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_202 <= (ap_const_lv1_1 = ap_CS_fsm(37 downto 37));
    end process;


    ap_sig_210_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_210 <= (ap_const_lv1_1 = ap_CS_fsm(47 downto 47));
    end process;


    ap_sig_237_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_237 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_244_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_244 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    ap_sig_255_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_255 <= (ap_const_lv1_1 = ap_CS_fsm(52 downto 52));
    end process;


    ap_sig_277_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_277 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_299_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_299 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_310_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_310 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_319_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_319 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    ap_sig_328_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_328 <= (ap_const_lv1_1 = ap_CS_fsm(34 downto 34));
    end process;


    ap_sig_391_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_391 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    ap_sig_416_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_416 <= (ap_const_lv1_1 = ap_CS_fsm(44 downto 44));
    end process;


    ap_sig_448_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_448 <= (ap_const_lv1_1 = ap_CS_fsm(53 downto 53));
    end process;


    ap_sig_457_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_457 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_473_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_473 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_480_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_480 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_488_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_488 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    ap_sig_496_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_496 <= (ap_const_lv1_1 = ap_CS_fsm(38 downto 38));
    end process;


    ap_sig_504_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_504 <= (ap_const_lv1_1 = ap_CS_fsm(48 downto 48));
    end process;


    ap_sig_71_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_71 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_179)
    begin
        if (ap_sig_179) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_473)
    begin
        if (ap_sig_473) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_155)
    begin
        if (ap_sig_155) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_310)
    begin
        if (ap_sig_310) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_71)
    begin
        if (ap_sig_71) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_186)
    begin
        if (ap_sig_186) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_480)
    begin
        if (ap_sig_480) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_24_assign_proc : process(ap_sig_237)
    begin
        if (ap_sig_237) then 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_319)
    begin
        if (ap_sig_319) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st29_fsm_28_assign_proc : process(ap_sig_194)
    begin
        if (ap_sig_194) then 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st30_fsm_29_assign_proc : process(ap_sig_488)
    begin
        if (ap_sig_488) then 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st34_fsm_33_assign_proc : process(ap_sig_244)
    begin
        if (ap_sig_244) then 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st35_fsm_34_assign_proc : process(ap_sig_328)
    begin
        if (ap_sig_328) then 
            ap_sig_cseq_ST_st35_fsm_34 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st35_fsm_34 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st38_fsm_37_assign_proc : process(ap_sig_202)
    begin
        if (ap_sig_202) then 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st39_fsm_38_assign_proc : process(ap_sig_496)
    begin
        if (ap_sig_496) then 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st43_fsm_42_assign_proc : process(ap_sig_167)
    begin
        if (ap_sig_167) then 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st44_fsm_43_assign_proc : process(ap_sig_391)
    begin
        if (ap_sig_391) then 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st45_fsm_44_assign_proc : process(ap_sig_416)
    begin
        if (ap_sig_416) then 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st48_fsm_47_assign_proc : process(ap_sig_210)
    begin
        if (ap_sig_210) then 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st49_fsm_48_assign_proc : process(ap_sig_504)
    begin
        if (ap_sig_504) then 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st53_fsm_52_assign_proc : process(ap_sig_255)
    begin
        if (ap_sig_255) then 
            ap_sig_cseq_ST_st53_fsm_52 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st53_fsm_52 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st54_fsm_53_assign_proc : process(ap_sig_448)
    begin
        if (ap_sig_448) then 
            ap_sig_cseq_ST_st54_fsm_53 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st54_fsm_53 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_148)
    begin
        if (ap_sig_148) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_457)
    begin
        if (ap_sig_457) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_277)
    begin
        if (ap_sig_277) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_299)
    begin
        if (ap_sig_299) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_641_p2 <= "1" when (off_row_reg_198 = ap_const_lv10_310) else "0";
    grp_dut_calc_angle_float_float_s_fu_209_ap_start <= ap_reg_grp_dut_calc_angle_float_float_s_fu_209_ap_start;
    grp_dut_calc_angle_float_float_s_fu_215_ap_start <= ap_reg_grp_dut_calc_angle_float_float_s_fu_215_ap_start;

    grp_fu_221_opcode_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            grp_fu_221_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_221_opcode <= ap_const_lv2_0;
        else 
            grp_fu_221_opcode <= "XX";
        end if; 
    end process;


    grp_fu_221_p0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_1_1_read, reg_384, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_221_p0 <= reg_384;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_221_p0 <= s_temp_1_1_read;
        else 
            grp_fu_221_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_221_p1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_0_0_read, reg_390, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_221_p1 <= reg_390;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_221_p1 <= s_temp_0_0_read;
        else 
            grp_fu_221_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_227_p0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_1_0_read, reg_395, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_227_p0 <= reg_395;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_227_p0 <= s_temp_1_0_read;
        else 
            grp_fu_227_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_227_p1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_0_1_read, reg_401, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_227_p1 <= reg_401;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_227_p1 <= s_temp_0_1_read;
        else 
            grp_fu_227_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_233_p0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_1_1_read, reg_384, reg_406, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_233_p0 <= reg_406;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_233_p0 <= reg_384;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_233_p0 <= s_temp_1_1_read;
        else 
            grp_fu_233_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_233_p1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_0_0_read, reg_406, reg_412, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_233_p1 <= reg_412;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_233_p1 <= reg_406;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_233_p1 <= s_temp_0_0_read;
        else 
            grp_fu_233_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_239_opcode_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            grp_fu_239_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_239_opcode <= ap_const_lv2_0;
        else 
            grp_fu_239_opcode <= "XX";
        end if; 
    end process;


    grp_fu_239_p0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_1_0_read, reg_395, reg_418, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_239_p0 <= reg_418;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_239_p0 <= reg_395;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_239_p0 <= s_temp_1_0_read;
        else 
            grp_fu_239_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_239_p1_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, s_temp_0_1_read, reg_412, reg_423, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st49_fsm_48)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38) or (ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48))) then 
            grp_fu_239_p1 <= reg_423;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_fu_239_p1 <= reg_412;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            grp_fu_239_p1 <= s_temp_0_1_read;
        else 
            grp_fu_239_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_261_p0_assign_proc : process(v_row_temp_0_q0, reg_349, reg_368, cosA_half_reg_806, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_261_p0 <= v_row_temp_0_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34))) then 
            grp_fu_261_p0 <= reg_349;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_261_p0 <= reg_368;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_261_p0 <= cosA_half_reg_806;
        else 
            grp_fu_261_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_261_p1_assign_proc : process(s_temp_0_0_read, p_read, reg_428, cosB_half_reg_820, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, vw_int_3_reg_913, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_261_p1 <= vw_int_3_reg_913;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_261_p1 <= p_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            grp_fu_261_p1 <= reg_428;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_261_p1 <= s_temp_0_0_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_261_p1 <= cosB_half_reg_820;
        else 
            grp_fu_261_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_265_p0_assign_proc : process(v_row_temp_1_q0, sinA_half_reg_813, ap_sig_cseq_ST_st8_fsm_7, vy_int_fu_504_p1, ap_sig_cseq_ST_st17_fsm_16, uy_int_fu_520_p1, uy_int_reg_852, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_265_p0 <= v_row_temp_1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_265_p0 <= uy_int_reg_852;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            grp_fu_265_p0 <= uy_int_fu_520_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_265_p0 <= vy_int_fu_504_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_265_p0 <= sinA_half_reg_813;
        else 
            grp_fu_265_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_265_p1_assign_proc : process(s_temp_0_1_read, p_read13, reg_433, sinB_half_reg_826, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, vx_int_reg_921, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_265_p1 <= vx_int_reg_921;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_265_p1 <= p_read13;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            grp_fu_265_p1 <= reg_433;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_265_p1 <= s_temp_0_1_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_265_p1 <= sinB_half_reg_826;
        else 
            grp_fu_265_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_269_p0_assign_proc : process(v_row_temp_0_q0, reg_360, reg_368, sinA_half_reg_813, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_269_p0 <= v_row_temp_0_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34))) then 
            grp_fu_269_p0 <= reg_360;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_269_p0 <= reg_368;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_269_p0 <= sinA_half_reg_813;
        else 
            grp_fu_269_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_269_p1_assign_proc : process(s_temp_1_0_read, p_read, reg_438, cosB_half_reg_820, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, vy_int_2_reg_934, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_269_p1 <= vy_int_2_reg_934;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_269_p1 <= p_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            grp_fu_269_p1 <= reg_438;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_269_p1 <= s_temp_1_0_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_269_p1 <= cosB_half_reg_820;
        else 
            grp_fu_269_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_273_p0_assign_proc : process(v_row_temp_1_q0, reg_349, a2_assign_fu_475_p1, ap_sig_cseq_ST_st8_fsm_7, vy_int_fu_504_p1, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_273_p0 <= v_row_temp_1_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34))) then 
            grp_fu_273_p0 <= reg_349;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_273_p0 <= vy_int_fu_504_p1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_273_p0 <= a2_assign_fu_475_p1;
        else 
            grp_fu_273_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_273_p1_assign_proc : process(s_temp_1_1_read, p_read13, reg_444, sinB_half_reg_826, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st35_fsm_34, vz_int_reg_942, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_273_p1 <= vz_int_reg_942;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_273_p1 <= p_read13;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            grp_fu_273_p1 <= reg_444;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_273_p1 <= s_temp_1_1_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_273_p1 <= sinB_half_reg_826;
        else 
            grp_fu_273_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_277_p0_assign_proc : process(u_row_temp_0_q0, reg_349, reg_377, ap_sig_cseq_ST_st8_fsm_7, a2_assign_1_fu_489_p1, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_277_p0 <= u_row_temp_0_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_277_p0 <= reg_349;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_277_p0 <= reg_377;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_277_p0 <= a2_assign_1_fu_489_p1;
        else 
            grp_fu_277_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_277_p1_assign_proc : process(s_temp_0_0_read, p_read14, reg_349, sinB_half_reg_826, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_277_p1 <= reg_349;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_277_p1 <= p_read14;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_277_p1 <= s_temp_0_0_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_277_p1 <= sinB_half_reg_826;
        else 
            grp_fu_277_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_281_p0_assign_proc : process(u_row_temp_1_q0, reg_368, cosA_half_reg_806, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, uy_int_reg_852, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_281_p0 <= u_row_temp_1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_281_p0 <= uy_int_reg_852;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_281_p0 <= reg_368;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_281_p0 <= cosA_half_reg_806;
        else 
            grp_fu_281_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_281_p1_assign_proc : process(s_temp_0_1_read, p_read15, sinB_half_reg_826, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, uy_int_reg_852, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_281_p1 <= uy_int_reg_852;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_281_p1 <= p_read15;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_281_p1 <= s_temp_0_1_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_fu_281_p1 <= sinB_half_reg_826;
        else 
            grp_fu_281_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_285_p0_assign_proc : process(u_row_temp_0_q0, reg_360, reg_377, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_285_p0 <= u_row_temp_0_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_285_p0 <= reg_360;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_285_p0 <= reg_377;
        else 
            grp_fu_285_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_285_p1_assign_proc : process(s_temp_1_0_read, p_read14, reg_360, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_285_p1 <= reg_360;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_285_p1 <= p_read14;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_285_p1 <= s_temp_1_0_read;
        else 
            grp_fu_285_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_289_p0_assign_proc : process(u_row_temp_1_q0, reg_349, reg_368, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_289_p0 <= u_row_temp_1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_289_p0 <= reg_349;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_289_p0 <= reg_368;
        else 
            grp_fu_289_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_289_p1_assign_proc : process(s_temp_1_1_read, p_read15, reg_349, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st35_fsm_34, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            grp_fu_289_p1 <= reg_349;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
            grp_fu_289_p1 <= p_read15;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_fu_289_p1 <= s_temp_1_1_read;
        else 
            grp_fu_289_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    off_row_2_fu_647_p2 <= std_logic_vector(unsigned(off_row_reg_198) + unsigned(ap_const_lv10_1));
    off_row_cast1_fu_637_p1 <= std_logic_vector(resize(unsigned(off_row_reg_198),32));
    or_cond_fu_663_p2 <= (tmp_5_fu_653_p2 or tmp_6_fu_658_p2);
    p_Result_10_fu_592_p3 <= p_Val2_30_fu_588_p1(31 downto 31);
    p_Result_s_fu_529_p3 <= p_Val2_s_fu_525_p1(31 downto 31);
    p_Val2_30_fu_588_p1 <= reg_433;
    p_Val2_s_fu_525_p1 <= reg_428;
    tmp_5_fu_653_p2 <= "1" when (off_row_cast1_fu_637_p1 = bottom_right) else "0";
    tmp_6_fu_658_p2 <= "1" when (off_row_cast1_fu_637_p1 = top_left) else "0";
    tmp_7_fu_669_p1 <= std_logic_vector(resize(unsigned(off_row_reg_198),64));
    tmp_neg_17_fu_483_p2 <= (tmp_to_int_16_fu_480_p1 xor ap_const_lv32_80000000);
    tmp_neg_fu_469_p2 <= (tmp_to_int_fu_466_p1 xor ap_const_lv32_80000000);
    tmp_to_int_16_fu_480_p1 <= sinA_half_reg_813;
    tmp_to_int_fu_466_p1 <= cosA_half_reg_806;

    u_row_temp_0_address0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, u_row_temp_0_addr_reg_1047, ap_sig_cseq_ST_st54_fsm_53, tmp_7_fu_669_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
            u_row_temp_0_address0 <= u_row_temp_0_addr_reg_1047;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then 
            u_row_temp_0_address0 <= tmp_7_fu_669_p1(10 - 1 downto 0);
        else 
            u_row_temp_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    u_row_temp_0_ce0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) or (ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53))) then 
            u_row_temp_0_ce0 <= ap_const_logic_1;
        else 
            u_row_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    u_row_temp_0_d0 <= reg_438;

    u_row_temp_0_we0_assign_proc : process(or_cond_reg_1028, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53) and (or_cond_reg_1028 = ap_const_lv1_0)))) then 
            u_row_temp_0_we0 <= ap_const_logic_1;
        else 
            u_row_temp_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    u_row_temp_1_address0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, u_row_temp_1_addr_reg_1037, ap_sig_cseq_ST_st54_fsm_53, tmp_7_fu_669_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
            u_row_temp_1_address0 <= u_row_temp_1_addr_reg_1037;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then 
            u_row_temp_1_address0 <= tmp_7_fu_669_p1(10 - 1 downto 0);
        else 
            u_row_temp_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    u_row_temp_1_ce0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) or (ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53))) then 
            u_row_temp_1_ce0 <= ap_const_logic_1;
        else 
            u_row_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    u_row_temp_1_d0 <= reg_444;

    u_row_temp_1_we0_assign_proc : process(or_cond_reg_1028, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53) and (or_cond_reg_1028 = ap_const_lv1_0)))) then 
            u_row_temp_1_we0 <= ap_const_logic_1;
        else 
            u_row_temp_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    uy_int_fu_520_p1 <= uy_int_neg_fu_514_p2;
    uy_int_neg_fu_514_p2 <= (uy_int_to_int_fu_510_p1 xor ap_const_lv32_80000000);
    uy_int_to_int_fu_510_p1 <= reg_360;

    v_row_temp_0_address0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, v_row_temp_0_addr_reg_1042, ap_sig_cseq_ST_st54_fsm_53, tmp_7_fu_669_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
            v_row_temp_0_address0 <= v_row_temp_0_addr_reg_1042;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then 
            v_row_temp_0_address0 <= tmp_7_fu_669_p1(10 - 1 downto 0);
        else 
            v_row_temp_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    v_row_temp_0_ce0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) or (ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53))) then 
            v_row_temp_0_ce0 <= ap_const_logic_1;
        else 
            v_row_temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v_row_temp_0_d0 <= vw_out_1_reg_1076;

    v_row_temp_0_we0_assign_proc : process(or_cond_reg_1028, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53) and (or_cond_reg_1028 = ap_const_lv1_0)))) then 
            v_row_temp_0_we0 <= ap_const_logic_1;
        else 
            v_row_temp_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_row_temp_1_address0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, v_row_temp_1_addr_reg_1032, ap_sig_cseq_ST_st54_fsm_53, tmp_7_fu_669_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53)) then 
            v_row_temp_1_address0 <= v_row_temp_1_addr_reg_1032;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then 
            v_row_temp_1_address0 <= tmp_7_fu_669_p1(10 - 1 downto 0);
        else 
            v_row_temp_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    v_row_temp_1_ce0_assign_proc : process(ap_sig_cseq_ST_st44_fsm_43, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43) or (ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53))) then 
            v_row_temp_1_ce0 <= ap_const_logic_1;
        else 
            v_row_temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v_row_temp_1_d0 <= vx_out_1_reg_1081;

    v_row_temp_1_we0_assign_proc : process(or_cond_reg_1028, ap_sig_cseq_ST_st54_fsm_53)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_53) and (or_cond_reg_1028 = ap_const_lv1_0)))) then 
            v_row_temp_1_we0 <= ap_const_logic_1;
        else 
            v_row_temp_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    vw_int_3_fu_569_p3 <= 
        vw_int_fu_557_p1 when (p_Result_s_fu_529_p3(0) = '1') else 
        reg_368;
    vw_int_fu_557_p1 <= vw_int_neg_fu_551_p2;
    vw_int_neg_fu_551_p2 <= (vw_int_to_int_fu_547_p1 xor ap_const_lv32_80000000);
    vw_int_to_int_fu_547_p1 <= reg_368;
    vx_int_fu_579_p3 <= 
        reg_377 when (p_Result_s_fu_529_p3(0) = '1') else 
        vy_int_reg_844;
    vy_int_2_fu_618_p3 <= 
        vy_int_reg_844 when (p_Result_10_fu_592_p3(0) = '1') else 
        reg_377;
    vy_int_fu_504_p1 <= vy_int_neg_fu_498_p2;
    vy_int_neg_fu_498_p2 <= (vy_int_to_int_fu_494_p1 xor ap_const_lv32_80000000);
    vy_int_to_int_fu_494_p1 <= reg_377;
    vz_int_fu_627_p3 <= 
        vw_int_fu_557_p1 when (p_Result_10_fu_592_p3(0) = '1') else 
        reg_368;
    w_out_1_fu_543_p1 <= w_out_1_neg_fu_537_p2;
    w_out_1_neg_fu_537_p2 <= (p_Val2_s_fu_525_p1 xor ap_const_lv32_80000000);
    w_out_fu_561_p3 <= 
        w_out_1_fu_543_p1 when (p_Result_s_fu_529_p3(0) = '1') else 
        reg_428;
    z_out_1_neg_fu_600_p2 <= (p_Val2_30_fu_588_p1 xor ap_const_lv32_80000000);
    z_out_2_fu_610_p3 <= 
        z_out_fu_606_p1 when (p_Result_10_fu_592_p3(0) = '1') else 
        reg_433;
    z_out_fu_606_p1 <= z_out_1_neg_fu_600_p2;
end behav;
