-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_empty_n : IN STD_LOGIC;
    strm_in_V_read : OUT STD_LOGIC;
    strm_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_full_n : IN STD_LOGIC;
    strm_out_V_write : OUT STD_LOGIC );
end;


architecture behav of dut is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.419400,HLS_SYN_LAT=134,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=31,HLS_SYN_FF=7962,HLS_SYN_LUT=12715}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_18 : BOOLEAN;
    signal strm_in_V_blk_n : STD_LOGIC;
    signal p_Val2_s_fu_84_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_reg_227 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_41 : BOOLEAN;
    signal loc_V_1_fu_98_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_232 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_fu_112_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_237 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_1_fu_130_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_reg_242 : STD_LOGIC_VECTOR (8 downto 0);
    signal cond_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_57 : BOOLEAN;
    signal grp_dut_calc_svd_fu_76_ap_start : STD_LOGIC;
    signal grp_dut_calc_svd_fu_76_ap_done : STD_LOGIC;
    signal grp_dut_calc_svd_fu_76_ap_idle : STD_LOGIC;
    signal grp_dut_calc_svd_fu_76_ap_ready : STD_LOGIC;
    signal grp_dut_calc_svd_fu_76_strm_in_V_read : STD_LOGIC;
    signal grp_dut_calc_svd_fu_76_strm_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dut_calc_svd_fu_76_strm_out_V_write : STD_LOGIC;
    signal ap_reg_grp_dut_calc_svd_fu_76_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_82 : BOOLEAN;
    signal loc_V_fu_88_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_cast1_fu_102_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_106_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_i_i_fu_120_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_i_i_cast_fu_126_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1_fu_145_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sh_assign_1_cast_fu_156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_cast_cast_fu_159_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i_fu_152_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_14_i_i_fu_162_p1 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_15_i_i_fu_166_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_fu_178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_i_fu_172_p2 : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp_2_fu_186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_190_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_200_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_138_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_i_i_fu_207_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_fu_213_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component dut_calc_svd IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        strm_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        strm_in_V_empty_n : IN STD_LOGIC;
        strm_in_V_read : OUT STD_LOGIC;
        strm_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        strm_out_V_full_n : IN STD_LOGIC;
        strm_out_V_write : OUT STD_LOGIC );
    end component;



begin
    grp_dut_calc_svd_fu_76 : component dut_calc_svd
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_calc_svd_fu_76_ap_start,
        ap_done => grp_dut_calc_svd_fu_76_ap_done,
        ap_idle => grp_dut_calc_svd_fu_76_ap_idle,
        ap_ready => grp_dut_calc_svd_fu_76_ap_ready,
        strm_in_V_dout => strm_in_V_dout,
        strm_in_V_empty_n => strm_in_V_empty_n,
        strm_in_V_read => grp_dut_calc_svd_fu_76_strm_in_V_read,
        strm_out_V_din => grp_dut_calc_svd_fu_76_strm_out_V_din,
        strm_out_V_full_n => strm_out_V_full_n,
        strm_out_V_write => grp_dut_calc_svd_fu_76_strm_out_V_write);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_dut_calc_svd_fu_76_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_calc_svd_fu_76_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((cond_fu_221_p2 = ap_const_lv1_0)))) then 
                    ap_reg_grp_dut_calc_svd_fu_76_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_calc_svd_fu_76_ap_ready)) then 
                    ap_reg_grp_dut_calc_svd_fu_76_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                cond_reg_248 <= cond_fu_221_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_41))) then
                isNeg_reg_237 <= sh_assign_fu_106_p2(8 downto 8);
                loc_V_1_reg_232 <= loc_V_1_fu_98_p1;
                p_Val2_s_reg_227 <= p_Val2_s_fu_84_p1;
                sh_assign_1_reg_242 <= sh_assign_1_fu_130_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_41, cond_reg_248, grp_dut_calc_svd_fu_76_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_41)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if (not((not((cond_reg_248 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_dut_calc_svd_fu_76_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    ap_done_assign_proc : process(cond_reg_248, grp_dut_calc_svd_fu_76_ap_done, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((not((cond_reg_248 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_dut_calc_svd_fu_76_ap_done))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(cond_reg_248, grp_dut_calc_svd_fu_76_ap_done, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((not((cond_reg_248 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_dut_calc_svd_fu_76_ap_done))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_18_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_18 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_41_assign_proc : process(ap_start, strm_in_V_empty_n)
    begin
                ap_sig_41 <= ((ap_start = ap_const_logic_0) or (strm_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_57_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_57 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_82_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_82 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_18)
    begin
        if (ap_sig_18) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_57)
    begin
        if (ap_sig_57) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_82)
    begin
        if (ap_sig_82) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_221_p2 <= "1" when (p_Val2_5_fu_213_p3 = ap_const_lv32_1) else "0";
    grp_dut_calc_svd_fu_76_ap_start <= ap_reg_grp_dut_calc_svd_fu_76_ap_start;
    isNeg_fu_112_p3 <= sh_assign_fu_106_p2(8 downto 8);
    loc_V_1_fu_98_p1 <= p_Val2_s_fu_84_p1(23 - 1 downto 0);
    loc_V_fu_88_p4 <= p_Val2_s_fu_84_p1(30 downto 23);
    p_Result_1_fu_145_p3 <= (ap_const_lv1_1 & loc_V_1_reg_232);
    p_Result_s_fu_138_p3 <= p_Val2_s_reg_227(31 downto 31);
    p_Val2_3_fu_200_p3 <= 
        tmp_2_fu_186_p1 when (isNeg_reg_237(0) = '1') else 
        tmp_3_fu_190_p4;
    p_Val2_5_fu_213_p3 <= 
        p_Val2_8_i_i_fu_207_p2 when (p_Result_s_fu_138_p3(0) = '1') else 
        p_Val2_3_fu_200_p3;
    p_Val2_8_i_i_fu_207_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_3_fu_200_p3));
    p_Val2_s_fu_84_p1 <= strm_in_V_dout;
        sh_assign_1_cast_cast_fu_159_p1 <= std_logic_vector(resize(signed(sh_assign_1_reg_242),24));

        sh_assign_1_cast_fu_156_p1 <= std_logic_vector(resize(signed(sh_assign_1_reg_242),32));

    sh_assign_1_fu_130_p3 <= 
        tmp_13_i_i_cast_fu_126_p1 when (isNeg_fu_112_p3(0) = '1') else 
        sh_assign_fu_106_p2;
    sh_assign_fu_106_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_cast1_fu_102_p1));

    strm_in_V_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, strm_in_V_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            strm_in_V_blk_n <= strm_in_V_empty_n;
        else 
            strm_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_41, cond_reg_248, grp_dut_calc_svd_fu_76_strm_in_V_read, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_41))) then 
            strm_in_V_read <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((cond_reg_248 = ap_const_lv1_0)))) then 
            strm_in_V_read <= grp_dut_calc_svd_fu_76_strm_in_V_read;
        else 
            strm_in_V_read <= ap_const_logic_0;
        end if; 
    end process;

    strm_out_V_din <= grp_dut_calc_svd_fu_76_strm_out_V_din;

    strm_out_V_write_assign_proc : process(cond_reg_248, grp_dut_calc_svd_fu_76_strm_out_V_write, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((cond_reg_248 = ap_const_lv1_0)))) then 
            strm_out_V_write <= grp_dut_calc_svd_fu_76_strm_out_V_write;
        else 
            strm_out_V_write <= ap_const_logic_0;
        end if; 
    end process;

        tmp_13_i_i_cast_fu_126_p1 <= std_logic_vector(resize(signed(tmp_13_i_i_fu_120_p2),9));

    tmp_13_i_i_fu_120_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_fu_88_p4));
    tmp_14_i_i_fu_162_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_cast_fu_156_p1),78));
    tmp_15_i_i_fu_166_p2 <= std_logic_vector(shift_right(unsigned(p_Result_1_fu_145_p3),to_integer(unsigned('0' & sh_assign_1_cast_cast_fu_159_p1(24-1 downto 0)))));
    tmp_17_i_i_fu_172_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_i_fu_152_p1),to_integer(unsigned('0' & tmp_14_i_i_fu_162_p1(31-1 downto 0)))));
    tmp_2_fu_186_p1 <= std_logic_vector(resize(unsigned(tmp_fu_178_p3),32));
    tmp_3_fu_190_p4 <= tmp_17_i_i_fu_172_p2(54 downto 23);
    tmp_fu_178_p3 <= tmp_15_i_i_fu_166_p2(23 downto 23);
    tmp_i_i_fu_152_p1 <= std_logic_vector(resize(unsigned(p_Result_1_fu_145_p3),78));
    tmp_i_i_i_cast1_fu_102_p1 <= std_logic_vector(resize(unsigned(loc_V_fu_88_p4),9));
end behav;
