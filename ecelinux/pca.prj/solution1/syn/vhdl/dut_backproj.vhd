-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_backproj is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_empty_n : IN STD_LOGIC;
    strm_in_V_read : OUT STD_LOGIC;
    strm_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_full_n : IN STD_LOGIC;
    strm_out_V_write : OUT STD_LOGIC );
end;


architecture behav of dut_backproj is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_pp1_stg0_fsm_3 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_pp1_stg1_fsm_4 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_pp1_stg2_fsm_5 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_pp1_stg3_fsm_6 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_pp1_stg4_fsm_7 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_st17_fsm_8 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv17_13240 : STD_LOGIC_VECTOR (16 downto 0) := "10011001001000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv10_30F : STD_LOGIC_VECTOR (9 downto 0) := "1100001111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_26 : BOOLEAN;
    signal strm_in_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_45 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond7_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg1_fsm_4 : STD_LOGIC;
    signal ap_sig_61 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_290 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_V_blk_n : STD_LOGIC;
    signal tmp_2_reg_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_2_reg_322_pp1_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_reg_127 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_reg_139 : STD_LOGIC_VECTOR (16 downto 0);
    signal k_reg_150 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond8_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_94 : BOOLEAN;
    signal i_2_fu_181_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_reg_276 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond7_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_101 : BOOLEAN;
    signal m_2_fu_193_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal m_2_reg_285 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_flatten_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_3 : STD_LOGIC;
    signal ap_sig_115 : BOOLEAN;
    signal ap_reg_ppstg_exitcond_flatten_reg_290_pp1_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_210_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal indvar_flatten_next_reg_294 : STD_LOGIC_VECTOR (16 downto 0);
    signal k_mid2_fu_222_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_mid2_reg_299 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_307 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_130 : BOOLEAN;
    signal ap_sig_134 : BOOLEAN;
    signal tmp_171_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_fu_244_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_1_reg_326 : STD_LOGIC_VECTOR (9 downto 0);
    signal A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg2_fsm_5 : STD_LOGIC;
    signal ap_sig_157 : BOOLEAN;
    signal grp_fu_165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_161_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_172_reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp1_stg4_fsm_7 : STD_LOGIC;
    signal ap_sig_186 : BOOLEAN;
    signal A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal A_ce0 : STD_LOGIC;
    signal A_we0 : STD_LOGIC;
    signal i_reg_116 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_8 : STD_LOGIC;
    signal ap_sig_212 : BOOLEAN;
    signal m_phi_fu_131_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_phi_fu_143_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal k_phi_fu_154_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_76 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_161_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_161_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_pp1_stg3_fsm_6 : STD_LOGIC;
    signal ap_sig_292 : BOOLEAN;
    signal grp_fu_165_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component dut_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_backproj_A IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    A_U : component dut_backproj_A
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_address0,
        ce0 => A_ce0,
        we0 => A_we0,
        d0 => strm_in_V_dout,
        q0 => A_q0);

    dut_fadd_32ns_32ns_32_5_full_dsp_U1 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_161_p0,
        din1 => tmp_1_reg_336,
        ce => grp_fu_161_ce,
        dout => grp_fu_161_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U2 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => A_q0,
        din1 => tmp_171_reg_317,
        ce => grp_fu_165_ce,
        dout => grp_fu_165_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond8_fu_175_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and (ap_const_lv1_0 = exitcond7_fu_187_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond8_fu_175_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and not((ap_const_lv1_0 = exitcond_flatten_fu_204_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond_flatten_reg_290) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_7))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_7) and not((ap_const_lv1_0 = exitcond_flatten_reg_290))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_7)) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_8)) then 
                i_reg_116 <= i_2_reg_276;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_116 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2)))) then 
                indvar_flatten_reg_139 <= ap_const_lv17_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_290) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3))) then 
                indvar_flatten_reg_139 <= indvar_flatten_next_reg_294;
            end if; 
        end if;
    end process;

    k_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2)))) then 
                k_reg_150 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_290) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3))) then 
                k_reg_150 <= k_1_reg_326;
            end if; 
        end if;
    end process;

    m_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond7_reg_281 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)))) then 
                m_reg_127 <= m_2_reg_285;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond8_fu_175_p2))) then 
                m_reg_127 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    tmp_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_290_pp1_iter1))) then 
                tmp_fu_76 <= grp_fu_161_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                tmp_fu_76 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3)) then
                ap_reg_ppstg_exitcond_flatten_reg_290_pp1_iter1 <= exitcond_flatten_reg_290;
                exitcond_flatten_reg_290 <= exitcond_flatten_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134))))) then
                ap_reg_ppstg_tmp_2_reg_322_pp1_iter1 <= tmp_2_reg_322;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)))) then
                exitcond7_reg_281 <= exitcond7_fu_187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_2_reg_276 <= i_2_fu_181_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3))) then
                indvar_flatten_next_reg_294 <= indvar_flatten_next_fu_210_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_290) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134))))) then
                k_1_reg_326 <= k_1_fu_244_p2;
                tmp_171_reg_317 <= strm_in_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_lv1_0 = exitcond_flatten_fu_204_p2))) then
                k_mid2_reg_299 <= k_mid2_fu_222_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)))) then
                m_2_reg_285 <= m_2_fu_193_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_290_pp1_iter1))) then
                tmp_172_reg_346 <= grp_fu_161_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_flatten_reg_290) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3))) then
                tmp_1_reg_336 <= grp_fu_165_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_lv1_0 = exitcond_flatten_reg_290) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134))))) then
                tmp_2_reg_322 <= tmp_2_fu_239_p2;
                tmp_8_reg_307 <= tmp_8_fu_230_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, exitcond8_fu_175_p2, exitcond7_fu_187_p2, ap_sig_101, exitcond_flatten_fu_204_p2, ap_sig_130, ap_sig_134)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond8_fu_175_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101)) and not((ap_const_lv1_0 = exitcond7_fu_187_p2)))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp1_stg0_fsm_3 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_flatten_fu_204_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg1_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_8;
                end if;
            when ap_ST_pp1_stg1_fsm_4 => 
                if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134))) and not(((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg2_fsm_5;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg1_fsm_4;
                end if;
            when ap_ST_pp1_stg2_fsm_5 => 
                ap_NS_fsm <= ap_ST_pp1_stg3_fsm_6;
            when ap_ST_pp1_stg3_fsm_6 => 
                ap_NS_fsm <= ap_ST_pp1_stg4_fsm_7;
            when ap_ST_pp1_stg4_fsm_7 => 
                ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
            when ap_ST_st17_fsm_8 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, tmp_s_fu_199_p1, tmp_9_fu_235_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            A_address0 <= tmp_s_fu_199_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            A_address0 <= tmp_9_fu_235_p1(10 - 1 downto 0);
        else 
            A_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_sig_101, ap_sig_130, ap_sig_134)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101))))) then 
            A_ce0 <= ap_const_logic_1;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond7_reg_281, ap_sig_101)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond7_reg_281 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101))))) then 
            A_we0 <= ap_const_logic_1;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, exitcond8_fu_175_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond8_fu_175_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond8_fu_175_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond8_fu_175_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_101_assign_proc : process(strm_in_V_empty_n, exitcond7_reg_281)
    begin
                ap_sig_101 <= ((exitcond7_reg_281 = ap_const_lv1_0) and (strm_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_115_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_115 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_130_assign_proc : process(strm_in_V_empty_n, exitcond_flatten_reg_290)
    begin
                ap_sig_130 <= ((ap_const_lv1_0 = exitcond_flatten_reg_290) and (strm_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_134_assign_proc : process(strm_out_V_full_n, ap_reg_ppstg_tmp_2_reg_322_pp1_iter1)
    begin
                ap_sig_134 <= (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_322_pp1_iter1)) and (strm_out_V_full_n = ap_const_logic_0));
    end process;


    ap_sig_157_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_157 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_186_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_186 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_212_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_212 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_292_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_292 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_45_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_45 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_61_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_61 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_94_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_94 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_45)
    begin
        if (ap_sig_45) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp1_stg0_fsm_3_assign_proc : process(ap_sig_115)
    begin
        if (ap_sig_115) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp1_stg1_fsm_4_assign_proc : process(ap_sig_61)
    begin
        if (ap_sig_61) then 
            ap_sig_cseq_ST_pp1_stg1_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg1_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp1_stg2_fsm_5_assign_proc : process(ap_sig_157)
    begin
        if (ap_sig_157) then 
            ap_sig_cseq_ST_pp1_stg2_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg2_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp1_stg3_fsm_6_assign_proc : process(ap_sig_292)
    begin
        if (ap_sig_292) then 
            ap_sig_cseq_ST_pp1_stg3_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg3_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp1_stg4_fsm_7_assign_proc : process(ap_sig_186)
    begin
        if (ap_sig_186) then 
            ap_sig_cseq_ST_pp1_stg4_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg4_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_8_assign_proc : process(ap_sig_212)
    begin
        if (ap_sig_212) then 
            ap_sig_cseq_ST_st17_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_26)
    begin
        if (ap_sig_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_94)
    begin
        if (ap_sig_94) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond7_fu_187_p2 <= "1" when (m_phi_fu_131_p4 = ap_const_lv10_310) else "0";
    exitcond8_fu_175_p2 <= "1" when (i_reg_116 = ap_const_lv4_A) else "0";
    exitcond_flatten_fu_204_p2 <= "1" when (indvar_flatten_phi_fu_143_p4 = ap_const_lv17_13240) else "0";
    exitcond_fu_216_p2 <= "1" when (k_phi_fu_154_p4 = ap_const_lv10_310) else "0";

    grp_fu_161_ce_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_sig_130, ap_sig_134, ap_sig_cseq_ST_pp1_stg2_fsm_5, ap_sig_cseq_ST_pp1_stg4_fsm_7, ap_sig_cseq_ST_pp1_stg3_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134)))) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_6))) then 
            grp_fu_161_ce <= ap_const_logic_1;
        else 
            grp_fu_161_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_161_p0 <= 
        ap_const_lv32_0 when (tmp_8_reg_307(0) = '1') else 
        tmp_fu_76;

    grp_fu_165_ce_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_sig_cseq_ST_pp1_stg2_fsm_5, ap_sig_cseq_ST_pp1_stg4_fsm_7, ap_sig_cseq_ST_pp1_stg3_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg2_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg4_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg3_fsm_6))) then 
            grp_fu_165_ce <= ap_const_logic_1;
        else 
            grp_fu_165_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_2_fu_181_p2 <= std_logic_vector(unsigned(i_reg_116) + unsigned(ap_const_lv4_1));
    indvar_flatten_next_fu_210_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_143_p4) + unsigned(ap_const_lv17_1));

    indvar_flatten_phi_fu_143_p4_assign_proc : process(ap_reg_ppiten_pp1_it1, exitcond_flatten_reg_290, indvar_flatten_reg_139, ap_sig_cseq_ST_pp1_stg0_fsm_3, indvar_flatten_next_reg_294)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_290) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3))) then 
            indvar_flatten_phi_fu_143_p4 <= indvar_flatten_next_reg_294;
        else 
            indvar_flatten_phi_fu_143_p4 <= indvar_flatten_reg_139;
        end if; 
    end process;

    k_1_fu_244_p2 <= std_logic_vector(unsigned(k_mid2_reg_299) + unsigned(ap_const_lv10_1));
    k_mid2_fu_222_p3 <= 
        ap_const_lv10_0 when (exitcond_fu_216_p2(0) = '1') else 
        k_phi_fu_154_p4;

    k_phi_fu_154_p4_assign_proc : process(ap_reg_ppiten_pp1_it1, exitcond_flatten_reg_290, k_reg_150, ap_sig_cseq_ST_pp1_stg0_fsm_3, k_1_reg_326)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten_reg_290) and (ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3))) then 
            k_phi_fu_154_p4 <= k_1_reg_326;
        else 
            k_phi_fu_154_p4 <= k_reg_150;
        end if; 
    end process;

    m_2_fu_193_p2 <= std_logic_vector(unsigned(m_phi_fu_131_p4) + unsigned(ap_const_lv10_1));

    m_phi_fu_131_p4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond7_reg_281, m_reg_127, m_2_reg_285)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond7_reg_281 = ap_const_lv1_0))) then 
            m_phi_fu_131_p4 <= m_2_reg_285;
        else 
            m_phi_fu_131_p4 <= m_reg_127;
        end if; 
    end process;


    strm_in_V_blk_n_assign_proc : process(strm_in_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond7_reg_281, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, exitcond_flatten_reg_290)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond7_reg_281 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_290)))) then 
            strm_in_V_blk_n <= strm_in_V_empty_n;
        else 
            strm_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond7_reg_281, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, exitcond_flatten_reg_290, ap_sig_101, ap_sig_130, ap_sig_134)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten_reg_290) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond7_reg_281 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_101))))) then 
            strm_in_V_read <= ap_const_logic_1;
        else 
            strm_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_blk_n_assign_proc : process(strm_out_V_full_n, ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_tmp_2_reg_322_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_322_pp1_iter1)))) then 
            strm_out_V_blk_n <= strm_out_V_full_n;
        else 
            strm_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_din <= tmp_172_reg_346;

    strm_out_V_write_assign_proc : process(ap_sig_cseq_ST_pp1_stg1_fsm_4, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_tmp_2_reg_322_pp1_iter1, ap_sig_130, ap_sig_134)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg1_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_2_reg_322_pp1_iter1)) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and ap_sig_130) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and ap_sig_134))))) then 
            strm_out_V_write <= ap_const_logic_1;
        else 
            strm_out_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_239_p2 <= "1" when (k_mid2_reg_299 = ap_const_lv10_30F) else "0";
    tmp_8_fu_230_p2 <= "1" when (k_mid2_reg_299 = ap_const_lv10_0) else "0";
    tmp_9_fu_235_p1 <= std_logic_vector(resize(unsigned(k_mid2_reg_299),64));
    tmp_s_fu_199_p1 <= std_logic_vector(resize(unsigned(m_reg_127),64));
end behav;
