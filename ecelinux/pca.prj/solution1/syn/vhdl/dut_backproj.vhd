-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_backproj is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_empty_n : IN STD_LOGIC;
    strm_in_V_read : OUT STD_LOGIC;
    strm_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_full_n : IN STD_LOGIC;
    strm_out_V_write : OUT STD_LOGIC );
end;


architecture behav of dut_backproj is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_pp0_stg1_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_pp0_stg2_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_pp0_stg3_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st15_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_3E80 : STD_LOGIC_VECTOR (13 downto 0) := "11111010000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv12_640 : STD_LOGIC_VECTOR (11 downto 0) := "011001000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_23 : BOOLEAN;
    signal strm_in_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg1_fsm_2 : STD_LOGIC;
    signal ap_sig_42 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_334 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_352 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg2_fsm_3 : STD_LOGIC;
    signal ap_sig_64 : BOOLEAN;
    signal strm_out_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_75 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal tmp_10_reg_381 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_10_reg_381_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten2_reg_126 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_reg_137 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_148 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_03_2_reg_159 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_reg_171 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten2_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_98 : BOOLEAN;
    signal ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next2_fu_197_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_next2_reg_338 : STD_LOGIC_VECTOR (13 downto 0);
    signal k_mid2_fu_259_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_mid2_reg_343 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_fu_273_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_281_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_mid2_reg_356 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_next_fu_295_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal indvar_flatten_next_reg_361 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_366 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_126 : BOOLEAN;
    signal ap_reg_ppstg_tmp_7_reg_366_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_10_reg_381_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_2_fu_321_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_2_reg_385 : STD_LOGIC_VECTOR (4 downto 0);
    signal A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp0_stg3_fsm_4 : STD_LOGIC;
    signal ap_sig_151 : BOOLEAN;
    signal grp_fu_186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_ce0 : STD_LOGIC;
    signal A_we0 : STD_LOGIC;
    signal indvar_flatten2_phi_fu_130_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_phi_fu_141_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_phi_fu_152_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_03_2_phi_fu_163_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_phi_fu_175_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_205 : BOOLEAN;
    signal grp_fu_182_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp31_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid_fu_209_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_mid_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_247_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid1_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_op_fu_289_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_182_ce : STD_LOGIC;
    signal grp_fu_186_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st15_fsm_5 : STD_LOGIC;
    signal ap_sig_329 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component dut_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_backproj_A IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    A_U : component dut_backproj_A
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_address0,
        ce0 => A_ce0,
        we0 => A_we0,
        d0 => strm_in_V_dout,
        q0 => A_q0);

    dut_fadd_32ns_32ns_32_5_full_dsp_U1 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_182_p0,
        din1 => tmp_9_reg_395,
        ce => grp_fu_182_ce,
        dout => grp_fu_182_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U2 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => A_q0,
        din1 => tmp_80_reg_376,
        ce => grp_fu_186_ce,
        dout => grp_fu_186_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and not((ap_const_lv1_0 = exitcond_flatten2_fu_191_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and not((exitcond_flatten2_reg_334 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten2_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)))) then 
                indvar_flatten2_reg_126 <= indvar_flatten_next2_reg_338;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten2_reg_126 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)))) then 
                indvar_flatten_reg_137 <= indvar_flatten_next_reg_361;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_137 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    j_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)))) then 
                j_reg_148 <= j_mid2_reg_356;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_148 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    k_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)))) then 
                k_reg_171 <= k_2_reg_385;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                k_reg_171 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    p_03_2_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter2))) then 
                p_03_2_reg_159 <= grp_fu_182_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                p_03_2_reg_159 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)))) then
                ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter1 <= exitcond_flatten2_reg_334;
                ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter1;
                exitcond_flatten2_reg_334 <= exitcond_flatten2_fu_191_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126)))) then
                ap_reg_ppstg_tmp_10_reg_381_pp0_iter1 <= tmp_10_reg_381;
                ap_reg_ppstg_tmp_10_reg_381_pp0_iter2 <= ap_reg_ppstg_tmp_10_reg_381_pp0_iter1;
                ap_reg_ppstg_tmp_7_reg_366_pp0_iter1 <= tmp_7_reg_366;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)))) then
                indvar_flatten_next2_reg_338 <= indvar_flatten_next2_fu_197_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and (ap_const_lv1_0 = exitcond_flatten2_fu_191_p2))) then
                indvar_flatten_next_reg_361 <= indvar_flatten_next_fu_295_p3;
                j_mid2_reg_356 <= j_mid2_fu_281_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126)))) then
                k_2_reg_385 <= k_2_fu_321_p2;
                tmp_80_reg_376 <= strm_in_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and (ap_const_lv1_0 = exitcond_flatten2_fu_191_p2))) then
                k_mid2_reg_343 <= k_mid2_fu_259_p3;
                tmp_mid2_reg_352 <= tmp_mid2_fu_273_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter2))) then
                result_reg_405 <= grp_fu_182_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126)))) then
                tmp_10_reg_381 <= tmp_10_fu_316_p2;
                tmp_7_reg_366 <= tmp_7_fu_307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter1))) then
                tmp_9_reg_395 <= grp_fu_186_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it3, exitcond_flatten2_fu_191_p2, ap_sig_98, ap_sig_126, ap_sig_205)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and not(((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and not((ap_const_lv1_0 = exitcond_flatten2_fu_191_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)) and not((ap_const_lv1_0 = exitcond_flatten2_fu_191_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp0_stg1_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_205))) then
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                end if;
            when ap_ST_pp0_stg2_fsm_3 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126))) then
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_3;
                end if;
            when ap_ST_pp0_stg3_fsm_4 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
            when ap_ST_st15_fsm_5 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, tmp_s_fu_303_p1, tmp_8_fu_312_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2)) then 
                A_address0 <= tmp_s_fu_303_p1(4 - 1 downto 0);
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) then 
                A_address0 <= tmp_8_fu_312_p1(4 - 1 downto 0);
            else 
                A_address0 <= "XXXX";
            end if;
        else 
            A_address0 <= "XXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_126, ap_sig_205)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_205))))) then 
            A_ce0 <= ap_const_logic_1;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond_flatten2_reg_334, tmp_mid2_reg_352, ap_sig_205)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_352)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_205))))) then 
            A_we0 <= ap_const_logic_1;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st15_fsm_5)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st15_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_126_assign_proc : process(strm_in_V_empty_n, exitcond_flatten2_reg_334)
    begin
                ap_sig_126 <= ((exitcond_flatten2_reg_334 = ap_const_lv1_0) and (strm_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_151_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_151 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_205_assign_proc : process(strm_in_V_empty_n, exitcond_flatten2_reg_334, tmp_mid2_reg_352)
    begin
                ap_sig_205 <= ((exitcond_flatten2_reg_334 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_352)) and (strm_in_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_329_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_329 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_42_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_42 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_64_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_64 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_75_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_75 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_98_assign_proc : process(strm_out_V_full_n, ap_reg_ppstg_tmp_10_reg_381_pp0_iter2)
    begin
                ap_sig_98 <= (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_381_pp0_iter2)) and (strm_out_V_full_n = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_75)
    begin
        if (ap_sig_75) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg1_fsm_2_assign_proc : process(ap_sig_42)
    begin
        if (ap_sig_42) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg2_fsm_3_assign_proc : process(ap_sig_64)
    begin
        if (ap_sig_64) then 
            ap_sig_cseq_ST_pp0_stg2_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg2_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg3_fsm_4_assign_proc : process(ap_sig_151)
    begin
        if (ap_sig_151) then 
            ap_sig_cseq_ST_pp0_stg3_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg3_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_5_assign_proc : process(ap_sig_329)
    begin
        if (ap_sig_329) then 
            ap_sig_cseq_ST_st15_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_23)
    begin
        if (ap_sig_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten2_fu_191_p2 <= "1" when (indvar_flatten2_phi_fu_130_p4 = ap_const_lv14_3E80) else "0";
    exitcond_flatten_fu_203_p2 <= "1" when (indvar_flatten_phi_fu_141_p4 = ap_const_lv12_640) else "0";
    exitcond_fu_235_p2 <= "1" when (k_phi_fu_175_p4 = ap_const_lv5_10) else "0";
    exitcond_mid_fu_241_p2 <= (exitcond_fu_235_p2 and not_exitcond_flatten_fu_229_p2);

    grp_fu_182_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it3, ap_sig_98, ap_sig_126, ap_sig_cseq_ST_pp0_stg3_fsm_4, ap_sig_205)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126))) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_205))))) then 
            grp_fu_182_ce <= ap_const_logic_1;
        else 
            grp_fu_182_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_182_p0 <= 
        ap_const_lv32_0 when (ap_reg_ppstg_tmp_7_reg_366_pp0_iter1(0) = '1') else 
        p_03_2_phi_fu_163_p4;

    grp_fu_186_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it3, ap_sig_98, ap_sig_126, ap_sig_cseq_ST_pp0_stg3_fsm_4, ap_sig_205)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126))) or (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_205))))) then 
            grp_fu_186_ce <= ap_const_logic_1;
        else 
            grp_fu_186_ce <= ap_const_logic_0;
        end if; 
    end process;


    indvar_flatten2_phi_fu_130_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond_flatten2_reg_334, ap_sig_cseq_ST_pp0_stg0_fsm_1, indvar_flatten2_reg_126, indvar_flatten_next2_reg_338)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            indvar_flatten2_phi_fu_130_p4 <= indvar_flatten_next2_reg_338;
        else 
            indvar_flatten2_phi_fu_130_p4 <= indvar_flatten2_reg_126;
        end if; 
    end process;

    indvar_flatten_next2_fu_197_p2 <= std_logic_vector(unsigned(indvar_flatten2_phi_fu_130_p4) + unsigned(ap_const_lv14_1));
    indvar_flatten_next_fu_295_p3 <= 
        ap_const_lv12_1 when (exitcond_flatten_fu_203_p2(0) = '1') else 
        indvar_flatten_op_fu_289_p2;
    indvar_flatten_op_fu_289_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_141_p4) + unsigned(ap_const_lv12_1));

    indvar_flatten_phi_fu_141_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond_flatten2_reg_334, ap_sig_cseq_ST_pp0_stg0_fsm_1, indvar_flatten_reg_137, indvar_flatten_next_reg_361)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            indvar_flatten_phi_fu_141_p4 <= indvar_flatten_next_reg_361;
        else 
            indvar_flatten_phi_fu_141_p4 <= indvar_flatten_reg_137;
        end if; 
    end process;

    j_2_fu_247_p2 <= std_logic_vector(unsigned(j_mid_fu_209_p3) + unsigned(ap_const_lv7_1));
    j_mid2_fu_281_p3 <= 
        j_2_fu_247_p2 when (exitcond_mid_fu_241_p2(0) = '1') else 
        j_mid_fu_209_p3;
    j_mid_fu_209_p3 <= 
        ap_const_lv7_0 when (exitcond_flatten_fu_203_p2(0) = '1') else 
        j_phi_fu_152_p4;

    j_phi_fu_152_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond_flatten2_reg_334, ap_sig_cseq_ST_pp0_stg0_fsm_1, j_reg_148, j_mid2_reg_356)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            j_phi_fu_152_p4 <= j_mid2_reg_356;
        else 
            j_phi_fu_152_p4 <= j_reg_148;
        end if; 
    end process;

    k_2_fu_321_p2 <= std_logic_vector(unsigned(k_mid2_reg_343) + unsigned(ap_const_lv5_1));
    k_mid2_fu_259_p3 <= 
        ap_const_lv5_0 when (tmp_27_fu_253_p2(0) = '1') else 
        k_phi_fu_175_p4;

    k_phi_fu_175_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond_flatten2_reg_334, ap_sig_cseq_ST_pp0_stg0_fsm_1, k_reg_171, k_2_reg_385)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1))) then 
            k_phi_fu_175_p4 <= k_2_reg_385;
        else 
            k_phi_fu_175_p4 <= k_reg_171;
        end if; 
    end process;

    not_exitcond_flatten_fu_229_p2 <= (exitcond_flatten_fu_203_p2 xor ap_const_lv1_1);

    p_03_2_phi_fu_163_p4_assign_proc : process(ap_reg_ppiten_pp0_it2, p_03_2_reg_159, ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter2, ap_sig_cseq_ST_pp0_stg3_fsm_4, grp_fu_182_p2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten2_reg_334_pp0_iter2))) then 
            p_03_2_phi_fu_163_p4 <= grp_fu_182_p2;
        else 
            p_03_2_phi_fu_163_p4 <= p_03_2_reg_159;
        end if; 
    end process;


    strm_in_V_blk_n_assign_proc : process(strm_in_V_empty_n, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond_flatten2_reg_334, tmp_mid2_reg_352, ap_sig_cseq_ST_pp0_stg2_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_352))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)))) then 
            strm_in_V_blk_n <= strm_in_V_empty_n;
        else 
            strm_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond_flatten2_reg_334, tmp_mid2_reg_352, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_126, ap_sig_205)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_126))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten2_reg_334 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_mid2_reg_352)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_205))))) then 
            strm_in_V_read <= ap_const_logic_1;
        else 
            strm_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_blk_n_assign_proc : process(strm_out_V_full_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_tmp_10_reg_381_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_381_pp0_iter2)))) then 
            strm_out_V_blk_n <= strm_out_V_full_n;
        else 
            strm_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_din <= result_reg_405;

    strm_out_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_tmp_10_reg_381_pp0_iter2, ap_sig_98)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_10_reg_381_pp0_iter2)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_98)))) then 
            strm_out_V_write <= ap_const_logic_1;
        else 
            strm_out_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp31_fu_217_p2 <= "1" when (j_phi_fu_152_p4 = ap_const_lv7_0) else "0";
    tmp_10_fu_316_p2 <= "1" when (k_mid2_reg_343 = ap_const_lv5_F) else "0";
    tmp_27_fu_253_p2 <= (exitcond_mid_fu_241_p2 or exitcond_flatten_fu_203_p2);
    tmp_7_fu_307_p2 <= "1" when (k_mid2_reg_343 = ap_const_lv5_0) else "0";
    tmp_8_fu_312_p1 <= std_logic_vector(resize(unsigned(k_mid2_reg_343),64));
    tmp_mid1_fu_267_p2 <= "1" when (j_2_fu_247_p2 = ap_const_lv7_0) else "0";
    tmp_mid2_fu_273_p3 <= 
        tmp_mid1_fu_267_p2 when (exitcond_mid_fu_241_p2(0) = '1') else 
        tmp_mid_fu_223_p2;
    tmp_mid_fu_223_p2 <= (exitcond_flatten_fu_203_p2 or tmp31_fu_217_p2);
    tmp_s_fu_303_p1 <= std_logic_vector(resize(unsigned(k_mid2_reg_343),64));
end behav;
