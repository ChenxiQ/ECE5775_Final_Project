

================================================================
== Vivado HLS Report for 'dut_calc_svd_update_on_diag_s_off_s'
================================================================
* Date:           Tue Nov 15 03:39:05 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        pca.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.44|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1612|  8754|  1612|  8754|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+------+------+----------+-----------+-----------+------+----------+
        |              |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+------+------+----------+-----------+-----------+------+----------+
        |- off_row_uv  |  1568|  8624|  2 ~ 11  |          -|          -|   784|    no    |
        +--------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 54
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / (!exitcond & !or_cond)
	54  / (!exitcond & or_cond)
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	44  / true
* FSM state operations: 

 <State 1>: 7.26ns
ST_1: s_temp_1_1_read_1 [1/1] 0.00ns
_ifconv:8  %s_temp_1_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %s_temp_1_1_read)

ST_1: s_temp_1_0_read_1 [1/1] 0.00ns
_ifconv:9  %s_temp_1_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %s_temp_1_0_read)

ST_1: s_temp_0_1_read_1 [1/1] 0.00ns
_ifconv:10  %s_temp_0_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %s_temp_0_1_read)

ST_1: s_temp_0_0_read_1 [1/1] 0.00ns
_ifconv:11  %s_temp_0_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %s_temp_0_0_read)

ST_1: u1 [5/5] 7.26ns
_ifconv:14  %u1 = fsub float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_1: u2 [5/5] 7.26ns
_ifconv:15  %u2 = fadd float %s_temp_1_0_read_1, %s_temp_0_1_read_1

ST_1: u1_1 [5/5] 7.26ns
_ifconv:19  %u1_1 = fadd float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_1: u2_1 [5/5] 7.26ns
_ifconv:20  %u2_1 = fsub float %s_temp_1_0_read_1, %s_temp_0_1_read_1


 <State 2>: 7.26ns
ST_2: u1 [4/5] 7.26ns
_ifconv:14  %u1 = fsub float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_2: u2 [4/5] 7.26ns
_ifconv:15  %u2 = fadd float %s_temp_1_0_read_1, %s_temp_0_1_read_1

ST_2: u1_1 [4/5] 7.26ns
_ifconv:19  %u1_1 = fadd float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_2: u2_1 [4/5] 7.26ns
_ifconv:20  %u2_1 = fsub float %s_temp_1_0_read_1, %s_temp_0_1_read_1


 <State 3>: 7.26ns
ST_3: u1 [3/5] 7.26ns
_ifconv:14  %u1 = fsub float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_3: u2 [3/5] 7.26ns
_ifconv:15  %u2 = fadd float %s_temp_1_0_read_1, %s_temp_0_1_read_1

ST_3: u1_1 [3/5] 7.26ns
_ifconv:19  %u1_1 = fadd float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_3: u2_1 [3/5] 7.26ns
_ifconv:20  %u2_1 = fsub float %s_temp_1_0_read_1, %s_temp_0_1_read_1


 <State 4>: 7.26ns
ST_4: u1 [2/5] 7.26ns
_ifconv:14  %u1 = fsub float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_4: u2 [2/5] 7.26ns
_ifconv:15  %u2 = fadd float %s_temp_1_0_read_1, %s_temp_0_1_read_1

ST_4: u1_1 [2/5] 7.26ns
_ifconv:19  %u1_1 = fadd float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_4: u2_1 [2/5] 7.26ns
_ifconv:20  %u2_1 = fsub float %s_temp_1_0_read_1, %s_temp_0_1_read_1


 <State 5>: 7.26ns
ST_5: u1 [1/5] 7.26ns
_ifconv:14  %u1 = fsub float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_5: u2 [1/5] 7.26ns
_ifconv:15  %u2 = fadd float %s_temp_1_0_read_1, %s_temp_0_1_read_1

ST_5: u1_1 [1/5] 7.26ns
_ifconv:19  %u1_1 = fadd float %s_temp_1_1_read_1, %s_temp_0_0_read_1

ST_5: u2_1 [1/5] 7.26ns
_ifconv:20  %u2_1 = fsub float %s_temp_1_0_read_1, %s_temp_0_1_read_1


 <State 6>: 6.16ns
ST_6: call_ret1 [2/2] 6.16ns
_ifconv:16  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_6: call_ret2 [2/2] 6.16ns
_ifconv:21  %call_ret2 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 7>: 7.27ns
ST_7: call_ret1 [1/2] 7.27ns
_ifconv:16  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_7: cosA_half [1/1] 0.00ns
_ifconv:17  %cosA_half = extractvalue { float, float } %call_ret1, 0

ST_7: sinA_half [1/1] 0.00ns
_ifconv:18  %sinA_half = extractvalue { float, float } %call_ret1, 1

ST_7: call_ret2 [1/2] 7.27ns
_ifconv:21  %call_ret2 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_7: cosB_half [1/1] 0.00ns
_ifconv:22  %cosB_half = extractvalue { float, float } %call_ret2, 0

ST_7: sinB_half [1/1] 0.00ns
_ifconv:23  %sinB_half = extractvalue { float, float } %call_ret2, 1


 <State 8>: 7.07ns
ST_8: tmp_i [4/4] 5.70ns
_ifconv:24  %tmp_i = fmul float %cosA_half, %cosB_half

ST_8: tmp_3_i [4/4] 5.70ns
_ifconv:25  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_8: tmp_to_int [1/1] 0.00ns
_ifconv:27  %tmp_to_int = bitcast float %cosA_half to i32

ST_8: tmp_neg [1/1] 1.37ns
_ifconv:28  %tmp_neg = xor i32 %tmp_to_int, -2147483648

ST_8: a2_assign [1/1] 0.00ns
_ifconv:29  %a2_assign = bitcast i32 %tmp_neg to float

ST_8: tmp_i3 [4/4] 5.70ns
_ifconv:30  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_8: tmp_3_i3 [4/4] 5.70ns
_ifconv:31  %tmp_3_i3 = fmul float %a2_assign, %sinB_half

ST_8: tmp_to_int_16 [1/1] 0.00ns
_ifconv:33  %tmp_to_int_16 = bitcast float %sinA_half to i32

ST_8: tmp_neg_17 [1/1] 1.37ns
_ifconv:34  %tmp_neg_17 = xor i32 %tmp_to_int_16, -2147483648

ST_8: a2_assign_1 [1/1] 0.00ns
_ifconv:35  %a2_assign_1 = bitcast i32 %tmp_neg_17 to float

ST_8: tmp_3_i4 [4/4] 5.70ns
_ifconv:36  %tmp_3_i4 = fmul float %a2_assign_1, %sinB_half

ST_8: tmp_3_i5 [4/4] 5.70ns
_ifconv:38  %tmp_3_i5 = fmul float %cosA_half, %sinB_half


 <State 9>: 5.70ns
ST_9: tmp_i [3/4] 5.70ns
_ifconv:24  %tmp_i = fmul float %cosA_half, %cosB_half

ST_9: tmp_3_i [3/4] 5.70ns
_ifconv:25  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_9: tmp_i3 [3/4] 5.70ns
_ifconv:30  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_9: tmp_3_i3 [3/4] 5.70ns
_ifconv:31  %tmp_3_i3 = fmul float %a2_assign, %sinB_half

ST_9: tmp_3_i4 [3/4] 5.70ns
_ifconv:36  %tmp_3_i4 = fmul float %a2_assign_1, %sinB_half

ST_9: tmp_3_i5 [3/4] 5.70ns
_ifconv:38  %tmp_3_i5 = fmul float %cosA_half, %sinB_half


 <State 10>: 5.70ns
ST_10: tmp_i [2/4] 5.70ns
_ifconv:24  %tmp_i = fmul float %cosA_half, %cosB_half

ST_10: tmp_3_i [2/4] 5.70ns
_ifconv:25  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_10: tmp_i3 [2/4] 5.70ns
_ifconv:30  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_10: tmp_3_i3 [2/4] 5.70ns
_ifconv:31  %tmp_3_i3 = fmul float %a2_assign, %sinB_half

ST_10: tmp_3_i4 [2/4] 5.70ns
_ifconv:36  %tmp_3_i4 = fmul float %a2_assign_1, %sinB_half

ST_10: tmp_3_i5 [2/4] 5.70ns
_ifconv:38  %tmp_3_i5 = fmul float %cosA_half, %sinB_half


 <State 11>: 5.70ns
ST_11: tmp_i [1/4] 5.70ns
_ifconv:24  %tmp_i = fmul float %cosA_half, %cosB_half

ST_11: tmp_3_i [1/4] 5.70ns
_ifconv:25  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_11: tmp_i3 [1/4] 5.70ns
_ifconv:30  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_11: tmp_3_i3 [1/4] 5.70ns
_ifconv:31  %tmp_3_i3 = fmul float %a2_assign, %sinB_half

ST_11: tmp_3_i4 [1/4] 5.70ns
_ifconv:36  %tmp_3_i4 = fmul float %a2_assign_1, %sinB_half

ST_11: tmp_3_i5 [1/4] 5.70ns
_ifconv:38  %tmp_3_i5 = fmul float %cosA_half, %sinB_half


 <State 12>: 7.26ns
ST_12: uz_new [5/5] 7.26ns
_ifconv:26  %uz_new = fadd float %tmp_i, %tmp_3_i

ST_12: ux_new [5/5] 7.26ns
_ifconv:32  %ux_new = fadd float %tmp_i3, %tmp_3_i3

ST_12: vz_int_1 [5/5] 7.26ns
_ifconv:37  %vz_int_1 = fadd float %tmp_i, %tmp_3_i4

ST_12: vy_int_1 [5/5] 7.26ns
_ifconv:39  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i5


 <State 13>: 7.26ns
ST_13: uz_new [4/5] 7.26ns
_ifconv:26  %uz_new = fadd float %tmp_i, %tmp_3_i

ST_13: ux_new [4/5] 7.26ns
_ifconv:32  %ux_new = fadd float %tmp_i3, %tmp_3_i3

ST_13: vz_int_1 [4/5] 7.26ns
_ifconv:37  %vz_int_1 = fadd float %tmp_i, %tmp_3_i4

ST_13: vy_int_1 [4/5] 7.26ns
_ifconv:39  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i5


 <State 14>: 7.26ns
ST_14: uz_new [3/5] 7.26ns
_ifconv:26  %uz_new = fadd float %tmp_i, %tmp_3_i

ST_14: ux_new [3/5] 7.26ns
_ifconv:32  %ux_new = fadd float %tmp_i3, %tmp_3_i3

ST_14: vz_int_1 [3/5] 7.26ns
_ifconv:37  %vz_int_1 = fadd float %tmp_i, %tmp_3_i4

ST_14: vy_int_1 [3/5] 7.26ns
_ifconv:39  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i5


 <State 15>: 7.26ns
ST_15: uz_new [2/5] 7.26ns
_ifconv:26  %uz_new = fadd float %tmp_i, %tmp_3_i

ST_15: ux_new [2/5] 7.26ns
_ifconv:32  %ux_new = fadd float %tmp_i3, %tmp_3_i3

ST_15: vz_int_1 [2/5] 7.26ns
_ifconv:37  %vz_int_1 = fadd float %tmp_i, %tmp_3_i4

ST_15: vy_int_1 [2/5] 7.26ns
_ifconv:39  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i5


 <State 16>: 7.26ns
ST_16: uz_new [1/5] 7.26ns
_ifconv:26  %uz_new = fadd float %tmp_i, %tmp_3_i

ST_16: ux_new [1/5] 7.26ns
_ifconv:32  %ux_new = fadd float %tmp_i3, %tmp_3_i3

ST_16: vz_int_1 [1/5] 7.26ns
_ifconv:37  %vz_int_1 = fadd float %tmp_i, %tmp_3_i4

ST_16: vy_int_1 [1/5] 7.26ns
_ifconv:39  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i5


 <State 17>: 7.07ns
ST_17: vy_int_to_int [1/1] 0.00ns
_ifconv:43  %vy_int_to_int = bitcast float %vy_int_1 to i32

ST_17: vy_int_neg [1/1] 1.37ns
_ifconv:44  %vy_int_neg = xor i32 %vy_int_to_int, -2147483648

ST_17: vy_int [1/1] 0.00ns
_ifconv:45  %vy_int = bitcast i32 %vy_int_neg to float

ST_17: tmp_i4 [4/4] 5.70ns
_ifconv:46  %tmp_i4 = fmul float %vz_int_1, %s_temp_0_0_read_1

ST_17: tmp_3_i6 [4/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %vy_int, %s_temp_0_1_read_1

ST_17: tmp_i5 [4/4] 5.70ns
_ifconv:49  %tmp_i5 = fmul float %vz_int_1, %s_temp_1_0_read_1

ST_17: tmp_3_i7 [4/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %vy_int, %s_temp_1_1_read_1

ST_17: tmp_i7 [4/4] 5.70ns
_ifconv:55  %tmp_i7 = fmul float %vy_int_1, %s_temp_0_0_read_1

ST_17: tmp_3_i9 [4/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %vz_int_1, %s_temp_0_1_read_1

ST_17: tmp_i8 [4/4] 5.70ns
_ifconv:58  %tmp_i8 = fmul float %vy_int_1, %s_temp_1_0_read_1

ST_17: tmp_3_i1 [4/4] 5.70ns
_ifconv:59  %tmp_3_i1 = fmul float %vz_int_1, %s_temp_1_1_read_1


 <State 18>: 5.70ns
ST_18: tmp_i4 [3/4] 5.70ns
_ifconv:46  %tmp_i4 = fmul float %vz_int_1, %s_temp_0_0_read_1

ST_18: tmp_3_i6 [3/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %vy_int, %s_temp_0_1_read_1

ST_18: tmp_i5 [3/4] 5.70ns
_ifconv:49  %tmp_i5 = fmul float %vz_int_1, %s_temp_1_0_read_1

ST_18: tmp_3_i7 [3/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %vy_int, %s_temp_1_1_read_1

ST_18: tmp_i7 [3/4] 5.70ns
_ifconv:55  %tmp_i7 = fmul float %vy_int_1, %s_temp_0_0_read_1

ST_18: tmp_3_i9 [3/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %vz_int_1, %s_temp_0_1_read_1

ST_18: tmp_i8 [3/4] 5.70ns
_ifconv:58  %tmp_i8 = fmul float %vy_int_1, %s_temp_1_0_read_1

ST_18: tmp_3_i1 [3/4] 5.70ns
_ifconv:59  %tmp_3_i1 = fmul float %vz_int_1, %s_temp_1_1_read_1


 <State 19>: 5.70ns
ST_19: tmp_i4 [2/4] 5.70ns
_ifconv:46  %tmp_i4 = fmul float %vz_int_1, %s_temp_0_0_read_1

ST_19: tmp_3_i6 [2/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %vy_int, %s_temp_0_1_read_1

ST_19: tmp_i5 [2/4] 5.70ns
_ifconv:49  %tmp_i5 = fmul float %vz_int_1, %s_temp_1_0_read_1

ST_19: tmp_3_i7 [2/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %vy_int, %s_temp_1_1_read_1

ST_19: tmp_i7 [2/4] 5.70ns
_ifconv:55  %tmp_i7 = fmul float %vy_int_1, %s_temp_0_0_read_1

ST_19: tmp_3_i9 [2/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %vz_int_1, %s_temp_0_1_read_1

ST_19: tmp_i8 [2/4] 5.70ns
_ifconv:58  %tmp_i8 = fmul float %vy_int_1, %s_temp_1_0_read_1

ST_19: tmp_3_i1 [2/4] 5.70ns
_ifconv:59  %tmp_3_i1 = fmul float %vz_int_1, %s_temp_1_1_read_1


 <State 20>: 5.70ns
ST_20: tmp_i4 [1/4] 5.70ns
_ifconv:46  %tmp_i4 = fmul float %vz_int_1, %s_temp_0_0_read_1

ST_20: tmp_3_i6 [1/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %vy_int, %s_temp_0_1_read_1

ST_20: tmp_i5 [1/4] 5.70ns
_ifconv:49  %tmp_i5 = fmul float %vz_int_1, %s_temp_1_0_read_1

ST_20: tmp_3_i7 [1/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %vy_int, %s_temp_1_1_read_1

ST_20: tmp_i7 [1/4] 5.70ns
_ifconv:55  %tmp_i7 = fmul float %vy_int_1, %s_temp_0_0_read_1

ST_20: tmp_3_i9 [1/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %vz_int_1, %s_temp_0_1_read_1

ST_20: tmp_i8 [1/4] 5.70ns
_ifconv:58  %tmp_i8 = fmul float %vy_int_1, %s_temp_1_0_read_1

ST_20: tmp_3_i1 [1/4] 5.70ns
_ifconv:59  %tmp_3_i1 = fmul float %vz_int_1, %s_temp_1_1_read_1


 <State 21>: 7.26ns
ST_21: w_out1 [5/5] 7.26ns
_ifconv:48  %w_out1 = fadd float %tmp_i4, %tmp_3_i6

ST_21: w_out2 [5/5] 7.26ns
_ifconv:51  %w_out2 = fadd float %tmp_i5, %tmp_3_i7

ST_21: z_out1 [5/5] 7.26ns
_ifconv:57  %z_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_21: z_out2 [5/5] 7.26ns
_ifconv:60  %z_out2 = fadd float %tmp_i8, %tmp_3_i1


 <State 22>: 7.26ns
ST_22: w_out1 [4/5] 7.26ns
_ifconv:48  %w_out1 = fadd float %tmp_i4, %tmp_3_i6

ST_22: w_out2 [4/5] 7.26ns
_ifconv:51  %w_out2 = fadd float %tmp_i5, %tmp_3_i7

ST_22: z_out1 [4/5] 7.26ns
_ifconv:57  %z_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_22: z_out2 [4/5] 7.26ns
_ifconv:60  %z_out2 = fadd float %tmp_i8, %tmp_3_i1


 <State 23>: 7.26ns
ST_23: w_out1 [3/5] 7.26ns
_ifconv:48  %w_out1 = fadd float %tmp_i4, %tmp_3_i6

ST_23: w_out2 [3/5] 7.26ns
_ifconv:51  %w_out2 = fadd float %tmp_i5, %tmp_3_i7

ST_23: z_out1 [3/5] 7.26ns
_ifconv:57  %z_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_23: z_out2 [3/5] 7.26ns
_ifconv:60  %z_out2 = fadd float %tmp_i8, %tmp_3_i1


 <State 24>: 7.26ns
ST_24: w_out1 [2/5] 7.26ns
_ifconv:48  %w_out1 = fadd float %tmp_i4, %tmp_3_i6

ST_24: w_out2 [2/5] 7.26ns
_ifconv:51  %w_out2 = fadd float %tmp_i5, %tmp_3_i7

ST_24: z_out1 [2/5] 7.26ns
_ifconv:57  %z_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_24: z_out2 [2/5] 7.26ns
_ifconv:60  %z_out2 = fadd float %tmp_i8, %tmp_3_i1


 <State 25>: 7.26ns
ST_25: w_out1 [1/5] 7.26ns
_ifconv:48  %w_out1 = fadd float %tmp_i4, %tmp_3_i6

ST_25: w_out2 [1/5] 7.26ns
_ifconv:51  %w_out2 = fadd float %tmp_i5, %tmp_3_i7

ST_25: z_out1 [1/5] 7.26ns
_ifconv:57  %z_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_25: z_out2 [1/5] 7.26ns
_ifconv:60  %z_out2 = fadd float %tmp_i8, %tmp_3_i1


 <State 26>: 7.07ns
ST_26: uy_int_to_int [1/1] 0.00ns
_ifconv:40  %uy_int_to_int = bitcast float %ux_new to i32

ST_26: uy_int_neg [1/1] 1.37ns
_ifconv:41  %uy_int_neg = xor i32 %uy_int_to_int, -2147483648

ST_26: uy_int [1/1] 0.00ns
_ifconv:42  %uy_int = bitcast i32 %uy_int_neg to float

ST_26: tmp_i6 [4/4] 5.70ns
_ifconv:52  %tmp_i6 = fmul float %uz_new, %w_out1

ST_26: tmp_3_i8 [4/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %uy_int, %w_out2

ST_26: tmp_i9 [4/4] 5.70ns
_ifconv:61  %tmp_i9 = fmul float %ux_new, %z_out1

ST_26: tmp_3_i2 [4/4] 5.70ns
_ifconv:62  %tmp_3_i2 = fmul float %uz_new, %z_out2


 <State 27>: 5.70ns
ST_27: tmp_i6 [3/4] 5.70ns
_ifconv:52  %tmp_i6 = fmul float %uz_new, %w_out1

ST_27: tmp_3_i8 [3/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %uy_int, %w_out2

ST_27: tmp_i9 [3/4] 5.70ns
_ifconv:61  %tmp_i9 = fmul float %ux_new, %z_out1

ST_27: tmp_3_i2 [3/4] 5.70ns
_ifconv:62  %tmp_3_i2 = fmul float %uz_new, %z_out2


 <State 28>: 5.70ns
ST_28: tmp_i6 [2/4] 5.70ns
_ifconv:52  %tmp_i6 = fmul float %uz_new, %w_out1

ST_28: tmp_3_i8 [2/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %uy_int, %w_out2

ST_28: tmp_i9 [2/4] 5.70ns
_ifconv:61  %tmp_i9 = fmul float %ux_new, %z_out1

ST_28: tmp_3_i2 [2/4] 5.70ns
_ifconv:62  %tmp_3_i2 = fmul float %uz_new, %z_out2


 <State 29>: 5.70ns
ST_29: tmp_i6 [1/4] 5.70ns
_ifconv:52  %tmp_i6 = fmul float %uz_new, %w_out1

ST_29: tmp_3_i8 [1/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %uy_int, %w_out2

ST_29: tmp_i9 [1/4] 5.70ns
_ifconv:61  %tmp_i9 = fmul float %ux_new, %z_out1

ST_29: tmp_3_i2 [1/4] 5.70ns
_ifconv:62  %tmp_3_i2 = fmul float %uz_new, %z_out2


 <State 30>: 7.26ns
ST_30: w_out_int [5/5] 7.26ns
_ifconv:54  %w_out_int = fadd float %tmp_i6, %tmp_3_i8

ST_30: z_out_int [5/5] 7.26ns
_ifconv:63  %z_out_int = fadd float %tmp_i9, %tmp_3_i2


 <State 31>: 7.26ns
ST_31: w_out_int [4/5] 7.26ns
_ifconv:54  %w_out_int = fadd float %tmp_i6, %tmp_3_i8

ST_31: z_out_int [4/5] 7.26ns
_ifconv:63  %z_out_int = fadd float %tmp_i9, %tmp_3_i2


 <State 32>: 7.26ns
ST_32: w_out_int [3/5] 7.26ns
_ifconv:54  %w_out_int = fadd float %tmp_i6, %tmp_3_i8

ST_32: z_out_int [3/5] 7.26ns
_ifconv:63  %z_out_int = fadd float %tmp_i9, %tmp_3_i2


 <State 33>: 7.26ns
ST_33: w_out_int [2/5] 7.26ns
_ifconv:54  %w_out_int = fadd float %tmp_i6, %tmp_3_i8

ST_33: z_out_int [2/5] 7.26ns
_ifconv:63  %z_out_int = fadd float %tmp_i9, %tmp_3_i2


 <State 34>: 7.26ns
ST_34: w_out_int [1/5] 7.26ns
_ifconv:54  %w_out_int = fadd float %tmp_i6, %tmp_3_i8

ST_34: z_out_int [1/5] 7.26ns
_ifconv:63  %z_out_int = fadd float %tmp_i9, %tmp_3_i2


 <State 35>: 8.44ns
ST_35: p_read_9 [1/1] 0.00ns
_ifconv:0  %p_read_9 = call float @_ssdm_op_Read.ap_auto.float(float %p_read19)

ST_35: p_read_10 [1/1] 0.00ns
_ifconv:1  %p_read_10 = call float @_ssdm_op_Read.ap_auto.float(float %p_read18)

ST_35: p_read_11 [1/1] 0.00ns
_ifconv:2  %p_read_11 = call float @_ssdm_op_Read.ap_auto.float(float %p_read17)

ST_35: p_read_12 [1/1] 0.00ns
_ifconv:3  %p_read_12 = call float @_ssdm_op_Read.ap_auto.float(float %p_read16)

ST_35: p_read_13 [1/1] 0.00ns
_ifconv:4  %p_read_13 = call float @_ssdm_op_Read.ap_auto.float(float %p_read15)

ST_35: p_read_14 [1/1] 0.00ns
_ifconv:5  %p_read_14 = call float @_ssdm_op_Read.ap_auto.float(float %p_read14)

ST_35: p_read_15 [1/1] 0.00ns
_ifconv:6  %p_read_15 = call float @_ssdm_op_Read.ap_auto.float(float %p_read13)

ST_35: p_read_16 [1/1] 0.00ns
_ifconv:7  %p_read_16 = call float @_ssdm_op_Read.ap_auto.float(float %p_read)

ST_35: p_Val2_s [1/1] 0.00ns
_ifconv:64  %p_Val2_s = bitcast float %w_out_int to i32

ST_35: p_Result_s [1/1] 0.00ns
_ifconv:65  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 31)

ST_35: w_out_1_neg [1/1] 0.00ns (grouped into LUT with out node w_out)
_ifconv:66  %w_out_1_neg = xor i32 %p_Val2_s, -2147483648

ST_35: w_out_1 [1/1] 0.00ns (grouped into LUT with out node w_out)
_ifconv:67  %w_out_1 = bitcast i32 %w_out_1_neg to float

ST_35: vw_int_to_int [1/1] 0.00ns
_ifconv:68  %vw_int_to_int = bitcast float %vz_int_1 to i32

ST_35: vw_int_neg [1/1] 1.37ns
_ifconv:69  %vw_int_neg = xor i32 %vw_int_to_int, -2147483648

ST_35: vw_int [1/1] 0.00ns
_ifconv:70  %vw_int = bitcast i32 %vw_int_neg to float

ST_35: w_out [1/1] 1.37ns (out node of the LUT)
_ifconv:71  %w_out = select i1 %p_Result_s, float %w_out_1, float %w_out_int

ST_35: vw_int_3 [1/1] 1.37ns
_ifconv:72  %vw_int_3 = select i1 %p_Result_s, float %vw_int, float %vz_int_1

ST_35: vx_int [1/1] 1.37ns
_ifconv:73  %vx_int = select i1 %p_Result_s, float %vy_int_1, float %vy_int

ST_35: p_Val2_30 [1/1] 0.00ns
_ifconv:74  %p_Val2_30 = bitcast float %z_out_int to i32

ST_35: p_Result_10 [1/1] 0.00ns
_ifconv:75  %p_Result_10 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_30, i32 31)

ST_35: z_out_1_neg [1/1] 0.00ns (grouped into LUT with out node z_out_2)
_ifconv:76  %z_out_1_neg = xor i32 %p_Val2_30, -2147483648

ST_35: z_out [1/1] 0.00ns (grouped into LUT with out node z_out_2)
_ifconv:77  %z_out = bitcast i32 %z_out_1_neg to float

ST_35: z_out_2 [1/1] 1.37ns (out node of the LUT)
_ifconv:78  %z_out_2 = select i1 %p_Result_10, float %z_out, float %z_out_int

ST_35: vy_int_2 [1/1] 1.37ns
_ifconv:79  %vy_int_2 = select i1 %p_Result_10, float %vy_int, float %vy_int_1

ST_35: vz_int [1/1] 1.37ns
_ifconv:80  %vz_int = select i1 %p_Result_10, float %vw_int, float %vz_int_1

ST_35: tmp_i_i [4/4] 5.70ns
_ifconv:81  %tmp_i_i = fmul float %uz_new, %p_read_16

ST_35: tmp_3_i_i [4/4] 5.70ns
_ifconv:82  %tmp_3_i_i = fmul float %uy_int, %p_read_15

ST_35: tmp_i1_i [4/4] 5.70ns
_ifconv:84  %tmp_i1_i = fmul float %ux_new, %p_read_16

ST_35: tmp_3_i2_i [4/4] 5.70ns
_ifconv:85  %tmp_3_i2_i = fmul float %uz_new, %p_read_15

ST_35: tmp_i4_i [4/4] 5.70ns
_ifconv:87  %tmp_i4_i = fmul float %uz_new, %p_read_14

ST_35: tmp_3_i5_i [4/4] 5.70ns
_ifconv:88  %tmp_3_i5_i = fmul float %uy_int, %p_read_13

ST_35: tmp_i7_i [4/4] 5.70ns
_ifconv:90  %tmp_i7_i = fmul float %ux_new, %p_read_14

ST_35: tmp_3_i8_i [4/4] 5.70ns
_ifconv:91  %tmp_3_i8_i = fmul float %uz_new, %p_read_13

ST_35: tmp_i_i1 [4/4] 5.70ns
_ifconv:93  %tmp_i_i1 = fmul float %vw_int_3, %p_read_12

ST_35: tmp_3_i_i1 [4/4] 5.70ns
_ifconv:94  %tmp_3_i_i1 = fmul float %vx_int, %p_read_11

ST_35: tmp_i1_i1 [4/4] 5.70ns
_ifconv:96  %tmp_i1_i1 = fmul float %vy_int_2, %p_read_12

ST_35: tmp_3_i2_i1 [4/4] 5.70ns
_ifconv:97  %tmp_3_i2_i1 = fmul float %vz_int, %p_read_11

ST_35: tmp_i4_i1 [4/4] 5.70ns
_ifconv:99  %tmp_i4_i1 = fmul float %vw_int_3, %p_read_10

ST_35: tmp_3_i5_i1 [4/4] 5.70ns
_ifconv:100  %tmp_3_i5_i1 = fmul float %vx_int, %p_read_9

ST_35: tmp_i7_i1 [4/4] 5.70ns
_ifconv:102  %tmp_i7_i1 = fmul float %vy_int_2, %p_read_10

ST_35: tmp_3_i8_i1 [4/4] 5.70ns
_ifconv:103  %tmp_3_i8_i1 = fmul float %vz_int, %p_read_9


 <State 36>: 5.70ns
ST_36: tmp_i_i [3/4] 5.70ns
_ifconv:81  %tmp_i_i = fmul float %uz_new, %p_read_16

ST_36: tmp_3_i_i [3/4] 5.70ns
_ifconv:82  %tmp_3_i_i = fmul float %uy_int, %p_read_15

ST_36: tmp_i1_i [3/4] 5.70ns
_ifconv:84  %tmp_i1_i = fmul float %ux_new, %p_read_16

ST_36: tmp_3_i2_i [3/4] 5.70ns
_ifconv:85  %tmp_3_i2_i = fmul float %uz_new, %p_read_15

ST_36: tmp_i4_i [3/4] 5.70ns
_ifconv:87  %tmp_i4_i = fmul float %uz_new, %p_read_14

ST_36: tmp_3_i5_i [3/4] 5.70ns
_ifconv:88  %tmp_3_i5_i = fmul float %uy_int, %p_read_13

ST_36: tmp_i7_i [3/4] 5.70ns
_ifconv:90  %tmp_i7_i = fmul float %ux_new, %p_read_14

ST_36: tmp_3_i8_i [3/4] 5.70ns
_ifconv:91  %tmp_3_i8_i = fmul float %uz_new, %p_read_13

ST_36: tmp_i_i1 [3/4] 5.70ns
_ifconv:93  %tmp_i_i1 = fmul float %vw_int_3, %p_read_12

ST_36: tmp_3_i_i1 [3/4] 5.70ns
_ifconv:94  %tmp_3_i_i1 = fmul float %vx_int, %p_read_11

ST_36: tmp_i1_i1 [3/4] 5.70ns
_ifconv:96  %tmp_i1_i1 = fmul float %vy_int_2, %p_read_12

ST_36: tmp_3_i2_i1 [3/4] 5.70ns
_ifconv:97  %tmp_3_i2_i1 = fmul float %vz_int, %p_read_11

ST_36: tmp_i4_i1 [3/4] 5.70ns
_ifconv:99  %tmp_i4_i1 = fmul float %vw_int_3, %p_read_10

ST_36: tmp_3_i5_i1 [3/4] 5.70ns
_ifconv:100  %tmp_3_i5_i1 = fmul float %vx_int, %p_read_9

ST_36: tmp_i7_i1 [3/4] 5.70ns
_ifconv:102  %tmp_i7_i1 = fmul float %vy_int_2, %p_read_10

ST_36: tmp_3_i8_i1 [3/4] 5.70ns
_ifconv:103  %tmp_3_i8_i1 = fmul float %vz_int, %p_read_9


 <State 37>: 5.70ns
ST_37: tmp_i_i [2/4] 5.70ns
_ifconv:81  %tmp_i_i = fmul float %uz_new, %p_read_16

ST_37: tmp_3_i_i [2/4] 5.70ns
_ifconv:82  %tmp_3_i_i = fmul float %uy_int, %p_read_15

ST_37: tmp_i1_i [2/4] 5.70ns
_ifconv:84  %tmp_i1_i = fmul float %ux_new, %p_read_16

ST_37: tmp_3_i2_i [2/4] 5.70ns
_ifconv:85  %tmp_3_i2_i = fmul float %uz_new, %p_read_15

ST_37: tmp_i4_i [2/4] 5.70ns
_ifconv:87  %tmp_i4_i = fmul float %uz_new, %p_read_14

ST_37: tmp_3_i5_i [2/4] 5.70ns
_ifconv:88  %tmp_3_i5_i = fmul float %uy_int, %p_read_13

ST_37: tmp_i7_i [2/4] 5.70ns
_ifconv:90  %tmp_i7_i = fmul float %ux_new, %p_read_14

ST_37: tmp_3_i8_i [2/4] 5.70ns
_ifconv:91  %tmp_3_i8_i = fmul float %uz_new, %p_read_13

ST_37: tmp_i_i1 [2/4] 5.70ns
_ifconv:93  %tmp_i_i1 = fmul float %vw_int_3, %p_read_12

ST_37: tmp_3_i_i1 [2/4] 5.70ns
_ifconv:94  %tmp_3_i_i1 = fmul float %vx_int, %p_read_11

ST_37: tmp_i1_i1 [2/4] 5.70ns
_ifconv:96  %tmp_i1_i1 = fmul float %vy_int_2, %p_read_12

ST_37: tmp_3_i2_i1 [2/4] 5.70ns
_ifconv:97  %tmp_3_i2_i1 = fmul float %vz_int, %p_read_11

ST_37: tmp_i4_i1 [2/4] 5.70ns
_ifconv:99  %tmp_i4_i1 = fmul float %vw_int_3, %p_read_10

ST_37: tmp_3_i5_i1 [2/4] 5.70ns
_ifconv:100  %tmp_3_i5_i1 = fmul float %vx_int, %p_read_9

ST_37: tmp_i7_i1 [2/4] 5.70ns
_ifconv:102  %tmp_i7_i1 = fmul float %vy_int_2, %p_read_10

ST_37: tmp_3_i8_i1 [2/4] 5.70ns
_ifconv:103  %tmp_3_i8_i1 = fmul float %vz_int, %p_read_9


 <State 38>: 5.70ns
ST_38: tmp_i_i [1/4] 5.70ns
_ifconv:81  %tmp_i_i = fmul float %uz_new, %p_read_16

ST_38: tmp_3_i_i [1/4] 5.70ns
_ifconv:82  %tmp_3_i_i = fmul float %uy_int, %p_read_15

ST_38: tmp_i1_i [1/4] 5.70ns
_ifconv:84  %tmp_i1_i = fmul float %ux_new, %p_read_16

ST_38: tmp_3_i2_i [1/4] 5.70ns
_ifconv:85  %tmp_3_i2_i = fmul float %uz_new, %p_read_15

ST_38: tmp_i4_i [1/4] 5.70ns
_ifconv:87  %tmp_i4_i = fmul float %uz_new, %p_read_14

ST_38: tmp_3_i5_i [1/4] 5.70ns
_ifconv:88  %tmp_3_i5_i = fmul float %uy_int, %p_read_13

ST_38: tmp_i7_i [1/4] 5.70ns
_ifconv:90  %tmp_i7_i = fmul float %ux_new, %p_read_14

ST_38: tmp_3_i8_i [1/4] 5.70ns
_ifconv:91  %tmp_3_i8_i = fmul float %uz_new, %p_read_13

ST_38: tmp_i_i1 [1/4] 5.70ns
_ifconv:93  %tmp_i_i1 = fmul float %vw_int_3, %p_read_12

ST_38: tmp_3_i_i1 [1/4] 5.70ns
_ifconv:94  %tmp_3_i_i1 = fmul float %vx_int, %p_read_11

ST_38: tmp_i1_i1 [1/4] 5.70ns
_ifconv:96  %tmp_i1_i1 = fmul float %vy_int_2, %p_read_12

ST_38: tmp_3_i2_i1 [1/4] 5.70ns
_ifconv:97  %tmp_3_i2_i1 = fmul float %vz_int, %p_read_11

ST_38: tmp_i4_i1 [1/4] 5.70ns
_ifconv:99  %tmp_i4_i1 = fmul float %vw_int_3, %p_read_10

ST_38: tmp_3_i5_i1 [1/4] 5.70ns
_ifconv:100  %tmp_3_i5_i1 = fmul float %vx_int, %p_read_9

ST_38: tmp_i7_i1 [1/4] 5.70ns
_ifconv:102  %tmp_i7_i1 = fmul float %vy_int_2, %p_read_10

ST_38: tmp_3_i8_i1 [1/4] 5.70ns
_ifconv:103  %tmp_3_i8_i1 = fmul float %vz_int, %p_read_9


 <State 39>: 7.26ns
ST_39: uw_out [5/5] 7.26ns
_ifconv:83  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_39: ux_out [5/5] 7.26ns
_ifconv:86  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_39: uy_out [5/5] 7.26ns
_ifconv:89  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_39: uz_out [5/5] 7.26ns
_ifconv:92  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i

ST_39: vw_out [5/5] 7.26ns
_ifconv:95  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_39: vx_out [5/5] 7.26ns
_ifconv:98  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_39: vy_out [5/5] 7.26ns
_ifconv:101  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_39: vz_out [5/5] 7.26ns
_ifconv:104  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 40>: 7.26ns
ST_40: uw_out [4/5] 7.26ns
_ifconv:83  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_40: ux_out [4/5] 7.26ns
_ifconv:86  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_40: uy_out [4/5] 7.26ns
_ifconv:89  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_40: uz_out [4/5] 7.26ns
_ifconv:92  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i

ST_40: vw_out [4/5] 7.26ns
_ifconv:95  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_40: vx_out [4/5] 7.26ns
_ifconv:98  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_40: vy_out [4/5] 7.26ns
_ifconv:101  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_40: vz_out [4/5] 7.26ns
_ifconv:104  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 41>: 7.26ns
ST_41: uw_out [3/5] 7.26ns
_ifconv:83  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_41: ux_out [3/5] 7.26ns
_ifconv:86  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_41: uy_out [3/5] 7.26ns
_ifconv:89  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_41: uz_out [3/5] 7.26ns
_ifconv:92  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i

ST_41: vw_out [3/5] 7.26ns
_ifconv:95  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_41: vx_out [3/5] 7.26ns
_ifconv:98  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_41: vy_out [3/5] 7.26ns
_ifconv:101  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_41: vz_out [3/5] 7.26ns
_ifconv:104  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 42>: 7.26ns
ST_42: uw_out [2/5] 7.26ns
_ifconv:83  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_42: ux_out [2/5] 7.26ns
_ifconv:86  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_42: uy_out [2/5] 7.26ns
_ifconv:89  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_42: uz_out [2/5] 7.26ns
_ifconv:92  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i

ST_42: vw_out [2/5] 7.26ns
_ifconv:95  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_42: vx_out [2/5] 7.26ns
_ifconv:98  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_42: vy_out [2/5] 7.26ns
_ifconv:101  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_42: vz_out [2/5] 7.26ns
_ifconv:104  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 43>: 7.26ns
ST_43: bottom_right_read [1/1] 0.00ns
_ifconv:12  %bottom_right_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %bottom_right)

ST_43: top_left_read [1/1] 0.00ns
_ifconv:13  %top_left_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %top_left)

ST_43: uw_out [1/5] 7.26ns
_ifconv:83  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_43: ux_out [1/5] 7.26ns
_ifconv:86  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_43: uy_out [1/5] 7.26ns
_ifconv:89  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_43: uz_out [1/5] 7.26ns
_ifconv:92  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i

ST_43: vw_out [1/5] 7.26ns
_ifconv:95  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_43: vx_out [1/5] 7.26ns
_ifconv:98  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_43: vy_out [1/5] 7.26ns
_ifconv:101  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_43: vz_out [1/5] 7.26ns
_ifconv:104  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1

ST_43: stg_352 [1/1] 1.57ns
_ifconv:105  br label %0


 <State 44>: 3.89ns
ST_44: off_row [1/1] 0.00ns
:0  %off_row = phi i10 [ 0, %_ifconv ], [ %off_row_2, %._crit_edge ]

ST_44: off_row_cast1 [1/1] 0.00ns
:1  %off_row_cast1 = zext i10 %off_row to i32

ST_44: exitcond [1/1] 2.07ns
:2  %exitcond = icmp eq i10 %off_row, -240

ST_44: empty [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)

ST_44: off_row_2 [1/1] 1.84ns
:4  %off_row_2 = add i10 %off_row, 1

ST_44: stg_358 [1/1] 0.00ns
:5  br i1 %exitcond, label %3, label %1

ST_44: stg_359 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1810) nounwind

ST_44: tmp_5 [1/1] 2.52ns
:1  %tmp_5 = icmp eq i32 %off_row_cast1, %bottom_right_read

ST_44: tmp_6 [1/1] 2.52ns
:2  %tmp_6 = icmp eq i32 %off_row_cast1, %top_left_read

ST_44: or_cond [1/1] 1.37ns
:3  %or_cond = or i1 %tmp_5, %tmp_6

ST_44: stg_363 [1/1] 0.00ns
:4  br i1 %or_cond, label %._crit_edge, label %2

ST_44: tmp_7 [1/1] 0.00ns
:0  %tmp_7 = zext i10 %off_row to i64

ST_44: v_row_temp_1_addr [1/1] 0.00ns
:1  %v_row_temp_1_addr = getelementptr [784 x float]* %v_row_temp_1, i64 0, i64 %tmp_7

ST_44: vx_in [2/2] 2.71ns
:2  %vx_in = load float* %v_row_temp_1_addr, align 4

ST_44: u_row_temp_1_addr [1/1] 0.00ns
:3  %u_row_temp_1_addr = getelementptr [784 x float]* %u_row_temp_1, i64 0, i64 %tmp_7

ST_44: ux_in [2/2] 2.71ns
:4  %ux_in = load float* %u_row_temp_1_addr, align 4

ST_44: v_row_temp_0_addr [1/1] 0.00ns
:5  %v_row_temp_0_addr = getelementptr [784 x float]* %v_row_temp_0, i64 0, i64 %tmp_7

ST_44: vw_in [2/2] 2.71ns
:6  %vw_in = load float* %v_row_temp_0_addr, align 4

ST_44: u_row_temp_0_addr [1/1] 0.00ns
:7  %u_row_temp_0_addr = getelementptr [784 x float]* %u_row_temp_0, i64 0, i64 %tmp_7

ST_44: uw_in [2/2] 2.71ns
:8  %uw_in = load float* %u_row_temp_0_addr, align 4

ST_44: newret1 [1/1] 0.00ns
:0  %newret1 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } undef, float %uw_out, 0

ST_44: newret3 [1/1] 0.00ns
:1  %newret3 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret1, float %ux_out, 1

ST_44: newret5 [1/1] 0.00ns
:2  %newret5 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret3, float %uy_out, 2

ST_44: newret7 [1/1] 0.00ns
:3  %newret7 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret5, float %uz_out, 3

ST_44: newret9 [1/1] 0.00ns
:4  %newret9 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret7, float %vw_out, 4

ST_44: newret [1/1] 0.00ns
:5  %newret = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret9, float %vx_out, 5

ST_44: newret8 [1/1] 0.00ns
:6  %newret8 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret, float %vy_out, 6

ST_44: newret2 [1/1] 0.00ns
:7  %newret2 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret8, float %vz_out, 7

ST_44: newret4 [1/1] 0.00ns
:8  %newret4 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret2, float %uz_new, 8

ST_44: newret6 [1/1] 0.00ns
:9  %newret6 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret4, float %ux_new, 9

ST_44: newret10 [1/1] 0.00ns
:10  %newret10 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret6, float %uy_int, 10

ST_44: newret11 [1/1] 0.00ns
:11  %newret11 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret10, float %uz_new, 11

ST_44: newret12 [1/1] 0.00ns
:12  %newret12 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret11, float %vw_int_3, 12

ST_44: newret13 [1/1] 0.00ns
:13  %newret13 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret12, float %vy_int_2, 13

ST_44: newret14 [1/1] 0.00ns
:14  %newret14 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret13, float %vx_int, 14

ST_44: newret15 [1/1] 0.00ns
:15  %newret15 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret14, float %vz_int, 15

ST_44: newret16 [1/1] 0.00ns
:16  %newret16 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret15, float %w_out, 16

ST_44: newret17 [1/1] 0.00ns
:17  %newret17 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret16, float %z_out_2, 17

ST_44: stg_391 [1/1] 0.00ns
:18  ret { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %newret17


 <State 45>: 8.41ns
ST_45: vx_in [1/2] 2.71ns
:2  %vx_in = load float* %v_row_temp_1_addr, align 4

ST_45: ux_in [1/2] 2.71ns
:4  %ux_in = load float* %u_row_temp_1_addr, align 4

ST_45: vw_in [1/2] 2.71ns
:6  %vw_in = load float* %v_row_temp_0_addr, align 4

ST_45: uw_in [1/2] 2.71ns
:8  %uw_in = load float* %u_row_temp_0_addr, align 4

ST_45: tmp_i1 [4/4] 5.70ns
:9  %tmp_i1 = fmul float %vw_in, %vw_int_3

ST_45: tmp_3_i10 [4/4] 5.70ns
:10  %tmp_3_i10 = fmul float %vx_in, %vx_int

ST_45: tmp_i2 [4/4] 5.70ns
:12  %tmp_i2 = fmul float %vw_in, %vy_int_2

ST_45: tmp_3_i11 [4/4] 5.70ns
:13  %tmp_3_i11 = fmul float %vx_in, %vz_int

ST_45: tmp_i10 [4/4] 5.70ns
:15  %tmp_i10 = fmul float %uw_in, %uz_new

ST_45: tmp_3_i12 [4/4] 5.70ns
:16  %tmp_3_i12 = fmul float %ux_in, %uy_int

ST_45: tmp_i11 [4/4] 5.70ns
:18  %tmp_i11 = fmul float %uw_in, %ux_new

ST_45: tmp_3_i13 [4/4] 5.70ns
:19  %tmp_3_i13 = fmul float %ux_in, %uz_new


 <State 46>: 5.70ns
ST_46: tmp_i1 [3/4] 5.70ns
:9  %tmp_i1 = fmul float %vw_in, %vw_int_3

ST_46: tmp_3_i10 [3/4] 5.70ns
:10  %tmp_3_i10 = fmul float %vx_in, %vx_int

ST_46: tmp_i2 [3/4] 5.70ns
:12  %tmp_i2 = fmul float %vw_in, %vy_int_2

ST_46: tmp_3_i11 [3/4] 5.70ns
:13  %tmp_3_i11 = fmul float %vx_in, %vz_int

ST_46: tmp_i10 [3/4] 5.70ns
:15  %tmp_i10 = fmul float %uw_in, %uz_new

ST_46: tmp_3_i12 [3/4] 5.70ns
:16  %tmp_3_i12 = fmul float %ux_in, %uy_int

ST_46: tmp_i11 [3/4] 5.70ns
:18  %tmp_i11 = fmul float %uw_in, %ux_new

ST_46: tmp_3_i13 [3/4] 5.70ns
:19  %tmp_3_i13 = fmul float %ux_in, %uz_new


 <State 47>: 5.70ns
ST_47: tmp_i1 [2/4] 5.70ns
:9  %tmp_i1 = fmul float %vw_in, %vw_int_3

ST_47: tmp_3_i10 [2/4] 5.70ns
:10  %tmp_3_i10 = fmul float %vx_in, %vx_int

ST_47: tmp_i2 [2/4] 5.70ns
:12  %tmp_i2 = fmul float %vw_in, %vy_int_2

ST_47: tmp_3_i11 [2/4] 5.70ns
:13  %tmp_3_i11 = fmul float %vx_in, %vz_int

ST_47: tmp_i10 [2/4] 5.70ns
:15  %tmp_i10 = fmul float %uw_in, %uz_new

ST_47: tmp_3_i12 [2/4] 5.70ns
:16  %tmp_3_i12 = fmul float %ux_in, %uy_int

ST_47: tmp_i11 [2/4] 5.70ns
:18  %tmp_i11 = fmul float %uw_in, %ux_new

ST_47: tmp_3_i13 [2/4] 5.70ns
:19  %tmp_3_i13 = fmul float %ux_in, %uz_new


 <State 48>: 5.70ns
ST_48: tmp_i1 [1/4] 5.70ns
:9  %tmp_i1 = fmul float %vw_in, %vw_int_3

ST_48: tmp_3_i10 [1/4] 5.70ns
:10  %tmp_3_i10 = fmul float %vx_in, %vx_int

ST_48: tmp_i2 [1/4] 5.70ns
:12  %tmp_i2 = fmul float %vw_in, %vy_int_2

ST_48: tmp_3_i11 [1/4] 5.70ns
:13  %tmp_3_i11 = fmul float %vx_in, %vz_int

ST_48: tmp_i10 [1/4] 5.70ns
:15  %tmp_i10 = fmul float %uw_in, %uz_new

ST_48: tmp_3_i12 [1/4] 5.70ns
:16  %tmp_3_i12 = fmul float %ux_in, %uy_int

ST_48: tmp_i11 [1/4] 5.70ns
:18  %tmp_i11 = fmul float %uw_in, %ux_new

ST_48: tmp_3_i13 [1/4] 5.70ns
:19  %tmp_3_i13 = fmul float %ux_in, %uz_new


 <State 49>: 7.26ns
ST_49: vw_out_1 [5/5] 7.26ns
:11  %vw_out_1 = fadd float %tmp_i1, %tmp_3_i10

ST_49: vx_out_1 [5/5] 7.26ns
:14  %vx_out_1 = fadd float %tmp_i2, %tmp_3_i11

ST_49: uw_out_1 [5/5] 7.26ns
:17  %uw_out_1 = fadd float %tmp_i10, %tmp_3_i12

ST_49: ux_out_1 [5/5] 7.26ns
:20  %ux_out_1 = fadd float %tmp_i11, %tmp_3_i13


 <State 50>: 7.26ns
ST_50: vw_out_1 [4/5] 7.26ns
:11  %vw_out_1 = fadd float %tmp_i1, %tmp_3_i10

ST_50: vx_out_1 [4/5] 7.26ns
:14  %vx_out_1 = fadd float %tmp_i2, %tmp_3_i11

ST_50: uw_out_1 [4/5] 7.26ns
:17  %uw_out_1 = fadd float %tmp_i10, %tmp_3_i12

ST_50: ux_out_1 [4/5] 7.26ns
:20  %ux_out_1 = fadd float %tmp_i11, %tmp_3_i13


 <State 51>: 7.26ns
ST_51: vw_out_1 [3/5] 7.26ns
:11  %vw_out_1 = fadd float %tmp_i1, %tmp_3_i10

ST_51: vx_out_1 [3/5] 7.26ns
:14  %vx_out_1 = fadd float %tmp_i2, %tmp_3_i11

ST_51: uw_out_1 [3/5] 7.26ns
:17  %uw_out_1 = fadd float %tmp_i10, %tmp_3_i12

ST_51: ux_out_1 [3/5] 7.26ns
:20  %ux_out_1 = fadd float %tmp_i11, %tmp_3_i13


 <State 52>: 7.26ns
ST_52: vw_out_1 [2/5] 7.26ns
:11  %vw_out_1 = fadd float %tmp_i1, %tmp_3_i10

ST_52: vx_out_1 [2/5] 7.26ns
:14  %vx_out_1 = fadd float %tmp_i2, %tmp_3_i11

ST_52: uw_out_1 [2/5] 7.26ns
:17  %uw_out_1 = fadd float %tmp_i10, %tmp_3_i12

ST_52: ux_out_1 [2/5] 7.26ns
:20  %ux_out_1 = fadd float %tmp_i11, %tmp_3_i13


 <State 53>: 7.26ns
ST_53: vw_out_1 [1/5] 7.26ns
:11  %vw_out_1 = fadd float %tmp_i1, %tmp_3_i10

ST_53: vx_out_1 [1/5] 7.26ns
:14  %vx_out_1 = fadd float %tmp_i2, %tmp_3_i11

ST_53: uw_out_1 [1/5] 7.26ns
:17  %uw_out_1 = fadd float %tmp_i10, %tmp_3_i12

ST_53: ux_out_1 [1/5] 7.26ns
:20  %ux_out_1 = fadd float %tmp_i11, %tmp_3_i13


 <State 54>: 2.71ns
ST_54: stg_448 [1/1] 2.71ns
:21  store float %vw_out_1, float* %v_row_temp_0_addr, align 4

ST_54: stg_449 [1/1] 2.71ns
:22  store float %vx_out_1, float* %v_row_temp_1_addr, align 4

ST_54: stg_450 [1/1] 2.71ns
:23  store float %uw_out_1, float* %u_row_temp_0_addr, align 4

ST_54: stg_451 [1/1] 2.71ns
:24  store float %ux_out_1, float* %u_row_temp_1_addr, align 4

ST_54: stg_452 [1/1] 0.00ns
:25  br label %._crit_edge

ST_54: stg_453 [1/1] 0.00ns
._crit_edge:0  br label %0



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
