

================================================================
== Vivado HLS Report for 'dut_svd_alt'
================================================================
* Date:           Tue Nov 29 11:30:16 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        pca.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.99|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------------+------------+------------+------------+---------+
    |         Latency         |         Interval        | Pipeline|
    |     min    |     max    |     min    |     max    |   Type  |
    +------------+------------+------------+------------+---------+
    |  8684710304|  8684710304|  8684710304|  8684710304|   none  |
    +------------+------------+------------+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------+------------+------------+------------+-----------+-----------+--------+----------+
        |                       |         Latency         |  Iteration |  Initiation Interval  |  Trip  |          |
        |       Loop Name       |     min    |     max    |   Latency  |  achieved |   target  |  Count | Pipelined|
        +-----------------------+------------+------------+------------+-----------+-----------+--------+----------+
        |- L_rd_buffer          |      614663|      614663|           9|          1|          1|  614656|    yes   |
        |- sweep_loop           |  8684095638|  8684095638|  1447349273|          -|          -|       6|    no    |
        | + sweep_loop.1        |         392|         392|           1|          -|          -|     392|    no    |
        | + sweep_loop.2        |  1447348878|  1447348878|     1848466|          -|          -|     783|    no    |
        |  ++ sweep_loop.2.1    |         780|         780|           2|          -|          -|     390|    no    |
        |  ++ sweep_loop.2.2    |         782|         782|           2|          -|          -|     391|    no    |
        |  ++ svd_rd_diag       |         789|         789|           8|          2|          1|     392|    yes   |
        |  ++ svd_calc_diag     |         521|         521|         131|          1|          1|     392|    yes   |
        |  ++ svd_wb_diag       |        1571|        1571|           8|          4|          1|     392|    yes   |
        |  ++ L_svd_rd_off_r    |      307333|      307333|           7|          1|          1|  307328|    yes   |
        |  ++ L_svd_calc_off_r  |      307339|      307339|          13|          1|          1|  307328|    yes   |
        |  ++ L_svd_wb_off_r    |      307332|      307332|           6|          1|          1|  307328|    yes   |
        |  ++ L_svd_rd_off_c    |      307333|      307333|           7|          1|          1|  307328|    yes   |
        |  ++ L_svd_calc_off_c  |      307339|      307339|          13|          1|          1|  307328|    yes   |
        |  ++ L_svd_wb_off_c    |      307332|      307332|           6|          1|          1|  307328|    yes   |
        +-----------------------+------------+------------+------------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9
  * Pipeline-1: initiation interval (II) = 2, depth = 8
  * Pipeline-2: initiation interval (II) = 1, depth = 131
  * Pipeline-3: initiation interval (II) = 4, depth = 8
  * Pipeline-4: initiation interval (II) = 1, depth = 7
  * Pipeline-5: initiation interval (II) = 1, depth = 13
  * Pipeline-6: initiation interval (II) = 1, depth = 6
  * Pipeline-7: initiation interval (II) = 1, depth = 7
  * Pipeline-8: initiation interval (II) = 1, depth = 13
  * Pipeline-9: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 220
* Pipeline: 10
  Pipeline-0: II = 1, D = 9, States = { 2 3 4 5 6 7 8 9 10 }
  Pipeline-1: II = 2, D = 8, States = { 21 22 23 24 25 26 27 28 }
  Pipeline-2: II = 1, D = 131, States = { 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 }
  Pipeline-3: II = 4, D = 8, States = { 160 161 162 163 164 165 166 167 }
  Pipeline-4: II = 1, D = 7, States = { 168 169 170 171 172 173 174 }
  Pipeline-5: II = 1, D = 13, States = { 175 176 177 178 179 180 181 182 183 184 185 186 187 }
  Pipeline-6: II = 1, D = 6, States = { 188 189 190 191 192 193 }
  Pipeline-7: II = 1, D = 7, States = { 194 195 196 197 198 199 200 }
  Pipeline-8: II = 1, D = 13, States = { 201 202 203 204 205 206 207 208 209 210 211 212 213 }
  Pipeline-9: II = 1, D = 6, States = { 214 215 216 217 218 219 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	11  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	2  / true
11 --> 
	12  / true
12 --> 
	13  / (!exitcond3)
13 --> 
	14  / (exitcond5)
	13  / (!exitcond5)
14 --> 
	15  / (!exitcond7)
	12  / (exitcond7)
15 --> 
	16  / true
16 --> 
	17  / (!exitcond9)
	18  / (exitcond9)
17 --> 
	16  / true
18 --> 
	19  / true
19 --> 
	20  / (!tmp_5)
	21  / (tmp_5)
20 --> 
	19  / true
21 --> 
	29  / (exitcond1)
	22  / (!exitcond1)
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	21  / true
29 --> 
	30  / true
30 --> 
	160  / (exitcond2)
	31  / (!exitcond2)
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	29  / true
160 --> 
	168  / (exitcond4)
	161  / (!exitcond4)
161 --> 
	162  / true
162 --> 
	163  / true
163 --> 
	164  / true
164 --> 
	165  / true
165 --> 
	166  / true
166 --> 
	167  / true
167 --> 
	160  / true
168 --> 
	169  / true
169 --> 
	170  / true
170 --> 
	175  / (exitcond_flatten1)
	171  / (!exitcond_flatten1)
171 --> 
	172  / true
172 --> 
	173  / true
173 --> 
	174  / true
174 --> 
	168  / true
175 --> 
	176  / true
176 --> 
	177  / true
177 --> 
	188  / (exitcond_flatten2)
	178  / (!exitcond_flatten2)
178 --> 
	179  / true
179 --> 
	180  / true
180 --> 
	181  / true
181 --> 
	182  / true
182 --> 
	183  / true
183 --> 
	184  / true
184 --> 
	185  / true
185 --> 
	186  / true
186 --> 
	187  / true
187 --> 
	175  / true
188 --> 
	189  / true
189 --> 
	190  / true
190 --> 
	194  / (exitcond_flatten3)
	191  / (!exitcond_flatten3)
191 --> 
	192  / true
192 --> 
	193  / true
193 --> 
	188  / true
194 --> 
	195  / true
195 --> 
	196  / true
196 --> 
	201  / (exitcond_flatten4)
	197  / (!exitcond_flatten4)
197 --> 
	198  / true
198 --> 
	199  / true
199 --> 
	200  / true
200 --> 
	194  / true
201 --> 
	202  / true
202 --> 
	203  / true
203 --> 
	214  / (exitcond_flatten5)
	204  / (!exitcond_flatten5)
204 --> 
	205  / true
205 --> 
	206  / true
206 --> 
	207  / true
207 --> 
	208  / true
208 --> 
	209  / true
209 --> 
	210  / true
210 --> 
	211  / true
211 --> 
	212  / true
212 --> 
	213  / true
213 --> 
	201  / true
214 --> 
	215  / true
215 --> 
	220  / (exitcond_flatten6)
	216  / (!exitcond_flatten6)
216 --> 
	217  / true
217 --> 
	218  / true
218 --> 
	219  / true
219 --> 
	214  / true
220 --> 
	14  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: diag_1 [1/1] 0.00ns
:0  %diag_1 = alloca [392 x i32], align 16

ST_1: diag_2 [1/1] 0.00ns
:1  %diag_2 = alloca [392 x i32], align 16

ST_1: S_block_buffer_0_0 [1/1] 0.00ns
:2  %S_block_buffer_0_0 = alloca [392 x float], align 16

ST_1: S_block_buffer_0_1 [1/1] 0.00ns
:3  %S_block_buffer_0_1 = alloca [392 x float], align 16

ST_1: S_block_buffer_1_0 [1/1] 0.00ns
:4  %S_block_buffer_1_0 = alloca [392 x float], align 16

ST_1: S_block_buffer_1_1 [1/1] 0.00ns
:5  %S_block_buffer_1_1 = alloca [392 x float], align 16

ST_1: U_block_buffer_0_0 [1/1] 0.00ns
:6  %U_block_buffer_0_0 = alloca [392 x float], align 16

ST_1: U_block_buffer_0_1 [1/1] 0.00ns
:7  %U_block_buffer_0_1 = alloca [392 x float], align 16

ST_1: U_block_buffer_1_0 [1/1] 0.00ns
:8  %U_block_buffer_1_0 = alloca [392 x float], align 16

ST_1: U_block_buffer_1_1 [1/1] 0.00ns
:9  %U_block_buffer_1_1 = alloca [392 x float], align 16

ST_1: V_block_buffer_0_0 [1/1] 0.00ns
:10  %V_block_buffer_0_0 = alloca [392 x float], align 16

ST_1: V_block_buffer_0_1 [1/1] 0.00ns
:11  %V_block_buffer_0_1 = alloca [392 x float], align 16

ST_1: V_block_buffer_1_0 [1/1] 0.00ns
:12  %V_block_buffer_1_0 = alloca [392 x float], align 16

ST_1: V_block_buffer_1_1 [1/1] 0.00ns
:13  %V_block_buffer_1_1 = alloca [392 x float], align 16

ST_1: S_r_buffer_0 [1/1] 0.00ns
:14  %S_r_buffer_0 = alloca [307328 x float], align 4

ST_1: S_r_buffer_1 [1/1] 0.00ns
:15  %S_r_buffer_1 = alloca [307328 x float], align 4

ST_1: S_c_buffer_0 [1/1] 0.00ns
:16  %S_c_buffer_0 = alloca [307328 x float], align 4

ST_1: S_c_buffer_1 [1/1] 0.00ns
:17  %S_c_buffer_1 = alloca [307328 x float], align 4

ST_1: U_c_buffer_0 [1/1] 0.00ns
:18  %U_c_buffer_0 = alloca [307328 x float], align 4

ST_1: U_c_buffer_1 [1/1] 0.00ns
:19  %U_c_buffer_1 = alloca [307328 x float], align 4

ST_1: V_c_buffer_0 [1/1] 0.00ns
:20  %V_c_buffer_0 = alloca [307328 x float], align 4

ST_1: V_c_buffer_1 [1/1] 0.00ns
:21  %V_c_buffer_1 = alloca [307328 x float], align 4

ST_1: J2x2_0_0 [1/1] 0.00ns
:22  %J2x2_0_0 = alloca [392 x float], align 16

ST_1: J2x2_0_1 [1/1] 0.00ns
:23  %J2x2_0_1 = alloca [392 x float], align 16

ST_1: J2x2_1_0 [1/1] 0.00ns
:24  %J2x2_1_0 = alloca [392 x float], align 16

ST_1: J2x2_1_1 [1/1] 0.00ns
:25  %J2x2_1_1 = alloca [392 x float], align 16

ST_1: K2x2_0_0 [1/1] 0.00ns
:26  %K2x2_0_0 = alloca [392 x float], align 16

ST_1: K2x2_0_1 [1/1] 0.00ns
:27  %K2x2_0_1 = alloca [392 x float], align 16

ST_1: K2x2_1_0 [1/1] 0.00ns
:28  %K2x2_1_0 = alloca [392 x float], align 16

ST_1: K2x2_1_1 [1/1] 0.00ns
:29  %K2x2_1_1 = alloca [392 x float], align 16

ST_1: stg_251 [1/1] 1.57ns
:30  br label %.preheader36


 <State 2>: 5.28ns
ST_2: indvar_flatten [1/1] 0.00ns
.preheader36:0  %indvar_flatten = phi i20 [ 0, %0 ], [ %indvar_flatten_next, %.preheader36.preheader ]

ST_2: i [1/1] 0.00ns
.preheader36:1  %i = phi i10 [ 0, %0 ], [ %tmp_mid2_v, %.preheader36.preheader ]

ST_2: j [1/1] 0.00ns
.preheader36:2  %j = phi i10 [ 0, %0 ], [ %j_1, %.preheader36.preheader ]

ST_2: exitcond_flatten [1/1] 2.34ns
.preheader36:3  %exitcond_flatten = icmp eq i20 %indvar_flatten, -433920

ST_2: indvar_flatten_next [1/1] 2.08ns
.preheader36:4  %indvar_flatten_next = add i20 %indvar_flatten, 1

ST_2: stg_257 [1/1] 0.00ns
.preheader36:5  br i1 %exitcond_flatten, label %.preheader35.preheader, label %.preheader36.preheader

ST_2: i_1 [1/1] 1.84ns
.preheader36.preheader:0  %i_1 = add i10 %i, 1

ST_2: exitcond [1/1] 2.07ns
.preheader36.preheader:3  %exitcond = icmp eq i10 %j, -240

ST_2: j_mid2 [1/1] 1.37ns
.preheader36.preheader:4  %j_mid2 = select i1 %exitcond, i10 0, i10 %j

ST_2: tmp_mid2_v [1/1] 1.37ns
.preheader36.preheader:5  %tmp_mid2_v = select i1 %exitcond, i10 %i_1, i10 %i

ST_2: j_1 [1/1] 1.84ns
.preheader36.preheader:26  %j_1 = add i10 %j_mid2, 1


 <State 3>: 8.48ns
ST_3: tmp_7 [1/1] 2.07ns
.preheader36.preheader:20  %tmp_7 = icmp eq i10 %tmp_mid2_v, %j_mid2

ST_3: tmp_8 [1/1] 0.00ns
.preheader36.preheader:21  %tmp_8 = zext i1 %tmp_7 to i32

ST_3: tmp_9 [6/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 4>: 6.41ns
ST_4: tmp_9 [5/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 5>: 6.41ns
ST_5: tmp_9 [4/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 6>: 8.99ns
ST_6: tmp_mid2_cast [1/1] 0.00ns
.preheader36.preheader:6  %tmp_mid2_cast = zext i10 %tmp_mid2_v to i20

ST_6: tmp [1/1] 3.36ns
.preheader36.preheader:7  %tmp = mul i20 %tmp_mid2_cast, 784

ST_6: tmp_6_cast [1/1] 0.00ns
.preheader36.preheader:11  %tmp_6_cast = zext i10 %j_mid2 to i20

ST_6: tmp_17 [1/1] 3.02ns
.preheader36.preheader:12  %tmp_17 = add i20 %tmp, %tmp_6_cast

ST_6: tmp_86_cast [1/1] 0.00ns
.preheader36.preheader:13  %tmp_86_cast = zext i20 %tmp_17 to i64

ST_6: A_addr [1/1] 0.00ns
.preheader36.preheader:14  %A_addr = getelementptr [614656 x float]* %A, i64 0, i64 %tmp_86_cast

ST_6: A_load [4/4] 2.61ns
.preheader36.preheader:18  %A_load = load float* %A_addr, align 4

ST_6: tmp_9 [3/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 7>: 6.41ns
ST_7: A_load [3/4] 2.61ns
.preheader36.preheader:18  %A_load = load float* %A_addr, align 4

ST_7: tmp_9 [2/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 8>: 6.41ns
ST_8: A_load [2/4] 2.61ns
.preheader36.preheader:18  %A_load = load float* %A_addr, align 4

ST_8: tmp_9 [1/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 9>: 5.22ns
ST_9: S_addr [1/1] 0.00ns
.preheader36.preheader:15  %S_addr = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_86_cast

ST_9: U_addr [1/1] 0.00ns
.preheader36.preheader:16  %U_addr = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_86_cast

ST_9: V_addr [1/1] 0.00ns
.preheader36.preheader:17  %V_addr = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_86_cast

ST_9: A_load [1/4] 2.61ns
.preheader36.preheader:18  %A_load = load float* %A_addr, align 4

ST_9: stg_284 [2/2] 2.61ns
.preheader36.preheader:19  store float %A_load, float* %S_addr, align 4

ST_9: stg_285 [2/2] 2.61ns
.preheader36.preheader:23  store float %tmp_9, float* %U_addr, align 4

ST_9: stg_286 [2/2] 2.61ns
.preheader36.preheader:24  store float %tmp_9, float* %V_addr, align 4


 <State 10>: 2.61ns
ST_10: stg_287 [1/1] 0.00ns
.preheader36.preheader:1  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @L_rd_buffer_str)

ST_10: empty [1/1] 0.00ns
.preheader36.preheader:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 614656, i64 614656, i64 614656)

ST_10: stg_289 [1/1] 0.00ns
.preheader36.preheader:8  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str1805) nounwind

ST_10: tmp_6 [1/1] 0.00ns
.preheader36.preheader:9  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str1805)

ST_10: stg_291 [1/1] 0.00ns
.preheader36.preheader:10  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_10: stg_292 [1/2] 2.61ns
.preheader36.preheader:19  store float %A_load, float* %S_addr, align 4

ST_10: stg_293 [1/2] 2.61ns
.preheader36.preheader:23  store float %tmp_9, float* %U_addr, align 4

ST_10: stg_294 [1/2] 2.61ns
.preheader36.preheader:24  store float %tmp_9, float* %V_addr, align 4

ST_10: empty_6 [1/1] 0.00ns
.preheader36.preheader:25  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str1805, i32 %tmp_6)

ST_10: stg_296 [1/1] 0.00ns
.preheader36.preheader:27  br label %.preheader36


 <State 11>: 1.57ns
ST_11: bottom_right [1/1] 0.00ns
.preheader35.preheader:0  %bottom_right = alloca i32

ST_11: top_left [1/1] 0.00ns
.preheader35.preheader:1  %top_left = alloca i32

ST_11: diag_1_addr [1/1] 0.00ns
.preheader35.preheader:2  %diag_1_addr = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 1

ST_11: diag_2_addr [1/1] 0.00ns
.preheader35.preheader:3  %diag_2_addr = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 391

ST_11: diag_1_addr_1 [1/1] 0.00ns
.preheader35.preheader:4  %diag_1_addr_1 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 391

ST_11: diag_2_addr_1 [1/1] 0.00ns
.preheader35.preheader:5  %diag_2_addr_1 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 0

ST_11: stg_303 [1/1] 1.57ns
.preheader35.preheader:6  br label %.preheader35


 <State 12>: 1.62ns
ST_12: sweepnum [1/1] 0.00ns
.preheader35:0  %sweepnum = phi i3 [ 0, %.preheader35.preheader ], [ %sweepnum_1, %29 ]

ST_12: exitcond3 [1/1] 1.62ns
.preheader35:1  %exitcond3 = icmp eq i3 %sweepnum, -2

ST_12: sweepnum_1 [1/1] 0.80ns
.preheader35:2  %sweepnum_1 = add i3 %sweepnum, 1

ST_12: stg_307 [1/1] 0.00ns
.preheader35:3  br i1 %exitcond3, label %30, label %1

ST_12: empty_7 [1/1] 0.00ns
:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_12: stg_309 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1807) nounwind

ST_12: tmp_18 [1/1] 0.00ns
:2  %tmp_18 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1807)

ST_12: stg_311 [1/1] 1.57ns
:3  br label %2

ST_12: stg_312 [1/1] 0.00ns
:0  ret void


 <State 13>: 3.60ns
ST_13: proc [1/1] 0.00ns
:0  %proc = phi i9 [ 0, %1 ], [ %proc_1, %3 ]

ST_13: exitcond5 [1/1] 2.03ns
:1  %exitcond5 = icmp eq i9 %proc, -120

ST_13: empty_8 [1/1] 0.00ns
:2  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 392, i64 392, i64 392)

ST_13: proc_1 [1/1] 1.84ns
:3  %proc_1 = add i9 %proc, 1

ST_13: stg_317 [1/1] 1.57ns
:4  br i1 %exitcond5, label %.preheader34, label %3

ST_13: tmp_s [1/1] 0.00ns
:0  %tmp_s = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %proc, i1 false)

ST_13: tmp_cast [1/1] 0.00ns
:1  %tmp_cast = zext i10 %tmp_s to i32

ST_13: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = zext i9 %proc to i64

ST_13: diag_1_addr_2 [1/1] 0.00ns
:3  %diag_1_addr_2 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_1

ST_13: stg_322 [1/1] 2.71ns
:4  store i32 %tmp_cast, i32* %diag_1_addr_2, align 4

ST_13: tmp_2 [1/1] 0.00ns
:5  %tmp_2 = or i10 %tmp_s, 1

ST_13: tmp_2_cast [1/1] 0.00ns
:6  %tmp_2_cast = zext i10 %tmp_2 to i32

ST_13: diag_2_addr_2 [1/1] 0.00ns
:7  %diag_2_addr_2 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_1

ST_13: stg_326 [1/1] 2.71ns
:8  store i32 %tmp_2_cast, i32* %diag_2_addr_2, align 4

ST_13: stg_327 [1/1] 0.00ns
:9  br label %2


 <State 14>: 2.71ns
ST_14: step [1/1] 0.00ns
.preheader34:0  %step = phi i10 [ %step_1, %.preheader34.loopexit ], [ 0, %2 ]

ST_14: bottom_right_load [1/1] 0.00ns
.preheader34:1  %bottom_right_load = load i32* %bottom_right

ST_14: top_left_load [1/1] 0.00ns
.preheader34:2  %top_left_load = load i32* %top_left

ST_14: exitcond7 [1/1] 2.07ns
.preheader34:3  %exitcond7 = icmp eq i10 %step, -241

ST_14: step_1 [1/1] 1.84ns
.preheader34:4  %step_1 = add i10 %step, 1

ST_14: stg_333 [1/1] 0.00ns
.preheader34:5  br i1 %exitcond7, label %29, label %4

ST_14: temp_diag [2/2] 2.71ns
:1  %temp_diag = load i32* %diag_1_addr, align 4

ST_14: empty_30 [1/1] 0.00ns
:0  %empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1807, i32 %tmp_18)

ST_14: stg_336 [1/1] 0.00ns
:1  br label %.preheader35


 <State 15>: 2.71ns
ST_15: empty_9 [1/1] 0.00ns
:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 783, i64 783, i64 783)

ST_15: temp_diag [1/2] 2.71ns
:1  %temp_diag = load i32* %diag_1_addr, align 4

ST_15: stg_339 [1/1] 1.57ns
:2  br label %5


 <State 16>: 4.55ns
ST_16: proc1 [1/1] 0.00ns
:0  %proc1 = phi i9 [ 1, %4 ], [ %proc_2, %6 ]

ST_16: exitcond9 [1/1] 2.03ns
:1  %exitcond9 = icmp eq i9 %proc1, -121

ST_16: empty_10 [1/1] 0.00ns
:2  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 390, i64 390, i64 390)

ST_16: stg_343 [1/1] 0.00ns
:3  br i1 %exitcond9, label %7, label %6

ST_16: proc_2 [1/1] 1.84ns
:0  %proc_2 = add i9 %proc1, 1

ST_16: tmp_3 [1/1] 0.00ns
:1  %tmp_3 = zext i9 %proc_2 to i64

ST_16: diag_1_addr_3 [1/1] 0.00ns
:2  %diag_1_addr_3 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_3

ST_16: diag_1_load [2/2] 2.71ns
:3  %diag_1_load = load i32* %diag_1_addr_3, align 4

ST_16: diag_2_load [2/2] 2.71ns
:0  %diag_2_load = load i32* %diag_2_addr, align 4


 <State 17>: 5.42ns
ST_17: diag_1_load [1/2] 2.71ns
:3  %diag_1_load = load i32* %diag_1_addr_3, align 4

ST_17: tmp_4 [1/1] 0.00ns
:4  %tmp_4 = zext i9 %proc1 to i64

ST_17: diag_1_addr_4 [1/1] 0.00ns
:5  %diag_1_addr_4 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_4

ST_17: stg_352 [1/1] 2.71ns
:6  store i32 %diag_1_load, i32* %diag_1_addr_4, align 4

ST_17: stg_353 [1/1] 0.00ns
:7  br label %5


 <State 18>: 5.42ns
ST_18: diag_2_load [1/2] 2.71ns
:0  %diag_2_load = load i32* %diag_2_addr, align 4

ST_18: stg_355 [1/1] 2.71ns
:1  store i32 %diag_2_load, i32* %diag_1_addr_1, align 4

ST_18: stg_356 [1/1] 1.57ns
:2  br label %8


 <State 19>: 4.55ns
ST_19: proc2 [1/1] 0.00ns
:0  %proc2 = phi i9 [ -121, %7 ], [ %proc_3, %9 ]

ST_19: tmp_5 [1/1] 2.03ns
:1  %tmp_5 = icmp eq i9 %proc2, 0

ST_19: empty_11 [1/1] 0.00ns
:2  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 391, i64 391, i64 391)

ST_19: stg_360 [1/1] 0.00ns
:3  br i1 %tmp_5, label %10, label %9

ST_19: proc_3 [1/1] 1.84ns
:0  %proc_3 = add i9 %proc2, -1

ST_19: tmp_10 [1/1] 0.00ns
:1  %tmp_10 = zext i9 %proc_3 to i64

ST_19: diag_2_addr_3 [1/1] 0.00ns
:2  %diag_2_addr_3 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_10

ST_19: diag_2_load_1 [2/2] 2.71ns
:3  %diag_2_load_1 = load i32* %diag_2_addr_3, align 4

ST_19: stg_365 [1/1] 2.71ns
:0  store i32 %temp_diag, i32* %diag_2_addr_1, align 16

ST_19: stg_366 [1/1] 1.57ns
:1  br label %11


 <State 20>: 5.42ns
ST_20: diag_2_load_1 [1/2] 2.71ns
:3  %diag_2_load_1 = load i32* %diag_2_addr_3, align 4

ST_20: tmp_11 [1/1] 0.00ns
:4  %tmp_11 = zext i9 %proc2 to i64

ST_20: diag_2_addr_4 [1/1] 0.00ns
:5  %diag_2_addr_4 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_11

ST_20: stg_370 [1/1] 2.71ns
:6  store i32 %diag_2_load_1, i32* %diag_2_addr_4, align 4

ST_20: stg_371 [1/1] 0.00ns
:7  br label %8


 <State 21>: 3.60ns
ST_21: top_left_2 [1/1] 0.00ns
:0  %top_left_2 = phi i32 [ %top_left_load, %10 ], [ %top_left_1, %._crit_edge ]

ST_21: bottom_right_2 [1/1] 0.00ns
:1  %bottom_right_2 = phi i32 [ %bottom_right_load, %10 ], [ %bottom_right_1, %._crit_edge ]

ST_21: proc3 [1/1] 0.00ns
:2  %proc3 = phi i9 [ 0, %10 ], [ %proc_4, %._crit_edge ]

ST_21: exitcond1 [1/1] 2.03ns
:3  %exitcond1 = icmp eq i9 %proc3, -120

ST_21: proc_4 [1/1] 1.84ns
:4  %proc_4 = add i9 %proc3, 1

ST_21: stg_377 [1/1] 1.57ns
:5  br i1 %exitcond1, label %.preheader33, label %12

ST_21: tmp_12 [1/1] 0.00ns
:4  %tmp_12 = zext i9 %proc3 to i64

ST_21: diag_1_addr_5 [1/1] 0.00ns
:5  %diag_1_addr_5 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_12

ST_21: diag_1_load_2 [2/2] 2.71ns
:6  %diag_1_load_2 = load i32* %diag_1_addr_5, align 4

ST_21: diag_2_addr_5 [1/1] 0.00ns
:7  %diag_2_addr_5 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_12

ST_21: diag_2_load_2 [2/2] 2.71ns
:8  %diag_2_load_2 = load i32* %diag_2_addr_5, align 4

ST_21: stg_383 [1/1] 0.00ns
._crit_edge:0  br label %11


 <State 22>: 6.60ns
ST_22: diag_1_load_2 [1/2] 2.71ns
:6  %diag_1_load_2 = load i32* %diag_1_addr_5, align 4

ST_22: diag_2_load_2 [1/2] 2.71ns
:8  %diag_2_load_2 = load i32* %diag_2_addr_5, align 4

ST_22: tmp_i [1/1] 2.52ns
:9  %tmp_i = icmp sgt i32 %diag_1_load_2, %diag_2_load_2

ST_22: top_left_1 [1/1] 1.37ns
:10  %top_left_1 = select i1 %tmp_i, i32 %diag_2_load_2, i32 %diag_1_load_2

ST_22: bottom_right_1 [1/1] 1.37ns
:11  %bottom_right_1 = select i1 %tmp_i, i32 %diag_1_load_2, i32 %diag_2_load_2


 <State 23>: 6.38ns
ST_23: empty_12 [1/1] 0.00ns
:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 392, i64 392, i64 392)

ST_23: stg_390 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1808) nounwind

ST_23: tmp_22 [1/1] 0.00ns
:2  %tmp_22 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1808)

ST_23: stg_392 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_23: tmp_13 [1/1] 2.52ns
:12  %tmp_13 = icmp eq i32 %top_left_1, 784

ST_23: tmp_14 [1/1] 2.52ns
:13  %tmp_14 = icmp eq i32 %bottom_right_1, 784

ST_23: or_cond6 [1/1] 1.37ns
:14  %or_cond6 = or i1 %tmp_13, %tmp_14

ST_23: stg_396 [1/1] 0.00ns
:15  br i1 %or_cond6, label %._crit_edge, label %13

ST_23: tmp_24 [1/1] 0.00ns
:0  %tmp_24 = trunc i32 %top_left_1 to i21

ST_23: tmp_25 [1/1] 6.38ns
:1  %tmp_25 = mul i21 784, %tmp_24

ST_23: tmp_29 [1/1] 0.00ns
:16  %tmp_29 = trunc i32 %bottom_right_1 to i21


 <State 24>: 6.38ns
ST_24: tmp_28 [1/1] 2.20ns
:2  %tmp_28 = add i21 %tmp_25, %tmp_24

ST_24: tmp_88_cast [1/1] 0.00ns
:3  %tmp_88_cast = sext i21 %tmp_28 to i64

ST_24: S_addr_1 [1/1] 0.00ns
:4  %S_addr_1 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_88_cast

ST_24: U_addr_1 [1/1] 0.00ns
:5  %U_addr_1 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_88_cast

ST_24: V_addr_1 [1/1] 0.00ns
:6  %V_addr_1 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_88_cast

ST_24: S_load [4/4] 2.61ns
:7  %S_load = load float* %S_addr_1, align 4

ST_24: U_load [4/4] 2.61ns
:10  %U_load = load float* %U_addr_1, align 4

ST_24: V_load [4/4] 2.61ns
:13  %V_load = load float* %V_addr_1, align 4

ST_24: tmp_44 [1/1] 2.20ns
:17  %tmp_44 = add i21 %tmp_25, %tmp_29

ST_24: tmp_89_cast [1/1] 0.00ns
:18  %tmp_89_cast = sext i21 %tmp_44 to i64

ST_24: S_addr_2 [1/1] 0.00ns
:19  %S_addr_2 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_89_cast

ST_24: tmp_45 [1/1] 6.38ns
:20  %tmp_45 = mul i21 784, %tmp_29

ST_24: U_addr_2 [1/1] 0.00ns
:27  %U_addr_2 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_89_cast

ST_24: V_addr_2 [1/1] 0.00ns
:30  %V_addr_2 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_89_cast

ST_24: S_load_1 [4/4] 2.61ns
:33  %S_load_1 = load float* %S_addr_2, align 4

ST_24: U_load_1 [4/4] 2.61ns
:36  %U_load_1 = load float* %U_addr_2, align 4

ST_24: V_load_1 [4/4] 2.61ns
:39  %V_load_1 = load float* %V_addr_2, align 4


 <State 25>: 4.81ns
ST_25: S_load [3/4] 2.61ns
:7  %S_load = load float* %S_addr_1, align 4

ST_25: U_load [3/4] 2.61ns
:10  %U_load = load float* %U_addr_1, align 4

ST_25: V_load [3/4] 2.61ns
:13  %V_load = load float* %V_addr_1, align 4

ST_25: tmp_46 [1/1] 2.20ns
:21  %tmp_46 = add i21 %tmp_45, %tmp_24

ST_25: tmp_91_cast [1/1] 0.00ns
:22  %tmp_91_cast = sext i21 %tmp_46 to i64

ST_25: S_addr_3 [1/1] 0.00ns
:23  %S_addr_3 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_91_cast

ST_25: tmp_53 [1/1] 2.20ns
:24  %tmp_53 = add i21 %tmp_45, %tmp_29

ST_25: tmp_92_cast [1/1] 0.00ns
:25  %tmp_92_cast = sext i21 %tmp_53 to i64

ST_25: S_addr_4 [1/1] 0.00ns
:26  %S_addr_4 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_92_cast

ST_25: U_addr_3 [1/1] 0.00ns
:28  %U_addr_3 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_91_cast

ST_25: U_addr_4 [1/1] 0.00ns
:29  %U_addr_4 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_92_cast

ST_25: V_addr_3 [1/1] 0.00ns
:31  %V_addr_3 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_91_cast

ST_25: V_addr_4 [1/1] 0.00ns
:32  %V_addr_4 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_92_cast

ST_25: S_load_1 [3/4] 2.61ns
:33  %S_load_1 = load float* %S_addr_2, align 4

ST_25: U_load_1 [3/4] 2.61ns
:36  %U_load_1 = load float* %U_addr_2, align 4

ST_25: V_load_1 [3/4] 2.61ns
:39  %V_load_1 = load float* %V_addr_2, align 4

ST_25: S_load_2 [4/4] 2.61ns
:42  %S_load_2 = load float* %S_addr_3, align 4

ST_25: U_load_2 [4/4] 2.61ns
:45  %U_load_2 = load float* %U_addr_3, align 4

ST_25: V_load_2 [4/4] 2.61ns
:48  %V_load_2 = load float* %V_addr_3, align 4

ST_25: S_load_3 [4/4] 2.61ns
:51  %S_load_3 = load float* %S_addr_4, align 4

ST_25: U_load_3 [4/4] 2.61ns
:54  %U_load_3 = load float* %U_addr_4, align 4

ST_25: V_load_3 [4/4] 2.61ns
:57  %V_load_3 = load float* %V_addr_4, align 4


 <State 26>: 2.61ns
ST_26: S_load [2/4] 2.61ns
:7  %S_load = load float* %S_addr_1, align 4

ST_26: U_load [2/4] 2.61ns
:10  %U_load = load float* %U_addr_1, align 4

ST_26: V_load [2/4] 2.61ns
:13  %V_load = load float* %V_addr_1, align 4

ST_26: S_load_1 [2/4] 2.61ns
:33  %S_load_1 = load float* %S_addr_2, align 4

ST_26: U_load_1 [2/4] 2.61ns
:36  %U_load_1 = load float* %U_addr_2, align 4

ST_26: V_load_1 [2/4] 2.61ns
:39  %V_load_1 = load float* %V_addr_2, align 4

ST_26: S_load_2 [3/4] 2.61ns
:42  %S_load_2 = load float* %S_addr_3, align 4

ST_26: U_load_2 [3/4] 2.61ns
:45  %U_load_2 = load float* %U_addr_3, align 4

ST_26: V_load_2 [3/4] 2.61ns
:48  %V_load_2 = load float* %V_addr_3, align 4

ST_26: S_load_3 [3/4] 2.61ns
:51  %S_load_3 = load float* %S_addr_4, align 4

ST_26: U_load_3 [3/4] 2.61ns
:54  %U_load_3 = load float* %U_addr_4, align 4

ST_26: V_load_3 [3/4] 2.61ns
:57  %V_load_3 = load float* %V_addr_4, align 4


 <State 27>: 5.32ns
ST_27: S_load [1/4] 2.61ns
:7  %S_load = load float* %S_addr_1, align 4

ST_27: S_block_buffer_0_0_addr [1/1] 0.00ns
:8  %S_block_buffer_0_0_addr = getelementptr [392 x float]* %S_block_buffer_0_0, i64 0, i64 %tmp_12

ST_27: stg_453 [1/1] 2.71ns
:9  store float %S_load, float* %S_block_buffer_0_0_addr, align 16

ST_27: U_load [1/4] 2.61ns
:10  %U_load = load float* %U_addr_1, align 4

ST_27: U_block_buffer_0_0_addr [1/1] 0.00ns
:11  %U_block_buffer_0_0_addr = getelementptr [392 x float]* %U_block_buffer_0_0, i64 0, i64 %tmp_12

ST_27: stg_456 [1/1] 2.71ns
:12  store float %U_load, float* %U_block_buffer_0_0_addr, align 16

ST_27: V_load [1/4] 2.61ns
:13  %V_load = load float* %V_addr_1, align 4

ST_27: V_block_buffer_0_0_addr [1/1] 0.00ns
:14  %V_block_buffer_0_0_addr = getelementptr [392 x float]* %V_block_buffer_0_0, i64 0, i64 %tmp_12

ST_27: stg_459 [1/1] 2.71ns
:15  store float %V_load, float* %V_block_buffer_0_0_addr, align 16

ST_27: S_load_1 [1/4] 2.61ns
:33  %S_load_1 = load float* %S_addr_2, align 4

ST_27: S_block_buffer_0_1_addr [1/1] 0.00ns
:34  %S_block_buffer_0_1_addr = getelementptr [392 x float]* %S_block_buffer_0_1, i64 0, i64 %tmp_12

ST_27: stg_462 [1/1] 2.71ns
:35  store float %S_load_1, float* %S_block_buffer_0_1_addr, align 4

ST_27: U_load_1 [1/4] 2.61ns
:36  %U_load_1 = load float* %U_addr_2, align 4

ST_27: U_block_buffer_0_1_addr [1/1] 0.00ns
:37  %U_block_buffer_0_1_addr = getelementptr [392 x float]* %U_block_buffer_0_1, i64 0, i64 %tmp_12

ST_27: stg_465 [1/1] 2.71ns
:38  store float %U_load_1, float* %U_block_buffer_0_1_addr, align 4

ST_27: V_load_1 [1/4] 2.61ns
:39  %V_load_1 = load float* %V_addr_2, align 4

ST_27: V_block_buffer_0_1_addr [1/1] 0.00ns
:40  %V_block_buffer_0_1_addr = getelementptr [392 x float]* %V_block_buffer_0_1, i64 0, i64 %tmp_12

ST_27: stg_468 [1/1] 2.71ns
:41  store float %V_load_1, float* %V_block_buffer_0_1_addr, align 4

ST_27: S_load_2 [2/4] 2.61ns
:42  %S_load_2 = load float* %S_addr_3, align 4

ST_27: U_load_2 [2/4] 2.61ns
:45  %U_load_2 = load float* %U_addr_3, align 4

ST_27: V_load_2 [2/4] 2.61ns
:48  %V_load_2 = load float* %V_addr_3, align 4

ST_27: S_load_3 [2/4] 2.61ns
:51  %S_load_3 = load float* %S_addr_4, align 4

ST_27: U_load_3 [2/4] 2.61ns
:54  %U_load_3 = load float* %U_addr_4, align 4

ST_27: V_load_3 [2/4] 2.61ns
:57  %V_load_3 = load float* %V_addr_4, align 4


 <State 28>: 5.32ns
ST_28: S_load_2 [1/4] 2.61ns
:42  %S_load_2 = load float* %S_addr_3, align 4

ST_28: S_block_buffer_1_0_addr [1/1] 0.00ns
:43  %S_block_buffer_1_0_addr = getelementptr [392 x float]* %S_block_buffer_1_0, i64 0, i64 %tmp_12

ST_28: stg_477 [1/1] 2.71ns
:44  store float %S_load_2, float* %S_block_buffer_1_0_addr, align 8

ST_28: U_load_2 [1/4] 2.61ns
:45  %U_load_2 = load float* %U_addr_3, align 4

ST_28: U_block_buffer_1_0_addr [1/1] 0.00ns
:46  %U_block_buffer_1_0_addr = getelementptr [392 x float]* %U_block_buffer_1_0, i64 0, i64 %tmp_12

ST_28: stg_480 [1/1] 2.71ns
:47  store float %U_load_2, float* %U_block_buffer_1_0_addr, align 8

ST_28: V_load_2 [1/4] 2.61ns
:48  %V_load_2 = load float* %V_addr_3, align 4

ST_28: V_block_buffer_1_0_addr [1/1] 0.00ns
:49  %V_block_buffer_1_0_addr = getelementptr [392 x float]* %V_block_buffer_1_0, i64 0, i64 %tmp_12

ST_28: stg_483 [1/1] 2.71ns
:50  store float %V_load_2, float* %V_block_buffer_1_0_addr, align 8

ST_28: S_load_3 [1/4] 2.61ns
:51  %S_load_3 = load float* %S_addr_4, align 4

ST_28: S_block_buffer_1_1_addr [1/1] 0.00ns
:52  %S_block_buffer_1_1_addr = getelementptr [392 x float]* %S_block_buffer_1_1, i64 0, i64 %tmp_12

ST_28: stg_486 [1/1] 2.71ns
:53  store float %S_load_3, float* %S_block_buffer_1_1_addr, align 4

ST_28: U_load_3 [1/4] 2.61ns
:54  %U_load_3 = load float* %U_addr_4, align 4

ST_28: U_block_buffer_1_1_addr [1/1] 0.00ns
:55  %U_block_buffer_1_1_addr = getelementptr [392 x float]* %U_block_buffer_1_1, i64 0, i64 %tmp_12

ST_28: stg_489 [1/1] 2.71ns
:56  store float %U_load_3, float* %U_block_buffer_1_1_addr, align 4

ST_28: V_load_3 [1/4] 2.61ns
:57  %V_load_3 = load float* %V_addr_4, align 4

ST_28: V_block_buffer_1_1_addr [1/1] 0.00ns
:58  %V_block_buffer_1_1_addr = getelementptr [392 x float]* %V_block_buffer_1_1, i64 0, i64 %tmp_12

ST_28: stg_492 [1/1] 2.71ns
:59  store float %V_load_3, float* %V_block_buffer_1_1_addr, align 4

ST_28: empty_13 [1/1] 0.00ns
:60  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1808, i32 %tmp_22)

ST_28: stg_494 [1/1] 0.00ns
:61  br label %._crit_edge


 <State 29>: 2.71ns
ST_29: proc4 [1/1] 0.00ns
.preheader33:2  %proc4 = phi i9 [ %proc_7, %._crit_edge38 ], [ 0, %11 ]

ST_29: exitcond2 [1/1] 2.03ns
.preheader33:3  %exitcond2 = icmp eq i9 %proc4, -120

ST_29: proc_7 [1/1] 1.84ns
.preheader33:4  %proc_7 = add i9 %proc4, 1

ST_29: tmp_15 [1/1] 0.00ns
:4  %tmp_15 = zext i9 %proc4 to i64

ST_29: diag_1_addr_6 [1/1] 0.00ns
:5  %diag_1_addr_6 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_15

ST_29: diag_1_load_3 [2/2] 2.71ns
:6  %diag_1_load_3 = load i32* %diag_1_addr_6, align 4

ST_29: diag_2_addr_6 [1/1] 0.00ns
:7  %diag_2_addr_6 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_15

ST_29: diag_2_load_3 [2/2] 2.71ns
:8  %diag_2_load_3 = load i32* %diag_2_addr_6, align 4

ST_29: stg_503 [1/1] 0.00ns
._crit_edge38:0  br label %.preheader33


 <State 30>: 6.60ns
ST_30: top_left_3 [1/1] 0.00ns
.preheader33:0  %top_left_3 = phi i32 [ %top_left_5, %._crit_edge38 ], [ %top_left_2, %11 ]

ST_30: bottom_right_3 [1/1] 0.00ns
.preheader33:1  %bottom_right_3 = phi i32 [ %bottom_right_5, %._crit_edge38 ], [ %bottom_right_2, %11 ]

ST_30: stg_506 [1/1] 1.57ns
.preheader33:5  br i1 %exitcond2, label %.preheader32, label %14

ST_30: diag_1_load_3 [1/2] 2.71ns
:6  %diag_1_load_3 = load i32* %diag_1_addr_6, align 4

ST_30: diag_2_load_3 [1/2] 2.71ns
:8  %diag_2_load_3 = load i32* %diag_2_addr_6, align 4

ST_30: tmp_i1 [1/1] 2.52ns
:9  %tmp_i1 = icmp sgt i32 %diag_1_load_3, %diag_2_load_3

ST_30: top_left_5 [1/1] 1.37ns
:10  %top_left_5 = select i1 %tmp_i1, i32 %diag_2_load_3, i32 %diag_1_load_3

ST_30: bottom_right_5 [1/1] 1.37ns
:11  %bottom_right_5 = select i1 %tmp_i1, i32 %diag_1_load_3, i32 %diag_2_load_3


 <State 31>: 3.89ns
ST_31: empty_14 [1/1] 0.00ns
:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 392, i64 392, i64 392)

ST_31: stg_513 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str1809) nounwind

ST_31: tmp_23 [1/1] 0.00ns
:2  %tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str1809)

ST_31: stg_515 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_31: tmp_16 [1/1] 2.52ns
:12  %tmp_16 = icmp eq i32 %top_left_5, 784

ST_31: tmp_19 [1/1] 2.52ns
:13  %tmp_19 = icmp eq i32 %bottom_right_5, 784

ST_31: or_cond7 [1/1] 1.37ns
:14  %or_cond7 = or i1 %tmp_16, %tmp_19

ST_31: stg_519 [1/1] 0.00ns
:15  br i1 %or_cond7, label %._crit_edge38, label %_ifconv

ST_31: S_block_buffer_0_0_addr_1 [1/1] 0.00ns
_ifconv:0  %S_block_buffer_0_0_addr_1 = getelementptr [392 x float]* %S_block_buffer_0_0, i64 0, i64 %tmp_15

ST_31: w_in [2/2] 2.71ns
_ifconv:1  %w_in = load float* %S_block_buffer_0_0_addr_1, align 16

ST_31: S_block_buffer_0_1_addr_1 [1/1] 0.00ns
_ifconv:2  %S_block_buffer_0_1_addr_1 = getelementptr [392 x float]* %S_block_buffer_0_1, i64 0, i64 %tmp_15

ST_31: x_in [2/2] 2.71ns
_ifconv:3  %x_in = load float* %S_block_buffer_0_1_addr_1, align 4

ST_31: S_block_buffer_1_0_addr_1 [1/1] 0.00ns
_ifconv:4  %S_block_buffer_1_0_addr_1 = getelementptr [392 x float]* %S_block_buffer_1_0, i64 0, i64 %tmp_15

ST_31: y_in [2/2] 2.71ns
_ifconv:5  %y_in = load float* %S_block_buffer_1_0_addr_1, align 8

ST_31: S_block_buffer_1_1_addr_1 [1/1] 0.00ns
_ifconv:6  %S_block_buffer_1_1_addr_1 = getelementptr [392 x float]* %S_block_buffer_1_1, i64 0, i64 %tmp_15

ST_31: z_in [2/2] 2.71ns
_ifconv:7  %z_in = load float* %S_block_buffer_1_1_addr_1, align 4


 <State 32>: 2.71ns
ST_32: w_in [1/2] 2.71ns
_ifconv:1  %w_in = load float* %S_block_buffer_0_0_addr_1, align 16

ST_32: x_in [1/2] 2.71ns
_ifconv:3  %x_in = load float* %S_block_buffer_0_1_addr_1, align 4

ST_32: y_in [1/2] 2.71ns
_ifconv:5  %y_in = load float* %S_block_buffer_1_0_addr_1, align 8

ST_32: z_in [1/2] 2.71ns
_ifconv:7  %z_in = load float* %S_block_buffer_1_1_addr_1, align 4

ST_32: stg_532 [1/1] 2.71ns
_ifconv:76  store float 0.000000e+00, float* %S_block_buffer_0_1_addr_1, align 4

ST_32: stg_533 [1/1] 2.71ns
_ifconv:77  store float 0.000000e+00, float* %S_block_buffer_1_0_addr_1, align 8


 <State 33>: 7.26ns
ST_33: u1 [5/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_33: u2 [5/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_33: u1_1 [5/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_33: u2_1 [5/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 34>: 7.26ns
ST_34: u1 [4/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_34: u2 [4/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_34: u1_1 [4/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_34: u2_1 [4/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 35>: 7.26ns
ST_35: u1 [3/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_35: u2 [3/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_35: u1_1 [3/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_35: u2_1 [3/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 36>: 7.26ns
ST_36: u1 [2/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_36: u2 [2/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_36: u1_1 [2/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_36: u2_1 [2/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 37>: 7.26ns
ST_37: u1 [1/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_37: u2 [1/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_37: u1_1 [1/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_37: u2_1 [1/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 38>: 6.16ns
ST_38: call_ret4 [85/85] 6.16ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_38: call_ret5 [85/85] 6.16ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 39>: 7.65ns
ST_39: call_ret4 [84/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_39: call_ret5 [84/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 40>: 7.65ns
ST_40: call_ret4 [83/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_40: call_ret5 [83/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 41>: 7.65ns
ST_41: call_ret4 [82/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_41: call_ret5 [82/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 42>: 7.65ns
ST_42: call_ret4 [81/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_42: call_ret5 [81/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 43>: 7.65ns
ST_43: call_ret4 [80/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_43: call_ret5 [80/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 44>: 7.65ns
ST_44: call_ret4 [79/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_44: call_ret5 [79/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 45>: 7.65ns
ST_45: call_ret4 [78/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_45: call_ret5 [78/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 46>: 7.65ns
ST_46: call_ret4 [77/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_46: call_ret5 [77/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 47>: 7.65ns
ST_47: call_ret4 [76/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_47: call_ret5 [76/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 48>: 7.65ns
ST_48: call_ret4 [75/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_48: call_ret5 [75/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 49>: 7.65ns
ST_49: call_ret4 [74/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_49: call_ret5 [74/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 50>: 7.65ns
ST_50: call_ret4 [73/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_50: call_ret5 [73/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 51>: 7.65ns
ST_51: call_ret4 [72/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_51: call_ret5 [72/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 52>: 7.65ns
ST_52: call_ret4 [71/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_52: call_ret5 [71/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 53>: 7.65ns
ST_53: call_ret4 [70/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_53: call_ret5 [70/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 54>: 7.65ns
ST_54: call_ret4 [69/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_54: call_ret5 [69/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 55>: 7.65ns
ST_55: call_ret4 [68/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_55: call_ret5 [68/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 56>: 7.65ns
ST_56: call_ret4 [67/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_56: call_ret5 [67/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 57>: 7.65ns
ST_57: call_ret4 [66/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_57: call_ret5 [66/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 58>: 7.65ns
ST_58: call_ret4 [65/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_58: call_ret5 [65/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 59>: 7.65ns
ST_59: call_ret4 [64/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_59: call_ret5 [64/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 60>: 7.65ns
ST_60: call_ret4 [63/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_60: call_ret5 [63/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 61>: 7.65ns
ST_61: call_ret4 [62/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_61: call_ret5 [62/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 62>: 7.65ns
ST_62: call_ret4 [61/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_62: call_ret5 [61/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 63>: 7.65ns
ST_63: call_ret4 [60/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_63: call_ret5 [60/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 64>: 7.65ns
ST_64: call_ret4 [59/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_64: call_ret5 [59/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 65>: 7.65ns
ST_65: call_ret4 [58/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_65: call_ret5 [58/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 66>: 7.65ns
ST_66: call_ret4 [57/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_66: call_ret5 [57/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 67>: 7.65ns
ST_67: call_ret4 [56/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_67: call_ret5 [56/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 68>: 7.65ns
ST_68: call_ret4 [55/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_68: call_ret5 [55/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 69>: 7.65ns
ST_69: call_ret4 [54/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_69: call_ret5 [54/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 70>: 7.65ns
ST_70: call_ret4 [53/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_70: call_ret5 [53/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 71>: 7.65ns
ST_71: call_ret4 [52/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_71: call_ret5 [52/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 72>: 7.65ns
ST_72: call_ret4 [51/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_72: call_ret5 [51/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 73>: 7.65ns
ST_73: call_ret4 [50/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_73: call_ret5 [50/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 74>: 7.65ns
ST_74: call_ret4 [49/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_74: call_ret5 [49/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 75>: 7.65ns
ST_75: call_ret4 [48/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_75: call_ret5 [48/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 76>: 7.65ns
ST_76: call_ret4 [47/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_76: call_ret5 [47/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 77>: 7.65ns
ST_77: call_ret4 [46/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_77: call_ret5 [46/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 78>: 7.65ns
ST_78: call_ret4 [45/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_78: call_ret5 [45/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 79>: 7.65ns
ST_79: call_ret4 [44/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_79: call_ret5 [44/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 80>: 7.65ns
ST_80: call_ret4 [43/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_80: call_ret5 [43/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 81>: 7.65ns
ST_81: call_ret4 [42/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_81: call_ret5 [42/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 82>: 7.65ns
ST_82: call_ret4 [41/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_82: call_ret5 [41/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 83>: 7.65ns
ST_83: call_ret4 [40/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_83: call_ret5 [40/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 84>: 7.65ns
ST_84: call_ret4 [39/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_84: call_ret5 [39/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 85>: 7.65ns
ST_85: call_ret4 [38/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_85: call_ret5 [38/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 86>: 7.65ns
ST_86: call_ret4 [37/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_86: call_ret5 [37/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 87>: 7.65ns
ST_87: call_ret4 [36/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_87: call_ret5 [36/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 88>: 7.65ns
ST_88: call_ret4 [35/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_88: call_ret5 [35/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 89>: 7.65ns
ST_89: call_ret4 [34/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_89: call_ret5 [34/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 90>: 7.65ns
ST_90: call_ret4 [33/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_90: call_ret5 [33/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 91>: 7.65ns
ST_91: call_ret4 [32/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_91: call_ret5 [32/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 92>: 7.65ns
ST_92: call_ret4 [31/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_92: call_ret5 [31/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 93>: 7.65ns
ST_93: call_ret4 [30/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_93: call_ret5 [30/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 94>: 7.65ns
ST_94: call_ret4 [29/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_94: call_ret5 [29/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 95>: 7.65ns
ST_95: call_ret4 [28/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_95: call_ret5 [28/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 96>: 7.65ns
ST_96: call_ret4 [27/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_96: call_ret5 [27/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 97>: 7.65ns
ST_97: call_ret4 [26/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_97: call_ret5 [26/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 98>: 7.65ns
ST_98: call_ret4 [25/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_98: call_ret5 [25/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 99>: 7.65ns
ST_99: call_ret4 [24/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_99: call_ret5 [24/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 100>: 7.65ns
ST_100: call_ret4 [23/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_100: call_ret5 [23/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 101>: 7.65ns
ST_101: call_ret4 [22/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_101: call_ret5 [22/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 102>: 7.65ns
ST_102: call_ret4 [21/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_102: call_ret5 [21/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 103>: 7.65ns
ST_103: call_ret4 [20/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_103: call_ret5 [20/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 104>: 7.65ns
ST_104: call_ret4 [19/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_104: call_ret5 [19/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 105>: 7.65ns
ST_105: call_ret4 [18/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_105: call_ret5 [18/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 106>: 7.65ns
ST_106: call_ret4 [17/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_106: call_ret5 [17/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 107>: 7.65ns
ST_107: call_ret4 [16/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_107: call_ret5 [16/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 108>: 7.65ns
ST_108: call_ret4 [15/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_108: call_ret5 [15/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 109>: 7.65ns
ST_109: call_ret4 [14/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_109: call_ret5 [14/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 110>: 7.65ns
ST_110: call_ret4 [13/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_110: call_ret5 [13/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 111>: 7.65ns
ST_111: call_ret4 [12/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_111: call_ret5 [12/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 112>: 7.65ns
ST_112: call_ret4 [11/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_112: call_ret5 [11/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 113>: 7.65ns
ST_113: call_ret4 [10/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_113: call_ret5 [10/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 114>: 7.65ns
ST_114: call_ret4 [9/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_114: call_ret5 [9/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 115>: 7.65ns
ST_115: call_ret4 [8/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_115: call_ret5 [8/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 116>: 7.65ns
ST_116: call_ret4 [7/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_116: call_ret5 [7/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 117>: 7.65ns
ST_117: call_ret4 [6/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_117: call_ret5 [6/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 118>: 7.65ns
ST_118: call_ret4 [5/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_118: call_ret5 [5/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 119>: 7.65ns
ST_119: call_ret4 [4/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_119: call_ret5 [4/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 120>: 7.65ns
ST_120: call_ret4 [3/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_120: call_ret5 [3/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 121>: 7.65ns
ST_121: call_ret4 [2/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_121: call_ret5 [2/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 122>: 7.27ns
ST_122: call_ret4 [1/85] 7.27ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_122: cosA_half [1/1] 0.00ns
_ifconv:11  %cosA_half = extractvalue { float, float } %call_ret4, 0

ST_122: sinA_half [1/1] 0.00ns
_ifconv:12  %sinA_half = extractvalue { float, float } %call_ret4, 1

ST_122: call_ret5 [1/85] 7.27ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_122: cosB_half [1/1] 0.00ns
_ifconv:16  %cosB_half = extractvalue { float, float } %call_ret5, 0

ST_122: sinB_half [1/1] 0.00ns
_ifconv:17  %sinB_half = extractvalue { float, float } %call_ret5, 1


 <State 123>: 7.07ns
ST_123: tmp_i2 [4/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_123: tmp_3_i [4/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_123: tmp_22_to_int [1/1] 0.00ns
_ifconv:21  %tmp_22_to_int = bitcast float %cosA_half to i32

ST_123: tmp_22_neg [1/1] 1.37ns
_ifconv:22  %tmp_22_neg = xor i32 %tmp_22_to_int, -2147483648

ST_123: a2_assign [1/1] 0.00ns
_ifconv:23  %a2_assign = bitcast i32 %tmp_22_neg to float

ST_123: tmp_i3 [4/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_123: tmp_3_i1 [4/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_123: tmp_23_to_int [1/1] 0.00ns
_ifconv:27  %tmp_23_to_int = bitcast float %sinA_half to i32

ST_123: tmp_23_neg [1/1] 1.37ns
_ifconv:28  %tmp_23_neg = xor i32 %tmp_23_to_int, -2147483648

ST_123: a2_assign_1 [1/1] 0.00ns
_ifconv:29  %a2_assign_1 = bitcast i32 %tmp_23_neg to float

ST_123: tmp_3_i2 [4/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_123: tmp_3_i3 [4/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 124>: 5.70ns
ST_124: tmp_i2 [3/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_124: tmp_3_i [3/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_124: tmp_i3 [3/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_124: tmp_3_i1 [3/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_124: tmp_3_i2 [3/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_124: tmp_3_i3 [3/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 125>: 5.70ns
ST_125: tmp_i2 [2/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_125: tmp_3_i [2/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_125: tmp_i3 [2/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_125: tmp_3_i1 [2/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_125: tmp_3_i2 [2/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_125: tmp_3_i3 [2/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 126>: 5.70ns
ST_126: tmp_i2 [1/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_126: tmp_3_i [1/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_126: tmp_i3 [1/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_126: tmp_3_i1 [1/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_126: tmp_3_i2 [1/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_126: tmp_3_i3 [1/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 127>: 7.26ns
ST_127: uz_new [5/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_127: ux_new [5/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_127: vz_int_1 [5/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_127: vy_int_1 [5/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 128>: 7.26ns
ST_128: uz_new [4/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_128: ux_new [4/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_128: vz_int_1 [4/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_128: vy_int_1 [4/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 129>: 7.26ns
ST_129: uz_new [3/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_129: ux_new [3/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_129: vz_int_1 [3/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_129: vy_int_1 [3/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 130>: 7.26ns
ST_130: uz_new [2/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_130: ux_new [2/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_130: vz_int_1 [2/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_130: vy_int_1 [2/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 131>: 7.26ns
ST_131: uz_new [1/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_131: ux_new [1/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_131: vz_int_1 [1/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_131: vy_int_1 [1/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 132>: 7.07ns
ST_132: vy_int_to_int [1/1] 0.00ns
_ifconv:37  %vy_int_to_int = bitcast float %vy_int_1 to i32

ST_132: vy_int_neg [1/1] 1.37ns
_ifconv:38  %vy_int_neg = xor i32 %vy_int_to_int, -2147483648

ST_132: vy_int [1/1] 0.00ns
_ifconv:39  %vy_int = bitcast i32 %vy_int_neg to float

ST_132: tmp_i4 [4/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_132: tmp_3_i4 [4/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_132: tmp_i5 [4/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_132: tmp_3_i5 [4/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_132: tmp_i7 [4/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_132: tmp_3_i7 [4/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_132: tmp_i8 [4/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_132: tmp_3_i8 [4/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 133>: 5.70ns
ST_133: tmp_i4 [3/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_133: tmp_3_i4 [3/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_133: tmp_i5 [3/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_133: tmp_3_i5 [3/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_133: tmp_i7 [3/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_133: tmp_3_i7 [3/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_133: tmp_i8 [3/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_133: tmp_3_i8 [3/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 134>: 5.70ns
ST_134: tmp_i4 [2/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_134: tmp_3_i4 [2/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_134: tmp_i5 [2/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_134: tmp_3_i5 [2/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_134: tmp_i7 [2/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_134: tmp_3_i7 [2/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_134: tmp_i8 [2/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_134: tmp_3_i8 [2/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 135>: 5.70ns
ST_135: tmp_i4 [1/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_135: tmp_3_i4 [1/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_135: tmp_i5 [1/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_135: tmp_3_i5 [1/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_135: tmp_i7 [1/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_135: tmp_3_i7 [1/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_135: tmp_i8 [1/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_135: tmp_3_i8 [1/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 136>: 7.26ns
ST_136: w_out1 [5/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_136: w_out2 [5/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_136: z_out1 [5/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_136: z_out2 [5/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 137>: 7.26ns
ST_137: w_out1 [4/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_137: w_out2 [4/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_137: z_out1 [4/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_137: z_out2 [4/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 138>: 7.26ns
ST_138: w_out1 [3/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_138: w_out2 [3/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_138: z_out1 [3/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_138: z_out2 [3/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 139>: 7.26ns
ST_139: w_out1 [2/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_139: w_out2 [2/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_139: z_out1 [2/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_139: z_out2 [2/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 140>: 7.26ns
ST_140: w_out1 [1/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_140: w_out2 [1/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_140: z_out1 [1/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_140: z_out2 [1/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8

ST_140: U_block_buffer_0_0_addr_2 [1/1] 0.00ns
_ifconv:95  %U_block_buffer_0_0_addr_2 = getelementptr [392 x float]* %U_block_buffer_0_0, i64 0, i64 %tmp_15

ST_140: uw_in [2/2] 2.71ns
_ifconv:96  %uw_in = load float* %U_block_buffer_0_0_addr_2, align 16

ST_140: U_block_buffer_0_1_addr_2 [1/1] 0.00ns
_ifconv:97  %U_block_buffer_0_1_addr_2 = getelementptr [392 x float]* %U_block_buffer_0_1, i64 0, i64 %tmp_15

ST_140: ux_in [2/2] 2.71ns
_ifconv:98  %ux_in = load float* %U_block_buffer_0_1_addr_2, align 4

ST_140: U_block_buffer_1_0_addr_2 [1/1] 0.00ns
_ifconv:99  %U_block_buffer_1_0_addr_2 = getelementptr [392 x float]* %U_block_buffer_1_0, i64 0, i64 %tmp_15

ST_140: uy_in [2/2] 2.71ns
_ifconv:100  %uy_in = load float* %U_block_buffer_1_0_addr_2, align 8

ST_140: U_block_buffer_1_1_addr_2 [1/1] 0.00ns
_ifconv:101  %U_block_buffer_1_1_addr_2 = getelementptr [392 x float]* %U_block_buffer_1_1, i64 0, i64 %tmp_15

ST_140: uz_in [2/2] 2.71ns
_ifconv:102  %uz_in = load float* %U_block_buffer_1_1_addr_2, align 4


 <State 141>: 8.41ns
ST_141: uy_int_to_int [1/1] 0.00ns
_ifconv:34  %uy_int_to_int = bitcast float %ux_new to i32

ST_141: uy_int_neg [1/1] 1.37ns
_ifconv:35  %uy_int_neg = xor i32 %uy_int_to_int, -2147483648

ST_141: uy_int [1/1] 0.00ns
_ifconv:36  %uy_int = bitcast i32 %uy_int_neg to float

ST_141: tmp_i6 [4/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_141: tmp_3_i6 [4/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_141: tmp_i9 [4/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_141: tmp_3_i9 [4/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_141: J2x2_0_0_addr [1/1] 0.00ns
_ifconv:79  %J2x2_0_0_addr = getelementptr [392 x float]* %J2x2_0_0, i64 0, i64 %tmp_15

ST_141: stg_849 [1/1] 2.71ns
_ifconv:80  store float %uz_new, float* %J2x2_0_0_addr, align 16

ST_141: J2x2_0_1_addr [1/1] 0.00ns
_ifconv:81  %J2x2_0_1_addr = getelementptr [392 x float]* %J2x2_0_1, i64 0, i64 %tmp_15

ST_141: stg_851 [1/1] 2.71ns
_ifconv:82  store float %ux_new, float* %J2x2_0_1_addr, align 4

ST_141: J2x2_1_0_addr [1/1] 0.00ns
_ifconv:83  %J2x2_1_0_addr = getelementptr [392 x float]* %J2x2_1_0, i64 0, i64 %tmp_15

ST_141: stg_853 [1/1] 2.71ns
_ifconv:84  store float %uy_int, float* %J2x2_1_0_addr, align 8

ST_141: J2x2_1_1_addr [1/1] 0.00ns
_ifconv:85  %J2x2_1_1_addr = getelementptr [392 x float]* %J2x2_1_1, i64 0, i64 %tmp_15

ST_141: stg_855 [1/1] 2.71ns
_ifconv:86  store float %uz_new, float* %J2x2_1_1_addr, align 4

ST_141: uw_in [1/2] 2.71ns
_ifconv:96  %uw_in = load float* %U_block_buffer_0_0_addr_2, align 16

ST_141: ux_in [1/2] 2.71ns
_ifconv:98  %ux_in = load float* %U_block_buffer_0_1_addr_2, align 4

ST_141: uy_in [1/2] 2.71ns
_ifconv:100  %uy_in = load float* %U_block_buffer_1_0_addr_2, align 8

ST_141: uz_in [1/2] 2.71ns
_ifconv:102  %uz_in = load float* %U_block_buffer_1_1_addr_2, align 4

ST_141: tmp_i_i [4/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_141: tmp_3_i_i [4/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_141: tmp_i1_i [4/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_141: tmp_3_i2_i [4/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_141: tmp_i4_i [4/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_141: tmp_3_i5_i [4/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_141: tmp_i7_i [4/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_141: tmp_3_i8_i [4/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 142>: 5.70ns
ST_142: tmp_i6 [3/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_142: tmp_3_i6 [3/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_142: tmp_i9 [3/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_142: tmp_3_i9 [3/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_142: tmp_i_i [3/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_142: tmp_3_i_i [3/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_142: tmp_i1_i [3/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_142: tmp_3_i2_i [3/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_142: tmp_i4_i [3/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_142: tmp_3_i5_i [3/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_142: tmp_i7_i [3/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_142: tmp_3_i8_i [3/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 143>: 5.70ns
ST_143: tmp_i6 [2/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_143: tmp_3_i6 [2/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_143: tmp_i9 [2/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_143: tmp_3_i9 [2/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_143: tmp_i_i [2/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_143: tmp_3_i_i [2/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_143: tmp_i1_i [2/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_143: tmp_3_i2_i [2/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_143: tmp_i4_i [2/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_143: tmp_3_i5_i [2/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_143: tmp_i7_i [2/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_143: tmp_3_i8_i [2/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 144>: 5.70ns
ST_144: tmp_i6 [1/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_144: tmp_3_i6 [1/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_144: tmp_i9 [1/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_144: tmp_3_i9 [1/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_144: tmp_i_i [1/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_144: tmp_3_i_i [1/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_144: tmp_i1_i [1/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_144: tmp_3_i2_i [1/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_144: tmp_i4_i [1/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_144: tmp_3_i5_i [1/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_144: tmp_i7_i [1/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_144: tmp_3_i8_i [1/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 145>: 7.26ns
ST_145: w_out_int [5/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_145: z_out_int [5/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_145: uw_out [5/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_145: ux_out [5/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_145: uy_out [5/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_145: uz_out [5/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 146>: 7.26ns
ST_146: w_out_int [4/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_146: z_out_int [4/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_146: uw_out [4/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_146: ux_out [4/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_146: uy_out [4/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_146: uz_out [4/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 147>: 7.26ns
ST_147: w_out_int [3/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_147: z_out_int [3/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_147: uw_out [3/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_147: ux_out [3/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_147: uy_out [3/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_147: uz_out [3/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 148>: 7.26ns
ST_148: w_out_int [2/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_148: z_out_int [2/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_148: uw_out [2/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_148: ux_out [2/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_148: uy_out [2/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_148: uz_out [2/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 149>: 7.26ns
ST_149: w_out_int [1/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_149: z_out_int [1/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_149: V_block_buffer_0_0_addr_2 [1/1] 0.00ns
_ifconv:103  %V_block_buffer_0_0_addr_2 = getelementptr [392 x float]* %V_block_buffer_0_0, i64 0, i64 %tmp_15

ST_149: vw_in [2/2] 2.71ns
_ifconv:104  %vw_in = load float* %V_block_buffer_0_0_addr_2, align 16

ST_149: V_block_buffer_0_1_addr_2 [1/1] 0.00ns
_ifconv:105  %V_block_buffer_0_1_addr_2 = getelementptr [392 x float]* %V_block_buffer_0_1, i64 0, i64 %tmp_15

ST_149: vx_in [2/2] 2.71ns
_ifconv:106  %vx_in = load float* %V_block_buffer_0_1_addr_2, align 4

ST_149: V_block_buffer_1_0_addr_2 [1/1] 0.00ns
_ifconv:107  %V_block_buffer_1_0_addr_2 = getelementptr [392 x float]* %V_block_buffer_1_0, i64 0, i64 %tmp_15

ST_149: vy_in [2/2] 2.71ns
_ifconv:108  %vy_in = load float* %V_block_buffer_1_0_addr_2, align 8

ST_149: V_block_buffer_1_1_addr_2 [1/1] 0.00ns
_ifconv:109  %V_block_buffer_1_1_addr_2 = getelementptr [392 x float]* %V_block_buffer_1_1, i64 0, i64 %tmp_15

ST_149: vz_in [2/2] 2.71ns
_ifconv:110  %vz_in = load float* %V_block_buffer_1_1_addr_2, align 4

ST_149: uw_out [1/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_149: ux_out [1/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_149: uy_out [1/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_149: uz_out [1/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 150>: 8.44ns
ST_150: p_Val2_s [1/1] 0.00ns
_ifconv:58  %p_Val2_s = bitcast float %w_out_int to i32

ST_150: p_Result_s [1/1] 0.00ns
_ifconv:59  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 31)

ST_150: w_out_1_neg [1/1] 0.00ns (grouped into LUT with out node w_out_2)
_ifconv:60  %w_out_1_neg = xor i32 %p_Val2_s, -2147483648

ST_150: w_out [1/1] 0.00ns (grouped into LUT with out node w_out_2)
_ifconv:61  %w_out = bitcast i32 %w_out_1_neg to float

ST_150: vw_int_to_int [1/1] 0.00ns
_ifconv:62  %vw_int_to_int = bitcast float %vz_int_1 to i32

ST_150: vw_int_neg [1/1] 1.37ns
_ifconv:63  %vw_int_neg = xor i32 %vw_int_to_int, -2147483648

ST_150: vw_int [1/1] 0.00ns
_ifconv:64  %vw_int = bitcast i32 %vw_int_neg to float

ST_150: w_out_2 [1/1] 1.37ns (out node of the LUT)
_ifconv:65  %w_out_2 = select i1 %p_Result_s, float %w_out, float %w_out_int

ST_150: vw_int_3 [1/1] 1.37ns
_ifconv:66  %vw_int_3 = select i1 %p_Result_s, float %vw_int, float %vz_int_1

ST_150: vx_int [1/1] 1.37ns
_ifconv:67  %vx_int = select i1 %p_Result_s, float %vy_int_1, float %vy_int

ST_150: p_Val2_1 [1/1] 0.00ns
_ifconv:68  %p_Val2_1 = bitcast float %z_out_int to i32

ST_150: p_Result_1 [1/1] 0.00ns
_ifconv:69  %p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_1, i32 31)

ST_150: z_out_1_neg [1/1] 0.00ns (grouped into LUT with out node z_out_2)
_ifconv:70  %z_out_1_neg = xor i32 %p_Val2_1, -2147483648

ST_150: z_out [1/1] 0.00ns (grouped into LUT with out node z_out_2)
_ifconv:71  %z_out = bitcast i32 %z_out_1_neg to float

ST_150: z_out_2 [1/1] 1.37ns (out node of the LUT)
_ifconv:72  %z_out_2 = select i1 %p_Result_1, float %z_out, float %z_out_int

ST_150: vy_int_2 [1/1] 1.37ns
_ifconv:73  %vy_int_2 = select i1 %p_Result_1, float %vy_int, float %vy_int_1

ST_150: vz_int [1/1] 1.37ns
_ifconv:74  %vz_int = select i1 %p_Result_1, float %vw_int, float %vz_int_1

ST_150: stg_959 [1/1] 2.71ns
_ifconv:75  store float %w_out_2, float* %S_block_buffer_0_0_addr_1, align 16

ST_150: stg_960 [1/1] 2.71ns
_ifconv:78  store float %z_out_2, float* %S_block_buffer_1_1_addr_1, align 4

ST_150: K2x2_0_0_addr [1/1] 0.00ns
_ifconv:87  %K2x2_0_0_addr = getelementptr [392 x float]* %K2x2_0_0, i64 0, i64 %tmp_15

ST_150: stg_962 [1/1] 2.71ns
_ifconv:88  store float %vw_int_3, float* %K2x2_0_0_addr, align 16

ST_150: K2x2_0_1_addr [1/1] 0.00ns
_ifconv:89  %K2x2_0_1_addr = getelementptr [392 x float]* %K2x2_0_1, i64 0, i64 %tmp_15

ST_150: stg_964 [1/1] 2.71ns
_ifconv:90  store float %vy_int_2, float* %K2x2_0_1_addr, align 4

ST_150: K2x2_1_0_addr [1/1] 0.00ns
_ifconv:91  %K2x2_1_0_addr = getelementptr [392 x float]* %K2x2_1_0, i64 0, i64 %tmp_15

ST_150: stg_966 [1/1] 2.71ns
_ifconv:92  store float %vx_int, float* %K2x2_1_0_addr, align 8

ST_150: K2x2_1_1_addr [1/1] 0.00ns
_ifconv:93  %K2x2_1_1_addr = getelementptr [392 x float]* %K2x2_1_1, i64 0, i64 %tmp_15

ST_150: stg_968 [1/1] 2.71ns
_ifconv:94  store float %vz_int, float* %K2x2_1_1_addr, align 4

ST_150: vw_in [1/2] 2.71ns
_ifconv:104  %vw_in = load float* %V_block_buffer_0_0_addr_2, align 16

ST_150: vx_in [1/2] 2.71ns
_ifconv:106  %vx_in = load float* %V_block_buffer_0_1_addr_2, align 4

ST_150: vy_in [1/2] 2.71ns
_ifconv:108  %vy_in = load float* %V_block_buffer_1_0_addr_2, align 8

ST_150: vz_in [1/2] 2.71ns
_ifconv:110  %vz_in = load float* %V_block_buffer_1_1_addr_2, align 4

ST_150: tmp_i_i1 [4/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_150: tmp_3_i_i1 [4/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_150: tmp_i1_i1 [4/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_150: tmp_3_i2_i1 [4/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_150: tmp_i4_i1 [4/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_150: tmp_3_i5_i1 [4/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_150: tmp_i7_i1 [4/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_150: tmp_3_i8_i1 [4/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int

ST_150: stg_981 [1/1] 2.71ns
_ifconv:135  store float %uw_out, float* %U_block_buffer_0_0_addr_2, align 16

ST_150: stg_982 [1/1] 2.71ns
_ifconv:136  store float %ux_out, float* %U_block_buffer_0_1_addr_2, align 4

ST_150: stg_983 [1/1] 2.71ns
_ifconv:137  store float %uy_out, float* %U_block_buffer_1_0_addr_2, align 8

ST_150: stg_984 [1/1] 2.71ns
_ifconv:138  store float %uz_out, float* %U_block_buffer_1_1_addr_2, align 4


 <State 151>: 5.70ns
ST_151: tmp_i_i1 [3/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_151: tmp_3_i_i1 [3/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_151: tmp_i1_i1 [3/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_151: tmp_3_i2_i1 [3/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_151: tmp_i4_i1 [3/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_151: tmp_3_i5_i1 [3/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_151: tmp_i7_i1 [3/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_151: tmp_3_i8_i1 [3/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int


 <State 152>: 5.70ns
ST_152: tmp_i_i1 [2/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_152: tmp_3_i_i1 [2/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_152: tmp_i1_i1 [2/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_152: tmp_3_i2_i1 [2/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_152: tmp_i4_i1 [2/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_152: tmp_3_i5_i1 [2/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_152: tmp_i7_i1 [2/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_152: tmp_3_i8_i1 [2/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int


 <State 153>: 5.70ns
ST_153: tmp_i_i1 [1/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_153: tmp_3_i_i1 [1/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_153: tmp_i1_i1 [1/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_153: tmp_3_i2_i1 [1/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_153: tmp_i4_i1 [1/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_153: tmp_3_i5_i1 [1/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_153: tmp_i7_i1 [1/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_153: tmp_3_i8_i1 [1/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int


 <State 154>: 7.26ns
ST_154: vw_out [5/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_154: vx_out [5/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_154: vy_out [5/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_154: vz_out [5/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 155>: 7.26ns
ST_155: vw_out [4/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_155: vx_out [4/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_155: vy_out [4/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_155: vz_out [4/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 156>: 7.26ns
ST_156: vw_out [3/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_156: vx_out [3/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_156: vy_out [3/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_156: vz_out [3/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 157>: 7.26ns
ST_157: vw_out [2/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_157: vx_out [2/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_157: vy_out [2/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_157: vz_out [2/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 158>: 7.26ns
ST_158: vw_out [1/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_158: vx_out [1/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_158: vy_out [1/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_158: vz_out [1/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 159>: 2.71ns
ST_159: stg_1029 [1/1] 2.71ns
_ifconv:139  store float %vw_out, float* %V_block_buffer_0_0_addr_2, align 16

ST_159: stg_1030 [1/1] 2.71ns
_ifconv:140  store float %vx_out, float* %V_block_buffer_0_1_addr_2, align 4

ST_159: stg_1031 [1/1] 2.71ns
_ifconv:141  store float %vy_out, float* %V_block_buffer_1_0_addr_2, align 8

ST_159: stg_1032 [1/1] 2.71ns
_ifconv:142  store float %vz_out, float* %V_block_buffer_1_1_addr_2, align 4

ST_159: empty_15 [1/1] 0.00ns
_ifconv:143  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str1809, i32 %tmp_23)

ST_159: stg_1034 [1/1] 0.00ns
_ifconv:144  br label %._crit_edge38


 <State 160>: 3.60ns
ST_160: top_left_4 [1/1] 0.00ns
.preheader32:0  %top_left_4 = phi i32 [ %top_left_8, %._crit_edge40 ], [ %top_left_3, %.preheader33 ]

ST_160: bottom_right_4 [1/1] 0.00ns
.preheader32:1  %bottom_right_4 = phi i32 [ %bottom_right_8, %._crit_edge40 ], [ %bottom_right_3, %.preheader33 ]

ST_160: proc5 [1/1] 0.00ns
.preheader32:2  %proc5 = phi i9 [ %proc_5, %._crit_edge40 ], [ 0, %.preheader33 ]

ST_160: exitcond4 [1/1] 2.03ns
.preheader32:3  %exitcond4 = icmp eq i9 %proc5, -120

ST_160: proc_5 [1/1] 1.84ns
.preheader32:4  %proc_5 = add i9 %proc5, 1

ST_160: stg_1040 [1/1] 1.57ns
.preheader32:5  br i1 %exitcond4, label %.preheader30, label %15

ST_160: tmp_20 [1/1] 0.00ns
:4  %tmp_20 = zext i9 %proc5 to i64

ST_160: diag_1_addr_7 [1/1] 0.00ns
:5  %diag_1_addr_7 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_20

ST_160: diag_1_load_4 [2/2] 2.71ns
:6  %diag_1_load_4 = load i32* %diag_1_addr_7, align 4

ST_160: diag_2_addr_7 [1/1] 0.00ns
:7  %diag_2_addr_7 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_20

ST_160: diag_2_load_4 [2/2] 2.71ns
:8  %diag_2_load_4 = load i32* %diag_2_addr_7, align 4

ST_160: stg_1046 [1/1] 0.00ns
._crit_edge40:0  br label %.preheader32


 <State 161>: 6.60ns
ST_161: diag_1_load_4 [1/2] 2.71ns
:6  %diag_1_load_4 = load i32* %diag_1_addr_7, align 4

ST_161: diag_2_load_4 [1/2] 2.71ns
:8  %diag_2_load_4 = load i32* %diag_2_addr_7, align 4

ST_161: tmp_i10 [1/1] 2.52ns
:9  %tmp_i10 = icmp sgt i32 %diag_1_load_4, %diag_2_load_4

ST_161: top_left_8 [1/1] 1.37ns
:10  %top_left_8 = select i1 %tmp_i10, i32 %diag_2_load_4, i32 %diag_1_load_4

ST_161: bottom_right_8 [1/1] 1.37ns
:11  %bottom_right_8 = select i1 %tmp_i10, i32 %diag_1_load_4, i32 %diag_2_load_4


 <State 162>: 6.38ns
ST_162: empty_16 [1/1] 0.00ns
:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 392, i64 392, i64 392)

ST_162: stg_1053 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1810) nounwind

ST_162: tmp_30 [1/1] 0.00ns
:2  %tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1810)

ST_162: stg_1055 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_162: tmp_21 [1/1] 2.52ns
:12  %tmp_21 = icmp eq i32 %top_left_8, 784

ST_162: tmp_26 [1/1] 2.52ns
:13  %tmp_26 = icmp eq i32 %bottom_right_8, 784

ST_162: or_cond8 [1/1] 1.37ns
:14  %or_cond8 = or i1 %tmp_21, %tmp_26

ST_162: stg_1059 [1/1] 0.00ns
:15  br i1 %or_cond8, label %._crit_edge40, label %16

ST_162: S_block_buffer_0_0_addr_2 [1/1] 0.00ns
:0  %S_block_buffer_0_0_addr_2 = getelementptr [392 x float]* %S_block_buffer_0_0, i64 0, i64 %tmp_20

ST_162: S_block_buffer_0_0_load [2/2] 2.71ns
:1  %S_block_buffer_0_0_load = load float* %S_block_buffer_0_0_addr_2, align 16

ST_162: tmp_62 [1/1] 0.00ns
:2  %tmp_62 = trunc i32 %top_left_8 to i21

ST_162: tmp_61 [1/1] 6.38ns
:3  %tmp_61 = mul i21 784, %tmp_62

ST_162: U_block_buffer_0_0_addr_1 [1/1] 0.00ns
:10  %U_block_buffer_0_0_addr_1 = getelementptr [392 x float]* %U_block_buffer_0_0, i64 0, i64 %tmp_20

ST_162: U_block_buffer_0_0_load [2/2] 2.71ns
:11  %U_block_buffer_0_0_load = load float* %U_block_buffer_0_0_addr_1, align 16

ST_162: V_block_buffer_0_0_addr_1 [1/1] 0.00ns
:13  %V_block_buffer_0_0_addr_1 = getelementptr [392 x float]* %V_block_buffer_0_0, i64 0, i64 %tmp_20

ST_162: V_block_buffer_0_0_load [2/2] 2.71ns
:14  %V_block_buffer_0_0_load = load float* %V_block_buffer_0_0_addr_1, align 16

ST_162: tmp_69 [1/1] 0.00ns
:18  %tmp_69 = trunc i32 %bottom_right_8 to i21


 <State 163>: 6.38ns
ST_163: S_block_buffer_0_0_load [1/2] 2.71ns
:1  %S_block_buffer_0_0_load = load float* %S_block_buffer_0_0_addr_2, align 16

ST_163: tmp_68 [1/1] 2.20ns
:4  %tmp_68 = add i21 %tmp_61, %tmp_62

ST_163: tmp_94_cast [1/1] 0.00ns
:5  %tmp_94_cast = sext i21 %tmp_68 to i64

ST_163: S_addr_5 [1/1] 0.00ns
:6  %S_addr_5 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_94_cast

ST_163: U_addr_5 [1/1] 0.00ns
:7  %U_addr_5 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_94_cast

ST_163: V_addr_5 [1/1] 0.00ns
:8  %V_addr_5 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_94_cast

ST_163: stg_1075 [2/2] 2.61ns
:9  store float %S_block_buffer_0_0_load, float* %S_addr_5, align 4

ST_163: U_block_buffer_0_0_load [1/2] 2.71ns
:11  %U_block_buffer_0_0_load = load float* %U_block_buffer_0_0_addr_1, align 16

ST_163: stg_1077 [2/2] 2.61ns
:12  store float %U_block_buffer_0_0_load, float* %U_addr_5, align 4

ST_163: V_block_buffer_0_0_load [1/2] 2.71ns
:14  %V_block_buffer_0_0_load = load float* %V_block_buffer_0_0_addr_1, align 16

ST_163: stg_1079 [2/2] 2.61ns
:15  store float %V_block_buffer_0_0_load, float* %V_addr_5, align 4

ST_163: S_block_buffer_0_1_addr_2 [1/1] 0.00ns
:16  %S_block_buffer_0_1_addr_2 = getelementptr [392 x float]* %S_block_buffer_0_1, i64 0, i64 %tmp_20

ST_163: S_block_buffer_0_1_load [2/2] 2.71ns
:17  %S_block_buffer_0_1_load = load float* %S_block_buffer_0_1_addr_2, align 4

ST_163: tmp_75 [1/1] 6.38ns
:22  %tmp_75 = mul i21 784, %tmp_69

ST_163: U_block_buffer_0_1_addr_1 [1/1] 0.00ns
:36  %U_block_buffer_0_1_addr_1 = getelementptr [392 x float]* %U_block_buffer_0_1, i64 0, i64 %tmp_20

ST_163: U_block_buffer_0_1_load [2/2] 2.71ns
:37  %U_block_buffer_0_1_load = load float* %U_block_buffer_0_1_addr_1, align 4

ST_163: V_block_buffer_0_1_addr_1 [1/1] 0.00ns
:39  %V_block_buffer_0_1_addr_1 = getelementptr [392 x float]* %V_block_buffer_0_1, i64 0, i64 %tmp_20

ST_163: V_block_buffer_0_1_load [2/2] 2.71ns
:40  %V_block_buffer_0_1_load = load float* %V_block_buffer_0_1_addr_1, align 4


 <State 164>: 5.32ns
ST_164: stg_1087 [1/2] 2.61ns
:9  store float %S_block_buffer_0_0_load, float* %S_addr_5, align 4

ST_164: stg_1088 [1/2] 2.61ns
:12  store float %U_block_buffer_0_0_load, float* %U_addr_5, align 4

ST_164: stg_1089 [1/2] 2.61ns
:15  store float %V_block_buffer_0_0_load, float* %V_addr_5, align 4

ST_164: S_block_buffer_0_1_load [1/2] 2.71ns
:17  %S_block_buffer_0_1_load = load float* %S_block_buffer_0_1_addr_2, align 4

ST_164: tmp_70 [1/1] 2.20ns
:19  %tmp_70 = add i21 %tmp_61, %tmp_69

ST_164: tmp_95_cast [1/1] 0.00ns
:20  %tmp_95_cast = sext i21 %tmp_70 to i64

ST_164: S_addr_6 [1/1] 0.00ns
:21  %S_addr_6 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_95_cast

ST_164: tmp_82 [1/1] 2.20ns
:23  %tmp_82 = add i21 %tmp_75, %tmp_62

ST_164: tmp_83 [1/1] 2.20ns
:26  %tmp_83 = add i21 %tmp_75, %tmp_69

ST_164: U_addr_6 [1/1] 0.00ns
:29  %U_addr_6 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_95_cast

ST_164: V_addr_6 [1/1] 0.00ns
:32  %V_addr_6 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_95_cast

ST_164: stg_1098 [2/2] 2.61ns
:35  store float %S_block_buffer_0_1_load, float* %S_addr_6, align 4

ST_164: U_block_buffer_0_1_load [1/2] 2.71ns
:37  %U_block_buffer_0_1_load = load float* %U_block_buffer_0_1_addr_1, align 4

ST_164: stg_1100 [2/2] 2.61ns
:38  store float %U_block_buffer_0_1_load, float* %U_addr_6, align 4

ST_164: V_block_buffer_0_1_load [1/2] 2.71ns
:40  %V_block_buffer_0_1_load = load float* %V_block_buffer_0_1_addr_1, align 4

ST_164: stg_1102 [2/2] 2.61ns
:41  store float %V_block_buffer_0_1_load, float* %V_addr_6, align 4

ST_164: S_block_buffer_1_0_addr_2 [1/1] 0.00ns
:42  %S_block_buffer_1_0_addr_2 = getelementptr [392 x float]* %S_block_buffer_1_0, i64 0, i64 %tmp_20

ST_164: S_block_buffer_1_0_load [2/2] 2.71ns
:43  %S_block_buffer_1_0_load = load float* %S_block_buffer_1_0_addr_2, align 8

ST_164: U_block_buffer_1_0_addr_1 [1/1] 0.00ns
:45  %U_block_buffer_1_0_addr_1 = getelementptr [392 x float]* %U_block_buffer_1_0, i64 0, i64 %tmp_20

ST_164: U_block_buffer_1_0_load [2/2] 2.71ns
:46  %U_block_buffer_1_0_load = load float* %U_block_buffer_1_0_addr_1, align 8

ST_164: V_block_buffer_1_0_addr_1 [1/1] 0.00ns
:48  %V_block_buffer_1_0_addr_1 = getelementptr [392 x float]* %V_block_buffer_1_0, i64 0, i64 %tmp_20

ST_164: V_block_buffer_1_0_load [2/2] 2.71ns
:49  %V_block_buffer_1_0_load = load float* %V_block_buffer_1_0_addr_1, align 8


 <State 165>: 5.32ns
ST_165: tmp_97_cast [1/1] 0.00ns
:24  %tmp_97_cast = sext i21 %tmp_82 to i64

ST_165: S_addr_7 [1/1] 0.00ns
:25  %S_addr_7 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_97_cast

ST_165: U_addr_7 [1/1] 0.00ns
:30  %U_addr_7 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_97_cast

ST_165: V_addr_7 [1/1] 0.00ns
:33  %V_addr_7 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_97_cast

ST_165: stg_1113 [1/2] 2.61ns
:35  store float %S_block_buffer_0_1_load, float* %S_addr_6, align 4

ST_165: stg_1114 [1/2] 2.61ns
:38  store float %U_block_buffer_0_1_load, float* %U_addr_6, align 4

ST_165: stg_1115 [1/2] 2.61ns
:41  store float %V_block_buffer_0_1_load, float* %V_addr_6, align 4

ST_165: S_block_buffer_1_0_load [1/2] 2.71ns
:43  %S_block_buffer_1_0_load = load float* %S_block_buffer_1_0_addr_2, align 8

ST_165: stg_1117 [2/2] 2.61ns
:44  store float %S_block_buffer_1_0_load, float* %S_addr_7, align 4

ST_165: U_block_buffer_1_0_load [1/2] 2.71ns
:46  %U_block_buffer_1_0_load = load float* %U_block_buffer_1_0_addr_1, align 8

ST_165: stg_1119 [2/2] 2.61ns
:47  store float %U_block_buffer_1_0_load, float* %U_addr_7, align 4

ST_165: V_block_buffer_1_0_load [1/2] 2.71ns
:49  %V_block_buffer_1_0_load = load float* %V_block_buffer_1_0_addr_1, align 8

ST_165: stg_1121 [2/2] 2.61ns
:50  store float %V_block_buffer_1_0_load, float* %V_addr_7, align 4

ST_165: S_block_buffer_1_1_addr_2 [1/1] 0.00ns
:51  %S_block_buffer_1_1_addr_2 = getelementptr [392 x float]* %S_block_buffer_1_1, i64 0, i64 %tmp_20

ST_165: S_block_buffer_1_1_load [2/2] 2.71ns
:52  %S_block_buffer_1_1_load = load float* %S_block_buffer_1_1_addr_2, align 4

ST_165: U_block_buffer_1_1_addr_1 [1/1] 0.00ns
:54  %U_block_buffer_1_1_addr_1 = getelementptr [392 x float]* %U_block_buffer_1_1, i64 0, i64 %tmp_20

ST_165: U_block_buffer_1_1_load [2/2] 2.71ns
:55  %U_block_buffer_1_1_load = load float* %U_block_buffer_1_1_addr_1, align 4

ST_165: V_block_buffer_1_1_addr_1 [1/1] 0.00ns
:57  %V_block_buffer_1_1_addr_1 = getelementptr [392 x float]* %V_block_buffer_1_1, i64 0, i64 %tmp_20

ST_165: V_block_buffer_1_1_load [2/2] 2.71ns
:58  %V_block_buffer_1_1_load = load float* %V_block_buffer_1_1_addr_1, align 4


 <State 166>: 5.32ns
ST_166: tmp_98_cast [1/1] 0.00ns
:27  %tmp_98_cast = sext i21 %tmp_83 to i64

ST_166: S_addr_8 [1/1] 0.00ns
:28  %S_addr_8 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_98_cast

ST_166: U_addr_8 [1/1] 0.00ns
:31  %U_addr_8 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_98_cast

ST_166: V_addr_8 [1/1] 0.00ns
:34  %V_addr_8 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_98_cast

ST_166: stg_1132 [1/2] 2.61ns
:44  store float %S_block_buffer_1_0_load, float* %S_addr_7, align 4

ST_166: stg_1133 [1/2] 2.61ns
:47  store float %U_block_buffer_1_0_load, float* %U_addr_7, align 4

ST_166: stg_1134 [1/2] 2.61ns
:50  store float %V_block_buffer_1_0_load, float* %V_addr_7, align 4

ST_166: S_block_buffer_1_1_load [1/2] 2.71ns
:52  %S_block_buffer_1_1_load = load float* %S_block_buffer_1_1_addr_2, align 4

ST_166: stg_1136 [2/2] 2.61ns
:53  store float %S_block_buffer_1_1_load, float* %S_addr_8, align 4

ST_166: U_block_buffer_1_1_load [1/2] 2.71ns
:55  %U_block_buffer_1_1_load = load float* %U_block_buffer_1_1_addr_1, align 4

ST_166: stg_1138 [2/2] 2.61ns
:56  store float %U_block_buffer_1_1_load, float* %U_addr_8, align 4

ST_166: V_block_buffer_1_1_load [1/2] 2.71ns
:58  %V_block_buffer_1_1_load = load float* %V_block_buffer_1_1_addr_1, align 4

ST_166: stg_1140 [2/2] 2.61ns
:59  store float %V_block_buffer_1_1_load, float* %V_addr_8, align 4


 <State 167>: 2.61ns
ST_167: stg_1141 [1/2] 2.61ns
:53  store float %S_block_buffer_1_1_load, float* %S_addr_8, align 4

ST_167: stg_1142 [1/2] 2.61ns
:56  store float %U_block_buffer_1_1_load, float* %U_addr_8, align 4

ST_167: stg_1143 [1/2] 2.61ns
:59  store float %V_block_buffer_1_1_load, float* %V_addr_8, align 4

ST_167: empty_17 [1/1] 0.00ns
:60  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1810, i32 %tmp_30)

ST_167: stg_1145 [1/1] 0.00ns
:61  br label %._crit_edge40


 <State 168>: 5.28ns
ST_168: indvar_flatten8 [1/1] 0.00ns
.preheader30:0  %indvar_flatten8 = phi i19 [ %indvar_flatten_next9, %._crit_edge43 ], [ 0, %.preheader32 ]

ST_168: proc6 [1/1] 0.00ns
.preheader30:1  %proc6 = phi i9 [ %tmp_27_mid2, %._crit_edge43 ], [ 0, %.preheader32 ]

ST_168: i7 [1/1] 0.00ns
.preheader30:4  %i7 = phi i10 [ %i_2, %._crit_edge43 ], [ 0, %.preheader32 ]

ST_168: tmp_27 [1/1] 0.00ns
.preheader30:5  %tmp_27 = zext i9 %proc6 to i64

ST_168: diag_1_addr_8 [1/1] 0.00ns
.preheader30:6  %diag_1_addr_8 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_27

ST_168: diag_1_load_5 [2/2] 2.71ns
.preheader30:7  %diag_1_load_5 = load i32* %diag_1_addr_8, align 4

ST_168: diag_2_addr_8 [1/1] 0.00ns
.preheader30:8  %diag_2_addr_8 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_27

ST_168: diag_2_load_5 [2/2] 2.71ns
.preheader30:9  %diag_2_load_5 = load i32* %diag_2_addr_8, align 4

ST_168: exitcond_flatten1 [1/1] 2.33ns
.preheader30:13  %exitcond_flatten1 = icmp eq i19 %indvar_flatten8, -216960

ST_168: indvar_flatten_next9 [1/1] 2.08ns
.preheader30:14  %indvar_flatten_next9 = add i19 %indvar_flatten8, 1

ST_168: proc_6 [1/1] 1.84ns
.preheader31:0  %proc_6 = add i9 %proc6, 1

ST_168: exitcond6 [1/1] 2.07ns
.preheader31:3  %exitcond6 = icmp eq i10 %i7, -240

ST_168: i7_mid2 [1/1] 1.37ns
.preheader31:4  %i7_mid2 = select i1 %exitcond6, i10 0, i10 %i7

ST_168: tmp_27_mid1 [1/1] 0.00ns
.preheader31:5  %tmp_27_mid1 = zext i9 %proc_6 to i64

ST_168: tmp_27_mid2 [1/1] 1.37ns
.preheader31:6  %tmp_27_mid2 = select i1 %exitcond6, i9 %proc_6, i9 %proc6

ST_168: diag_1_addr_9 [1/1] 0.00ns
.preheader31:9  %diag_1_addr_9 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_27_mid1

ST_168: diag_1_load_6 [2/2] 2.71ns
.preheader31:10  %diag_1_load_6 = load i32* %diag_1_addr_9, align 4

ST_168: diag_2_addr_9 [1/1] 0.00ns
.preheader31:11  %diag_2_addr_9 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_27_mid1

ST_168: diag_2_load_6 [2/2] 2.71ns
.preheader31:12  %diag_2_load_6 = load i32* %diag_2_addr_9, align 4

ST_168: i_2 [1/1] 1.84ns
._crit_edge43:0  %i_2 = add i10 %i7_mid2, 1

ST_168: stg_1166 [1/1] 0.00ns
._crit_edge43:1  br label %.preheader30


 <State 169>: 7.97ns
ST_169: diag_1_load_5 [1/2] 2.71ns
.preheader30:7  %diag_1_load_5 = load i32* %diag_1_addr_8, align 4

ST_169: diag_2_load_5 [1/2] 2.71ns
.preheader30:9  %diag_2_load_5 = load i32* %diag_2_addr_8, align 4

ST_169: tmp_i11 [1/1] 2.52ns
.preheader30:10  %tmp_i11 = icmp sgt i32 %diag_1_load_5, %diag_2_load_5

ST_169: top_left_7 [1/1] 1.37ns
.preheader30:11  %top_left_7 = select i1 %tmp_i11, i32 %diag_2_load_5, i32 %diag_1_load_5

ST_169: bottom_right_7 [1/1] 1.37ns
.preheader30:12  %bottom_right_7 = select i1 %tmp_i11, i32 %diag_1_load_5, i32 %diag_2_load_5

ST_169: diag_1_load_6 [1/2] 2.71ns
.preheader31:10  %diag_1_load_6 = load i32* %diag_1_addr_9, align 4

ST_169: diag_2_load_6 [1/2] 2.71ns
.preheader31:12  %diag_2_load_6 = load i32* %diag_2_addr_9, align 4

ST_169: tmp_i11_mid1 [1/1] 2.52ns
.preheader31:13  %tmp_i11_mid1 = icmp sgt i32 %diag_1_load_6, %diag_2_load_6

ST_169: top_left_16_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_16_mid2)
.preheader31:14  %top_left_16_mid1 = select i1 %tmp_i11_mid1, i32 %diag_2_load_6, i32 %diag_1_load_6

ST_169: top_left_16_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader31:15  %top_left_16_mid2 = select i1 %exitcond6, i32 %top_left_16_mid1, i32 %top_left_7

ST_169: bottom_right_25_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_25_mid2)
.preheader31:16  %bottom_right_25_mid1 = select i1 %tmp_i11_mid1, i32 %diag_1_load_6, i32 %diag_2_load_6

ST_169: bottom_right_25_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader31:17  %bottom_right_25_mid2 = select i1 %exitcond6, i32 %bottom_right_25_mid1, i32 %bottom_right_7


 <State 170>: 8.58ns
ST_170: top_left_6 [1/1] 0.00ns
.preheader30:2  %top_left_6 = phi i32 [ %idx2_idx1_i461_top_left_6, %._crit_edge43 ], [ %top_left_4, %.preheader32 ]

ST_170: bottom_right_6 [1/1] 0.00ns
.preheader30:3  %bottom_right_6 = phi i32 [ %bottom_right_write_assign_i, %._crit_edge43 ], [ %bottom_right_4, %.preheader32 ]

ST_170: stg_1181 [1/1] 1.57ns
.preheader30:15  br i1 %exitcond_flatten1, label %.preheader28, label %.preheader31

ST_170: stg_1182 [1/1] 0.00ns
.preheader31:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_rd_off_r_str)

ST_170: empty_19 [1/1] 0.00ns
.preheader31:2  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 307328, i64 307328, i64 307328)

ST_170: tmp_27_mid2_cast [1/1] 0.00ns
.preheader31:7  %tmp_27_mid2_cast = zext i9 %tmp_27_mid2 to i19

ST_170: tmp_60 [1/1] 6.38ns
.preheader31:8  %tmp_60 = mul i19 %tmp_27_mid2_cast, 784

ST_170: i7_cast [1/1] 0.00ns
.preheader31:18  %i7_cast = zext i10 %i7_mid2 to i32

ST_170: stg_1187 [1/1] 0.00ns
.preheader31:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1811) nounwind

ST_170: tmp_32 [1/1] 0.00ns
.preheader31:20  %tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1811)

ST_170: stg_1189 [1/1] 0.00ns
.preheader31:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_170: tmp_33 [1/1] 2.07ns
.preheader31:22  %tmp_33 = icmp eq i10 %i7_mid2, 0

ST_170: idx2_idx1_i461_top_left_6 [1/1] 1.37ns (out node of the LUT)
.preheader31:23  %idx2_idx1_i461_top_left_6 = select i1 %tmp_33, i32 %top_left_16_mid2, i32 %top_left_6

ST_170: bottom_right_write_assign_i [1/1] 1.37ns (out node of the LUT)
.preheader31:24  %bottom_right_write_assign_i = select i1 %tmp_33, i32 %bottom_right_25_mid2, i32 %bottom_right_6

ST_170: tmp_34 [1/1] 2.52ns
.preheader31:25  %tmp_34 = icmp eq i32 %idx2_idx1_i461_top_left_6, 784

ST_170: tmp_37 [1/1] 2.52ns
.preheader31:26  %tmp_37 = icmp eq i32 %bottom_right_write_assign_i, 784

ST_170: or_cond9 [1/1] 1.37ns
.preheader31:27  %or_cond9 = or i1 %tmp_34, %tmp_37

ST_170: stg_1196 [1/1] 0.00ns
.preheader31:28  br i1 %or_cond9, label %._crit_edge43, label %17

ST_170: tmp_39 [1/1] 2.52ns
:0  %tmp_39 = icmp eq i32 %i7_cast, %bottom_right_write_assign_i

ST_170: tmp_40 [1/1] 2.52ns
:1  %tmp_40 = icmp eq i32 %i7_cast, %idx2_idx1_i461_top_left_6

ST_170: or_cond [1/1] 1.37ns
:2  %or_cond = or i1 %tmp_39, %tmp_40

ST_170: stg_1200 [1/1] 0.00ns
:3  br i1 %or_cond, label %._crit_edge45, label %18

ST_170: tmp_87 [1/1] 0.00ns
:0  %tmp_87 = trunc i32 %idx2_idx1_i461_top_left_6 to i21

ST_170: tmp_45_cast1 [1/1] 0.00ns
:1  %tmp_45_cast1 = zext i10 %i7_mid2 to i19

ST_170: tmp_45_cast [1/1] 0.00ns
:2  %tmp_45_cast = zext i10 %i7_mid2 to i21

ST_170: tmp_88 [1/1] 6.38ns
:3  %tmp_88 = mul i21 784, %tmp_45_cast

ST_170: tmp_89 [1/1] 2.20ns
:4  %tmp_89 = add i21 %tmp_87, %tmp_88

ST_170: tmp_90 [1/1] 2.08ns
:9  %tmp_90 = add i19 %tmp_45_cast1, %tmp_60

ST_170: tmp_91 [1/1] 0.00ns
:23  %tmp_91 = trunc i32 %bottom_right_write_assign_i to i21

ST_170: tmp_92 [1/1] 2.20ns
:24  %tmp_92 = add i21 %tmp_91, %tmp_88

ST_170: empty_18 [1/1] 0.00ns
._crit_edge45:0  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1811, i32 %tmp_32)

ST_170: stg_1210 [1/1] 0.00ns
._crit_edge45:1  br label %._crit_edge43


 <State 171>: 2.61ns
ST_171: tmp_102_cast [1/1] 0.00ns
:5  %tmp_102_cast = sext i21 %tmp_89 to i64

ST_171: S_addr_9 [1/1] 0.00ns
:6  %S_addr_9 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_102_cast

ST_171: U_addr_9 [1/1] 0.00ns
:7  %U_addr_9 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_102_cast

ST_171: V_addr_9 [1/1] 0.00ns
:8  %V_addr_9 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_102_cast

ST_171: S_load_4 [4/4] 2.61ns
:17  %S_load_4 = load float* %S_addr_9, align 4

ST_171: U_load_4 [4/4] 2.61ns
:19  %U_load_4 = load float* %U_addr_9, align 4

ST_171: V_load_4 [4/4] 2.61ns
:21  %V_load_4 = load float* %V_addr_9, align 4

ST_171: tmp_104_cast [1/1] 0.00ns
:25  %tmp_104_cast = sext i21 %tmp_92 to i64

ST_171: S_addr_10 [1/1] 0.00ns
:26  %S_addr_10 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_104_cast

ST_171: U_addr_10 [1/1] 0.00ns
:27  %U_addr_10 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_104_cast

ST_171: V_addr_10 [1/1] 0.00ns
:28  %V_addr_10 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_104_cast

ST_171: S_load_5 [4/4] 2.61ns
:29  %S_load_5 = load float* %S_addr_10, align 4

ST_171: U_load_5 [4/4] 2.61ns
:31  %U_load_5 = load float* %U_addr_10, align 4

ST_171: V_load_5 [4/4] 2.61ns
:33  %V_load_5 = load float* %V_addr_10, align 4


 <State 172>: 2.61ns
ST_172: S_load_4 [3/4] 2.61ns
:17  %S_load_4 = load float* %S_addr_9, align 4

ST_172: U_load_4 [3/4] 2.61ns
:19  %U_load_4 = load float* %U_addr_9, align 4

ST_172: V_load_4 [3/4] 2.61ns
:21  %V_load_4 = load float* %V_addr_9, align 4

ST_172: S_load_5 [3/4] 2.61ns
:29  %S_load_5 = load float* %S_addr_10, align 4

ST_172: U_load_5 [3/4] 2.61ns
:31  %U_load_5 = load float* %U_addr_10, align 4

ST_172: V_load_5 [3/4] 2.61ns
:33  %V_load_5 = load float* %V_addr_10, align 4


 <State 173>: 2.61ns
ST_173: S_load_4 [2/4] 2.61ns
:17  %S_load_4 = load float* %S_addr_9, align 4

ST_173: U_load_4 [2/4] 2.61ns
:19  %U_load_4 = load float* %U_addr_9, align 4

ST_173: V_load_4 [2/4] 2.61ns
:21  %V_load_4 = load float* %V_addr_9, align 4

ST_173: S_load_5 [2/4] 2.61ns
:29  %S_load_5 = load float* %S_addr_10, align 4

ST_173: U_load_5 [2/4] 2.61ns
:31  %U_load_5 = load float* %U_addr_10, align 4

ST_173: V_load_5 [2/4] 2.61ns
:33  %V_load_5 = load float* %V_addr_10, align 4


 <State 174>: 5.32ns
ST_174: tmp_103_cast [1/1] 0.00ns
:10  %tmp_103_cast = zext i19 %tmp_90 to i64

ST_174: S_c_buffer_0_addr [1/1] 0.00ns
:11  %S_c_buffer_0_addr = getelementptr [307328 x float]* %S_c_buffer_0, i64 0, i64 %tmp_103_cast

ST_174: S_c_buffer_1_addr [1/1] 0.00ns
:12  %S_c_buffer_1_addr = getelementptr [307328 x float]* %S_c_buffer_1, i64 0, i64 %tmp_103_cast

ST_174: U_c_buffer_0_addr [1/1] 0.00ns
:13  %U_c_buffer_0_addr = getelementptr [307328 x float]* %U_c_buffer_0, i64 0, i64 %tmp_103_cast

ST_174: V_c_buffer_1_addr [1/1] 0.00ns
:14  %V_c_buffer_1_addr = getelementptr [307328 x float]* %V_c_buffer_1, i64 0, i64 %tmp_103_cast

ST_174: U_c_buffer_1_addr [1/1] 0.00ns
:15  %U_c_buffer_1_addr = getelementptr [307328 x float]* %U_c_buffer_1, i64 0, i64 %tmp_103_cast

ST_174: V_c_buffer_0_addr [1/1] 0.00ns
:16  %V_c_buffer_0_addr = getelementptr [307328 x float]* %V_c_buffer_0, i64 0, i64 %tmp_103_cast

ST_174: S_load_4 [1/4] 2.61ns
:17  %S_load_4 = load float* %S_addr_9, align 4

ST_174: stg_1245 [1/1] 2.71ns
:18  store float %S_load_4, float* %S_c_buffer_0_addr, align 8

ST_174: U_load_4 [1/4] 2.61ns
:19  %U_load_4 = load float* %U_addr_9, align 4

ST_174: stg_1247 [1/1] 2.71ns
:20  store float %U_load_4, float* %U_c_buffer_0_addr, align 8

ST_174: V_load_4 [1/4] 2.61ns
:21  %V_load_4 = load float* %V_addr_9, align 4

ST_174: stg_1249 [1/1] 2.71ns
:22  store float %V_load_4, float* %V_c_buffer_0_addr, align 8

ST_174: S_load_5 [1/4] 2.61ns
:29  %S_load_5 = load float* %S_addr_10, align 4

ST_174: stg_1251 [1/1] 2.71ns
:30  store float %S_load_5, float* %S_c_buffer_1_addr, align 4

ST_174: U_load_5 [1/4] 2.61ns
:31  %U_load_5 = load float* %U_addr_10, align 4

ST_174: stg_1253 [1/1] 2.71ns
:32  store float %U_load_5, float* %U_c_buffer_1_addr, align 4

ST_174: V_load_5 [1/4] 2.61ns
:33  %V_load_5 = load float* %V_addr_10, align 4

ST_174: stg_1255 [1/1] 2.71ns
:34  store float %V_load_5, float* %V_c_buffer_1_addr, align 4

ST_174: stg_1256 [1/1] 0.00ns
:35  br label %._crit_edge45


 <State 175>: 5.28ns
ST_175: indvar_flatten1 [1/1] 0.00ns
.preheader28:0  %indvar_flatten1 = phi i19 [ %indvar_flatten_next1, %._crit_edge48 ], [ 0, %.preheader30 ]

ST_175: proc8 [1/1] 0.00ns
.preheader28:1  %proc8 = phi i9 [ %tmp_31_mid2, %._crit_edge48 ], [ 0, %.preheader30 ]

ST_175: off_row [1/1] 0.00ns
.preheader28:4  %off_row = phi i10 [ %off_row_1, %._crit_edge48 ], [ 0, %.preheader30 ]

ST_175: tmp_31 [1/1] 0.00ns
.preheader28:5  %tmp_31 = zext i9 %proc8 to i64

ST_175: diag_1_addr_10 [1/1] 0.00ns
.preheader28:6  %diag_1_addr_10 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_31

ST_175: diag_1_load_7 [2/2] 2.71ns
.preheader28:7  %diag_1_load_7 = load i32* %diag_1_addr_10, align 4

ST_175: diag_2_addr_10 [1/1] 0.00ns
.preheader28:8  %diag_2_addr_10 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_31

ST_175: diag_2_load_7 [2/2] 2.71ns
.preheader28:9  %diag_2_load_7 = load i32* %diag_2_addr_10, align 4

ST_175: exitcond_flatten2 [1/1] 2.33ns
.preheader28:13  %exitcond_flatten2 = icmp eq i19 %indvar_flatten1, -216960

ST_175: indvar_flatten_next1 [1/1] 2.08ns
.preheader28:14  %indvar_flatten_next1 = add i19 %indvar_flatten1, 1

ST_175: proc_8 [1/1] 1.84ns
.preheader29:0  %proc_8 = add i9 %proc8, 1

ST_175: exitcond8 [1/1] 2.07ns
.preheader29:3  %exitcond8 = icmp eq i10 %off_row, -240

ST_175: off_row_mid2 [1/1] 1.37ns
.preheader29:4  %off_row_mid2 = select i1 %exitcond8, i10 0, i10 %off_row

ST_175: tmp_31_mid1 [1/1] 0.00ns
.preheader29:5  %tmp_31_mid1 = zext i9 %proc_8 to i64

ST_175: tmp_31_mid2 [1/1] 1.37ns
.preheader29:6  %tmp_31_mid2 = select i1 %exitcond8, i9 %proc_8, i9 %proc8

ST_175: diag_1_addr_11 [1/1] 0.00ns
.preheader29:10  %diag_1_addr_11 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_31_mid1

ST_175: diag_1_load_8 [2/2] 2.71ns
.preheader29:11  %diag_1_load_8 = load i32* %diag_1_addr_11, align 4

ST_175: diag_2_addr_11 [1/1] 0.00ns
.preheader29:12  %diag_2_addr_11 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_31_mid1

ST_175: diag_2_load_8 [2/2] 2.71ns
.preheader29:13  %diag_2_load_8 = load i32* %diag_2_addr_11, align 4

ST_175: off_row_1 [1/1] 1.84ns
._crit_edge48:0  %off_row_1 = add i10 %off_row_mid2, 1

ST_175: stg_1277 [1/1] 0.00ns
._crit_edge48:1  br label %.preheader28


 <State 176>: 7.97ns
ST_176: diag_1_load_7 [1/2] 2.71ns
.preheader28:7  %diag_1_load_7 = load i32* %diag_1_addr_10, align 4

ST_176: diag_2_load_7 [1/2] 2.71ns
.preheader28:9  %diag_2_load_7 = load i32* %diag_2_addr_10, align 4

ST_176: tmp_i12 [1/1] 2.52ns
.preheader28:10  %tmp_i12 = icmp sgt i32 %diag_1_load_7, %diag_2_load_7

ST_176: top_left_10 [1/1] 1.37ns
.preheader28:11  %top_left_10 = select i1 %tmp_i12, i32 %diag_2_load_7, i32 %diag_1_load_7

ST_176: bottom_right_10 [1/1] 1.37ns
.preheader28:12  %bottom_right_10 = select i1 %tmp_i12, i32 %diag_1_load_7, i32 %diag_2_load_7

ST_176: tmp_31_mid2_cast1 [1/1] 0.00ns
.preheader29:7  %tmp_31_mid2_cast1 = zext i9 %tmp_31_mid2 to i19

ST_176: tmp_84 [1/1] 6.38ns
.preheader29:9  %tmp_84 = mul i19 %tmp_31_mid2_cast1, 784

ST_176: diag_1_load_8 [1/2] 2.71ns
.preheader29:11  %diag_1_load_8 = load i32* %diag_1_addr_11, align 4

ST_176: diag_2_load_8 [1/2] 2.71ns
.preheader29:13  %diag_2_load_8 = load i32* %diag_2_addr_11, align 4

ST_176: tmp_i12_mid1 [1/1] 2.52ns
.preheader29:30  %tmp_i12_mid1 = icmp sgt i32 %diag_1_load_8, %diag_2_load_8

ST_176: top_left_19_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_19_mid2)
.preheader29:31  %top_left_19_mid1 = select i1 %tmp_i12_mid1, i32 %diag_2_load_8, i32 %diag_1_load_8

ST_176: top_left_19_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader29:32  %top_left_19_mid2 = select i1 %exitcond8, i32 %top_left_19_mid1, i32 %top_left_10

ST_176: bottom_right_26_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_26_mid2)
.preheader29:33  %bottom_right_26_mid1 = select i1 %tmp_i12_mid1, i32 %diag_1_load_8, i32 %diag_2_load_8

ST_176: bottom_right_26_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader29:34  %bottom_right_26_mid2 = select i1 %exitcond8, i32 %bottom_right_26_mid1, i32 %bottom_right_10


 <State 177>: 7.33ns
ST_177: top_left_9 [1/1] 0.00ns
.preheader28:2  %top_left_9 = phi i32 [ %idx2_idx1_i466_top_left_9, %._crit_edge48 ], [ %top_left_6, %.preheader30 ]

ST_177: bottom_right_9 [1/1] 0.00ns
.preheader28:3  %bottom_right_9 = phi i32 [ %bottom_right_write_assign_i1, %._crit_edge48 ], [ %bottom_right_6, %.preheader30 ]

ST_177: stg_1294 [1/1] 1.57ns
.preheader28:15  br i1 %exitcond_flatten2, label %.preheader26, label %.preheader29

ST_177: tmp_31_mid2_cast [1/1] 0.00ns
.preheader29:8  %tmp_31_mid2_cast = zext i9 %tmp_31_mid2 to i64

ST_177: K2x2_0_0_addr_1 [1/1] 0.00ns
.preheader29:14  %K2x2_0_0_addr_1 = getelementptr [392 x float]* %K2x2_0_0, i64 0, i64 %tmp_31_mid2_cast

ST_177: K2x2_0_0_load [2/2] 2.71ns
.preheader29:15  %K2x2_0_0_load = load float* %K2x2_0_0_addr_1, align 4

ST_177: K2x2_0_1_addr_1 [1/1] 0.00ns
.preheader29:16  %K2x2_0_1_addr_1 = getelementptr [392 x float]* %K2x2_0_1, i64 0, i64 %tmp_31_mid2_cast

ST_177: K2x2_0_1_load [2/2] 2.71ns
.preheader29:17  %K2x2_0_1_load = load float* %K2x2_0_1_addr_1, align 4

ST_177: K2x2_1_0_addr_1 [1/1] 0.00ns
.preheader29:18  %K2x2_1_0_addr_1 = getelementptr [392 x float]* %K2x2_1_0, i64 0, i64 %tmp_31_mid2_cast

ST_177: K2x2_1_0_load [2/2] 2.71ns
.preheader29:19  %K2x2_1_0_load = load float* %K2x2_1_0_addr_1, align 4

ST_177: K2x2_1_1_addr_1 [1/1] 0.00ns
.preheader29:20  %K2x2_1_1_addr_1 = getelementptr [392 x float]* %K2x2_1_1, i64 0, i64 %tmp_31_mid2_cast

ST_177: K2x2_1_1_load [2/2] 2.71ns
.preheader29:21  %K2x2_1_1_load = load float* %K2x2_1_1_addr_1, align 4

ST_177: J2x2_0_0_addr_1 [1/1] 0.00ns
.preheader29:22  %J2x2_0_0_addr_1 = getelementptr [392 x float]* %J2x2_0_0, i64 0, i64 %tmp_31_mid2_cast

ST_177: J2x2_0_0_load [2/2] 2.71ns
.preheader29:23  %J2x2_0_0_load = load float* %J2x2_0_0_addr_1, align 4

ST_177: J2x2_0_1_addr_1 [1/1] 0.00ns
.preheader29:24  %J2x2_0_1_addr_1 = getelementptr [392 x float]* %J2x2_0_1, i64 0, i64 %tmp_31_mid2_cast

ST_177: J2x2_0_1_load [2/2] 2.71ns
.preheader29:25  %J2x2_0_1_load = load float* %J2x2_0_1_addr_1, align 4

ST_177: J2x2_1_0_addr_1 [1/1] 0.00ns
.preheader29:26  %J2x2_1_0_addr_1 = getelementptr [392 x float]* %J2x2_1_0, i64 0, i64 %tmp_31_mid2_cast

ST_177: J2x2_1_0_load [2/2] 2.71ns
.preheader29:27  %J2x2_1_0_load = load float* %J2x2_1_0_addr_1, align 4

ST_177: J2x2_1_1_addr_1 [1/1] 0.00ns
.preheader29:28  %J2x2_1_1_addr_1 = getelementptr [392 x float]* %J2x2_1_1, i64 0, i64 %tmp_31_mid2_cast

ST_177: J2x2_1_1_load [2/2] 2.71ns
.preheader29:29  %J2x2_1_1_load = load float* %J2x2_1_1_addr_1, align 4

ST_177: off_row_cast9 [1/1] 0.00ns
.preheader29:35  %off_row_cast9 = zext i10 %off_row_mid2 to i32

ST_177: tmp_76 [1/1] 0.00ns
.preheader29:37  %tmp_76 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str1812)

ST_177: tmp_36 [1/1] 2.07ns
.preheader29:39  %tmp_36 = icmp eq i10 %off_row_mid2, 0

ST_177: idx2_idx1_i466_top_left_9 [1/1] 1.37ns (out node of the LUT)
.preheader29:40  %idx2_idx1_i466_top_left_9 = select i1 %tmp_36, i32 %top_left_19_mid2, i32 %top_left_9

ST_177: bottom_right_write_assign_i1 [1/1] 1.37ns (out node of the LUT)
.preheader29:41  %bottom_right_write_assign_i1 = select i1 %tmp_36, i32 %bottom_right_26_mid2, i32 %bottom_right_9

ST_177: tmp_38 [1/1] 2.52ns
.preheader29:42  %tmp_38 = icmp eq i32 %idx2_idx1_i466_top_left_9, 784

ST_177: tmp_43 [1/1] 2.52ns
.preheader29:43  %tmp_43 = icmp eq i32 %bottom_right_write_assign_i1, 784

ST_177: or_cond10 [1/1] 1.37ns
.preheader29:44  %or_cond10 = or i1 %tmp_38, %tmp_43

ST_177: stg_1320 [1/1] 0.00ns
.preheader29:45  br i1 %or_cond10, label %._crit_edge48, label %19

ST_177: tmp_48 [1/1] 2.52ns
:0  %tmp_48 = icmp eq i32 %off_row_cast9, %bottom_right_write_assign_i1

ST_177: tmp_49 [1/1] 2.52ns
:1  %tmp_49 = icmp eq i32 %off_row_cast9, %idx2_idx1_i466_top_left_9

ST_177: or_cond1 [1/1] 1.37ns
:2  %or_cond1 = or i1 %tmp_48, %tmp_49

ST_177: stg_1324 [1/1] 0.00ns
:3  br i1 %or_cond1, label %._crit_edge50, label %20

ST_177: tmp_53_cast [1/1] 0.00ns
:0  %tmp_53_cast = zext i10 %off_row_mid2 to i19

ST_177: tmp_94 [1/1] 2.08ns
:1  %tmp_94 = add i19 %tmp_84, %tmp_53_cast

ST_177: tmp_106_cast [1/1] 0.00ns
:2  %tmp_106_cast = zext i19 %tmp_94 to i64

ST_177: S_c_buffer_0_addr_1 [1/1] 0.00ns
:3  %S_c_buffer_0_addr_1 = getelementptr [307328 x float]* %S_c_buffer_0, i64 0, i64 %tmp_106_cast

ST_177: S_c_buffer_1_addr_1 [1/1] 0.00ns
:4  %S_c_buffer_1_addr_1 = getelementptr [307328 x float]* %S_c_buffer_1, i64 0, i64 %tmp_106_cast

ST_177: U_c_buffer_0_addr_1 [1/1] 0.00ns
:5  %U_c_buffer_0_addr_1 = getelementptr [307328 x float]* %U_c_buffer_0, i64 0, i64 %tmp_106_cast

ST_177: V_c_buffer_1_addr_1 [1/1] 0.00ns
:6  %V_c_buffer_1_addr_1 = getelementptr [307328 x float]* %V_c_buffer_1, i64 0, i64 %tmp_106_cast

ST_177: U_c_buffer_1_addr_1 [1/1] 0.00ns
:7  %U_c_buffer_1_addr_1 = getelementptr [307328 x float]* %U_c_buffer_1, i64 0, i64 %tmp_106_cast

ST_177: V_c_buffer_0_addr_1 [1/1] 0.00ns
:8  %V_c_buffer_0_addr_1 = getelementptr [307328 x float]* %V_c_buffer_0, i64 0, i64 %tmp_106_cast

ST_177: w_in_1 [2/2] 2.71ns
:9  %w_in_1 = load float* %S_c_buffer_0_addr_1, align 8

ST_177: vw_in_1 [2/2] 2.71ns
:10  %vw_in_1 = load float* %V_c_buffer_0_addr_1, align 8

ST_177: uw_in_1 [2/2] 2.71ns
:11  %uw_in_1 = load float* %U_c_buffer_0_addr_1, align 8

ST_177: x_in_1 [2/2] 2.71ns
:12  %x_in_1 = load float* %S_c_buffer_1_addr_1, align 4

ST_177: vx_in_1 [2/2] 2.71ns
:13  %vx_in_1 = load float* %V_c_buffer_1_addr_1, align 4

ST_177: ux_in_1 [2/2] 2.71ns
:14  %ux_in_1 = load float* %U_c_buffer_1_addr_1, align 4

ST_177: empty_20 [1/1] 0.00ns
._crit_edge50:0  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str1812, i32 %tmp_76)

ST_177: stg_1341 [1/1] 0.00ns
._crit_edge50:1  br label %._crit_edge48


 <State 178>: 8.41ns
ST_178: stg_1342 [1/1] 0.00ns
.preheader29:1  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @L_svd_calc_off_r_str)

ST_178: empty_21 [1/1] 0.00ns
.preheader29:2  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 307328, i64 307328, i64 307328)

ST_178: K2x2_0_0_load [1/2] 2.71ns
.preheader29:15  %K2x2_0_0_load = load float* %K2x2_0_0_addr_1, align 4

ST_178: K2x2_0_1_load [1/2] 2.71ns
.preheader29:17  %K2x2_0_1_load = load float* %K2x2_0_1_addr_1, align 4

ST_178: K2x2_1_0_load [1/2] 2.71ns
.preheader29:19  %K2x2_1_0_load = load float* %K2x2_1_0_addr_1, align 4

ST_178: K2x2_1_1_load [1/2] 2.71ns
.preheader29:21  %K2x2_1_1_load = load float* %K2x2_1_1_addr_1, align 4

ST_178: J2x2_0_0_load [1/2] 2.71ns
.preheader29:23  %J2x2_0_0_load = load float* %J2x2_0_0_addr_1, align 4

ST_178: J2x2_0_1_load [1/2] 2.71ns
.preheader29:25  %J2x2_0_1_load = load float* %J2x2_0_1_addr_1, align 4

ST_178: J2x2_1_0_load [1/2] 2.71ns
.preheader29:27  %J2x2_1_0_load = load float* %J2x2_1_0_addr_1, align 4

ST_178: J2x2_1_1_load [1/2] 2.71ns
.preheader29:29  %J2x2_1_1_load = load float* %J2x2_1_1_addr_1, align 4

ST_178: stg_1352 [1/1] 0.00ns
.preheader29:36  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str1812) nounwind

ST_178: stg_1353 [1/1] 0.00ns
.preheader29:38  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_178: w_in_1 [1/2] 2.71ns
:9  %w_in_1 = load float* %S_c_buffer_0_addr_1, align 8

ST_178: vw_in_1 [1/2] 2.71ns
:10  %vw_in_1 = load float* %V_c_buffer_0_addr_1, align 8

ST_178: uw_in_1 [1/2] 2.71ns
:11  %uw_in_1 = load float* %U_c_buffer_0_addr_1, align 8

ST_178: x_in_1 [1/2] 2.71ns
:12  %x_in_1 = load float* %S_c_buffer_1_addr_1, align 4

ST_178: vx_in_1 [1/2] 2.71ns
:13  %vx_in_1 = load float* %V_c_buffer_1_addr_1, align 4

ST_178: ux_in_1 [1/2] 2.71ns
:14  %ux_in_1 = load float* %U_c_buffer_1_addr_1, align 4

ST_178: tmp_i15 [4/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_178: tmp_3_i10 [4/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_178: tmp_i16 [4/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_178: tmp_3_i11 [4/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_178: tmp_i17 [4/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_178: tmp_3_i12 [4/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_178: tmp_i18 [4/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_178: tmp_3_i13 [4/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_178: tmp_i19 [4/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_178: tmp_3_i14 [4/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_178: tmp_i20 [4/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_178: tmp_3_i15 [4/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 179>: 5.70ns
ST_179: tmp_i15 [3/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_179: tmp_3_i10 [3/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_179: tmp_i16 [3/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_179: tmp_3_i11 [3/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_179: tmp_i17 [3/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_179: tmp_3_i12 [3/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_179: tmp_i18 [3/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_179: tmp_3_i13 [3/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_179: tmp_i19 [3/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_179: tmp_3_i14 [3/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_179: tmp_i20 [3/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_179: tmp_3_i15 [3/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 180>: 5.70ns
ST_180: tmp_i15 [2/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_180: tmp_3_i10 [2/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_180: tmp_i16 [2/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_180: tmp_3_i11 [2/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_180: tmp_i17 [2/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_180: tmp_3_i12 [2/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_180: tmp_i18 [2/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_180: tmp_3_i13 [2/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_180: tmp_i19 [2/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_180: tmp_3_i14 [2/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_180: tmp_i20 [2/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_180: tmp_3_i15 [2/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 181>: 5.70ns
ST_181: tmp_i15 [1/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_181: tmp_3_i10 [1/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_181: tmp_i16 [1/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_181: tmp_3_i11 [1/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_181: tmp_i17 [1/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_181: tmp_3_i12 [1/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_181: tmp_i18 [1/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_181: tmp_3_i13 [1/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_181: tmp_i19 [1/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_181: tmp_3_i14 [1/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_181: tmp_i20 [1/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_181: tmp_3_i15 [1/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 182>: 7.26ns
ST_182: w_out_3 [5/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_182: x_out [5/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_182: vw_out_1 [5/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_182: vx_out_1 [5/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_182: uw_out_1 [5/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_182: ux_out_1 [5/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 183>: 7.26ns
ST_183: w_out_3 [4/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_183: x_out [4/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_183: vw_out_1 [4/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_183: vx_out_1 [4/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_183: uw_out_1 [4/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_183: ux_out_1 [4/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 184>: 7.26ns
ST_184: w_out_3 [3/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_184: x_out [3/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_184: vw_out_1 [3/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_184: vx_out_1 [3/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_184: uw_out_1 [3/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_184: ux_out_1 [3/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 185>: 7.26ns
ST_185: w_out_3 [2/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_185: x_out [2/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_185: vw_out_1 [2/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_185: vx_out_1 [2/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_185: uw_out_1 [2/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_185: ux_out_1 [2/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 186>: 7.26ns
ST_186: w_out_3 [1/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_186: x_out [1/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_186: vw_out_1 [1/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_186: vx_out_1 [1/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_186: uw_out_1 [1/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_186: ux_out_1 [1/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 187>: 2.71ns
ST_187: stg_1438 [1/1] 2.71ns
:33  store float %w_out_3, float* %S_c_buffer_0_addr_1, align 8

ST_187: stg_1439 [1/1] 2.71ns
:34  store float %x_out, float* %S_c_buffer_1_addr_1, align 4

ST_187: stg_1440 [1/1] 2.71ns
:35  store float %vw_out_1, float* %V_c_buffer_0_addr_1, align 8

ST_187: stg_1441 [1/1] 2.71ns
:36  store float %vx_out_1, float* %V_c_buffer_1_addr_1, align 4

ST_187: stg_1442 [1/1] 2.71ns
:37  store float %uw_out_1, float* %U_c_buffer_0_addr_1, align 8

ST_187: stg_1443 [1/1] 2.71ns
:38  store float %ux_out_1, float* %U_c_buffer_1_addr_1, align 4

ST_187: stg_1444 [1/1] 0.00ns
:39  br label %._crit_edge50


 <State 188>: 5.28ns
ST_188: indvar_flatten2 [1/1] 0.00ns
.preheader26:0  %indvar_flatten2 = phi i19 [ %indvar_flatten_next2, %._crit_edge53 ], [ 0, %.preheader28 ]

ST_188: proc9 [1/1] 0.00ns
.preheader26:1  %proc9 = phi i9 [ %tmp_35_mid2, %._crit_edge53 ], [ 0, %.preheader28 ]

ST_188: i2 [1/1] 0.00ns
.preheader26:4  %i2 = phi i10 [ %i_3, %._crit_edge53 ], [ 0, %.preheader28 ]

ST_188: tmp_35 [1/1] 0.00ns
.preheader26:5  %tmp_35 = zext i9 %proc9 to i64

ST_188: diag_1_addr_12 [1/1] 0.00ns
.preheader26:6  %diag_1_addr_12 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_35

ST_188: diag_1_load_9 [2/2] 2.71ns
.preheader26:7  %diag_1_load_9 = load i32* %diag_1_addr_12, align 4

ST_188: diag_2_addr_12 [1/1] 0.00ns
.preheader26:8  %diag_2_addr_12 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_35

ST_188: diag_2_load_9 [2/2] 2.71ns
.preheader26:9  %diag_2_load_9 = load i32* %diag_2_addr_12, align 4

ST_188: exitcond_flatten3 [1/1] 2.33ns
.preheader26:13  %exitcond_flatten3 = icmp eq i19 %indvar_flatten2, -216960

ST_188: indvar_flatten_next2 [1/1] 2.08ns
.preheader26:14  %indvar_flatten_next2 = add i19 %indvar_flatten2, 1

ST_188: proc_9 [1/1] 1.84ns
.preheader27:0  %proc_9 = add i9 %proc9, 1

ST_188: exitcond10 [1/1] 2.07ns
.preheader27:3  %exitcond10 = icmp eq i10 %i2, -240

ST_188: i2_mid2 [1/1] 1.37ns
.preheader27:4  %i2_mid2 = select i1 %exitcond10, i10 0, i10 %i2

ST_188: tmp_35_mid1 [1/1] 0.00ns
.preheader27:5  %tmp_35_mid1 = zext i9 %proc_9 to i64

ST_188: tmp_35_mid2 [1/1] 1.37ns
.preheader27:6  %tmp_35_mid2 = select i1 %exitcond10, i9 %proc_9, i9 %proc9

ST_188: diag_1_addr_13 [1/1] 0.00ns
.preheader27:9  %diag_1_addr_13 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_35_mid1

ST_188: diag_1_load_10 [2/2] 2.71ns
.preheader27:10  %diag_1_load_10 = load i32* %diag_1_addr_13, align 4

ST_188: diag_2_addr_13 [1/1] 0.00ns
.preheader27:11  %diag_2_addr_13 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_35_mid1

ST_188: diag_2_load_10 [2/2] 2.71ns
.preheader27:12  %diag_2_load_10 = load i32* %diag_2_addr_13, align 4

ST_188: i_3 [1/1] 1.84ns
._crit_edge53:0  %i_3 = add i10 %i2_mid2, 1

ST_188: stg_1465 [1/1] 0.00ns
._crit_edge53:1  br label %.preheader26


 <State 189>: 7.97ns
ST_189: diag_1_load_9 [1/2] 2.71ns
.preheader26:7  %diag_1_load_9 = load i32* %diag_1_addr_12, align 4

ST_189: diag_2_load_9 [1/2] 2.71ns
.preheader26:9  %diag_2_load_9 = load i32* %diag_2_addr_12, align 4

ST_189: tmp_i13 [1/1] 2.52ns
.preheader26:10  %tmp_i13 = icmp sgt i32 %diag_1_load_9, %diag_2_load_9

ST_189: top_left_11 [1/1] 1.37ns
.preheader26:11  %top_left_11 = select i1 %tmp_i13, i32 %diag_2_load_9, i32 %diag_1_load_9

ST_189: bottom_right_11 [1/1] 1.37ns
.preheader26:12  %bottom_right_11 = select i1 %tmp_i13, i32 %diag_1_load_9, i32 %diag_2_load_9

ST_189: tmp_35_mid2_cast [1/1] 0.00ns
.preheader27:7  %tmp_35_mid2_cast = zext i9 %tmp_35_mid2 to i19

ST_189: tmp_86 [1/1] 6.38ns
.preheader27:8  %tmp_86 = mul i19 %tmp_35_mid2_cast, 784

ST_189: diag_1_load_10 [1/2] 2.71ns
.preheader27:10  %diag_1_load_10 = load i32* %diag_1_addr_13, align 4

ST_189: diag_2_load_10 [1/2] 2.71ns
.preheader27:12  %diag_2_load_10 = load i32* %diag_2_addr_13, align 4

ST_189: tmp_i13_mid1 [1/1] 2.52ns
.preheader27:13  %tmp_i13_mid1 = icmp sgt i32 %diag_1_load_10, %diag_2_load_10

ST_189: top_left_21_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_21_mid2)
.preheader27:14  %top_left_21_mid1 = select i1 %tmp_i13_mid1, i32 %diag_2_load_10, i32 %diag_1_load_10

ST_189: top_left_21_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader27:15  %top_left_21_mid2 = select i1 %exitcond10, i32 %top_left_21_mid1, i32 %top_left_11

ST_189: bottom_right_27_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_27_mid2)
.preheader27:16  %bottom_right_27_mid1 = select i1 %tmp_i13_mid1, i32 %diag_1_load_10, i32 %diag_2_load_10

ST_189: bottom_right_27_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader27:17  %bottom_right_27_mid2 = select i1 %exitcond10, i32 %bottom_right_27_mid1, i32 %bottom_right_11


 <State 190>: 8.58ns
ST_190: top_left_s [1/1] 0.00ns
.preheader26:2  %top_left_s = phi i32 [ %idx2_idx1_i489_top_left_s, %._crit_edge53 ], [ %top_left_9, %.preheader28 ]

ST_190: bottom_right_s [1/1] 0.00ns
.preheader26:3  %bottom_right_s = phi i32 [ %bottom_right_write_assign_i2, %._crit_edge53 ], [ %bottom_right_9, %.preheader28 ]

ST_190: stg_1482 [1/1] 1.57ns
.preheader26:15  br i1 %exitcond_flatten3, label %.preheader24, label %.preheader27

ST_190: stg_1483 [1/1] 0.00ns
.preheader27:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_wb_off_r_str)

ST_190: empty_23 [1/1] 0.00ns
.preheader27:2  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 307328, i64 307328, i64 307328)

ST_190: i2_cast7 [1/1] 0.00ns
.preheader27:18  %i2_cast7 = zext i10 %i2_mid2 to i32

ST_190: stg_1486 [1/1] 0.00ns
.preheader27:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1813) nounwind

ST_190: tmp_77 [1/1] 0.00ns
.preheader27:20  %tmp_77 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1813)

ST_190: stg_1488 [1/1] 0.00ns
.preheader27:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_190: tmp_42 [1/1] 2.07ns
.preheader27:22  %tmp_42 = icmp eq i10 %i2_mid2, 0

ST_190: idx2_idx1_i489_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader27:23  %idx2_idx1_i489_top_left_s = select i1 %tmp_42, i32 %top_left_21_mid2, i32 %top_left_s

ST_190: bottom_right_write_assign_i2 [1/1] 1.37ns (out node of the LUT)
.preheader27:24  %bottom_right_write_assign_i2 = select i1 %tmp_42, i32 %bottom_right_27_mid2, i32 %bottom_right_s

ST_190: tmp_47 [1/1] 2.52ns
.preheader27:25  %tmp_47 = icmp eq i32 %idx2_idx1_i489_top_left_s, 784

ST_190: tmp_52 [1/1] 2.52ns
.preheader27:26  %tmp_52 = icmp eq i32 %bottom_right_write_assign_i2, 784

ST_190: or_cond11 [1/1] 1.37ns
.preheader27:27  %or_cond11 = or i1 %tmp_47, %tmp_52

ST_190: stg_1495 [1/1] 0.00ns
.preheader27:28  br i1 %or_cond11, label %._crit_edge53, label %21

ST_190: tmp_55 [1/1] 2.52ns
:0  %tmp_55 = icmp eq i32 %i2_cast7, %bottom_right_write_assign_i2

ST_190: tmp_56 [1/1] 2.52ns
:1  %tmp_56 = icmp eq i32 %i2_cast7, %idx2_idx1_i489_top_left_s

ST_190: or_cond2 [1/1] 1.37ns
:2  %or_cond2 = or i1 %tmp_55, %tmp_56

ST_190: stg_1499 [1/1] 0.00ns
:3  br i1 %or_cond2, label %._crit_edge55, label %22

ST_190: tmp_60_cast1 [1/1] 0.00ns
:0  %tmp_60_cast1 = zext i10 %i2_mid2 to i19

ST_190: tmp_60_cast [1/1] 0.00ns
:1  %tmp_60_cast = zext i10 %i2_mid2 to i21

ST_190: tmp_96 [1/1] 6.38ns
:2  %tmp_96 = mul i21 784, %tmp_60_cast

ST_190: tmp_97 [1/1] 2.08ns
:3  %tmp_97 = add i19 %tmp_60_cast1, %tmp_86

ST_190: tmp_109_cast [1/1] 0.00ns
:4  %tmp_109_cast = zext i19 %tmp_97 to i64

ST_190: S_c_buffer_0_addr_2 [1/1] 0.00ns
:5  %S_c_buffer_0_addr_2 = getelementptr [307328 x float]* %S_c_buffer_0, i64 0, i64 %tmp_109_cast

ST_190: U_c_buffer_0_addr_2 [1/1] 0.00ns
:7  %U_c_buffer_0_addr_2 = getelementptr [307328 x float]* %U_c_buffer_0, i64 0, i64 %tmp_109_cast

ST_190: V_c_buffer_0_addr_2 [1/1] 0.00ns
:10  %V_c_buffer_0_addr_2 = getelementptr [307328 x float]* %V_c_buffer_0, i64 0, i64 %tmp_109_cast

ST_190: S_c_buffer_0_load [2/2] 2.71ns
:11  %S_c_buffer_0_load = load float* %S_c_buffer_0_addr_2, align 8

ST_190: tmp_98 [1/1] 0.00ns
:12  %tmp_98 = trunc i32 %idx2_idx1_i489_top_left_s to i21

ST_190: tmp_99 [1/1] 2.20ns
:13  %tmp_99 = add i21 %tmp_98, %tmp_96

ST_190: U_c_buffer_0_load [2/2] 2.71ns
:19  %U_c_buffer_0_load = load float* %U_c_buffer_0_addr_2, align 8

ST_190: V_c_buffer_0_load [2/2] 2.71ns
:21  %V_c_buffer_0_load = load float* %V_c_buffer_0_addr_2, align 8

ST_190: tmp_100 [1/1] 0.00ns
:24  %tmp_100 = trunc i32 %bottom_right_write_assign_i2 to i21

ST_190: tmp_101 [1/1] 2.20ns
:25  %tmp_101 = add i21 %tmp_100, %tmp_96

ST_190: empty_22 [1/1] 0.00ns
._crit_edge55:0  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1813, i32 %tmp_77)

ST_190: stg_1516 [1/1] 0.00ns
._crit_edge55:1  br label %._crit_edge53


 <State 191>: 5.32ns
ST_191: S_c_buffer_1_addr_2 [1/1] 0.00ns
:6  %S_c_buffer_1_addr_2 = getelementptr [307328 x float]* %S_c_buffer_1, i64 0, i64 %tmp_109_cast

ST_191: V_c_buffer_1_addr_2 [1/1] 0.00ns
:8  %V_c_buffer_1_addr_2 = getelementptr [307328 x float]* %V_c_buffer_1, i64 0, i64 %tmp_109_cast

ST_191: U_c_buffer_1_addr_2 [1/1] 0.00ns
:9  %U_c_buffer_1_addr_2 = getelementptr [307328 x float]* %U_c_buffer_1, i64 0, i64 %tmp_109_cast

ST_191: S_c_buffer_0_load [1/2] 2.71ns
:11  %S_c_buffer_0_load = load float* %S_c_buffer_0_addr_2, align 8

ST_191: tmp_110_cast [1/1] 0.00ns
:14  %tmp_110_cast = sext i21 %tmp_99 to i64

ST_191: S_addr_11 [1/1] 0.00ns
:15  %S_addr_11 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_110_cast

ST_191: U_addr_11 [1/1] 0.00ns
:16  %U_addr_11 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_110_cast

ST_191: V_addr_11 [1/1] 0.00ns
:17  %V_addr_11 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_110_cast

ST_191: stg_1525 [2/2] 2.61ns
:18  store float %S_c_buffer_0_load, float* %S_addr_11, align 4

ST_191: U_c_buffer_0_load [1/2] 2.71ns
:19  %U_c_buffer_0_load = load float* %U_c_buffer_0_addr_2, align 8

ST_191: stg_1527 [2/2] 2.61ns
:20  store float %U_c_buffer_0_load, float* %U_addr_11, align 4

ST_191: V_c_buffer_0_load [1/2] 2.71ns
:21  %V_c_buffer_0_load = load float* %V_c_buffer_0_addr_2, align 8

ST_191: stg_1529 [2/2] 2.61ns
:22  store float %V_c_buffer_0_load, float* %V_addr_11, align 4

ST_191: S_c_buffer_1_load [2/2] 2.71ns
:23  %S_c_buffer_1_load = load float* %S_c_buffer_1_addr_2, align 4

ST_191: U_c_buffer_1_load [2/2] 2.71ns
:31  %U_c_buffer_1_load = load float* %U_c_buffer_1_addr_2, align 4

ST_191: V_c_buffer_1_load [2/2] 2.71ns
:33  %V_c_buffer_1_load = load float* %V_c_buffer_1_addr_2, align 4


 <State 192>: 5.32ns
ST_192: stg_1533 [1/2] 2.61ns
:18  store float %S_c_buffer_0_load, float* %S_addr_11, align 4

ST_192: stg_1534 [1/2] 2.61ns
:20  store float %U_c_buffer_0_load, float* %U_addr_11, align 4

ST_192: stg_1535 [1/2] 2.61ns
:22  store float %V_c_buffer_0_load, float* %V_addr_11, align 4

ST_192: S_c_buffer_1_load [1/2] 2.71ns
:23  %S_c_buffer_1_load = load float* %S_c_buffer_1_addr_2, align 4

ST_192: tmp_111_cast [1/1] 0.00ns
:26  %tmp_111_cast = sext i21 %tmp_101 to i64

ST_192: S_addr_12 [1/1] 0.00ns
:27  %S_addr_12 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_111_cast

ST_192: U_addr_12 [1/1] 0.00ns
:28  %U_addr_12 = getelementptr [614656 x float]* %U, i64 0, i64 %tmp_111_cast

ST_192: V_addr_12 [1/1] 0.00ns
:29  %V_addr_12 = getelementptr [614656 x float]* %V, i64 0, i64 %tmp_111_cast

ST_192: stg_1541 [2/2] 2.61ns
:30  store float %S_c_buffer_1_load, float* %S_addr_12, align 4

ST_192: U_c_buffer_1_load [1/2] 2.71ns
:31  %U_c_buffer_1_load = load float* %U_c_buffer_1_addr_2, align 4

ST_192: stg_1543 [2/2] 2.61ns
:32  store float %U_c_buffer_1_load, float* %U_addr_12, align 4

ST_192: V_c_buffer_1_load [1/2] 2.71ns
:33  %V_c_buffer_1_load = load float* %V_c_buffer_1_addr_2, align 4

ST_192: stg_1545 [2/2] 2.61ns
:34  store float %V_c_buffer_1_load, float* %V_addr_12, align 4


 <State 193>: 2.61ns
ST_193: stg_1546 [1/2] 2.61ns
:30  store float %S_c_buffer_1_load, float* %S_addr_12, align 4

ST_193: stg_1547 [1/2] 2.61ns
:32  store float %U_c_buffer_1_load, float* %U_addr_12, align 4

ST_193: stg_1548 [1/2] 2.61ns
:34  store float %V_c_buffer_1_load, float* %V_addr_12, align 4

ST_193: stg_1549 [1/1] 0.00ns
:35  br label %._crit_edge55


 <State 194>: 5.28ns
ST_194: indvar_flatten3 [1/1] 0.00ns
.preheader24:0  %indvar_flatten3 = phi i19 [ %indvar_flatten_next3, %._crit_edge58 ], [ 0, %.preheader26 ]

ST_194: proc7 [1/1] 0.00ns
.preheader24:1  %proc7 = phi i9 [ %tmp_41_mid2, %._crit_edge58 ], [ 0, %.preheader26 ]

ST_194: i3 [1/1] 0.00ns
.preheader24:4  %i3 = phi i10 [ %i_4, %._crit_edge58 ], [ 0, %.preheader26 ]

ST_194: tmp_41 [1/1] 0.00ns
.preheader24:5  %tmp_41 = zext i9 %proc7 to i64

ST_194: diag_1_addr_14 [1/1] 0.00ns
.preheader24:6  %diag_1_addr_14 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_41

ST_194: diag_1_load_11 [2/2] 2.71ns
.preheader24:7  %diag_1_load_11 = load i32* %diag_1_addr_14, align 4

ST_194: diag_2_addr_14 [1/1] 0.00ns
.preheader24:8  %diag_2_addr_14 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_41

ST_194: diag_2_load_11 [2/2] 2.71ns
.preheader24:9  %diag_2_load_11 = load i32* %diag_2_addr_14, align 4

ST_194: exitcond_flatten4 [1/1] 2.33ns
.preheader24:13  %exitcond_flatten4 = icmp eq i19 %indvar_flatten3, -216960

ST_194: indvar_flatten_next3 [1/1] 2.08ns
.preheader24:14  %indvar_flatten_next3 = add i19 %indvar_flatten3, 1

ST_194: proc_12 [1/1] 1.84ns
.preheader25:0  %proc_12 = add i9 %proc7, 1

ST_194: exitcond11 [1/1] 2.07ns
.preheader25:3  %exitcond11 = icmp eq i10 %i3, -240

ST_194: i3_mid2 [1/1] 1.37ns
.preheader25:4  %i3_mid2 = select i1 %exitcond11, i10 0, i10 %i3

ST_194: tmp_41_mid1 [1/1] 0.00ns
.preheader25:5  %tmp_41_mid1 = zext i9 %proc_12 to i64

ST_194: tmp_41_mid2 [1/1] 1.37ns
.preheader25:6  %tmp_41_mid2 = select i1 %exitcond11, i9 %proc_12, i9 %proc7

ST_194: diag_1_addr_15 [1/1] 0.00ns
.preheader25:9  %diag_1_addr_15 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_41_mid1

ST_194: diag_1_load_12 [2/2] 2.71ns
.preheader25:10  %diag_1_load_12 = load i32* %diag_1_addr_15, align 4

ST_194: diag_2_addr_15 [1/1] 0.00ns
.preheader25:11  %diag_2_addr_15 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_41_mid1

ST_194: diag_2_load_12 [2/2] 2.71ns
.preheader25:12  %diag_2_load_12 = load i32* %diag_2_addr_15, align 4

ST_194: i_4 [1/1] 1.84ns
._crit_edge58:0  %i_4 = add i10 %i3_mid2, 1

ST_194: stg_1570 [1/1] 0.00ns
._crit_edge58:1  br label %.preheader24


 <State 195>: 7.97ns
ST_195: diag_1_load_11 [1/2] 2.71ns
.preheader24:7  %diag_1_load_11 = load i32* %diag_1_addr_14, align 4

ST_195: diag_2_load_11 [1/2] 2.71ns
.preheader24:9  %diag_2_load_11 = load i32* %diag_2_addr_14, align 4

ST_195: tmp_i14 [1/1] 2.52ns
.preheader24:10  %tmp_i14 = icmp sgt i32 %diag_1_load_11, %diag_2_load_11

ST_195: top_left_13 [1/1] 1.37ns
.preheader24:11  %top_left_13 = select i1 %tmp_i14, i32 %diag_2_load_11, i32 %diag_1_load_11

ST_195: bottom_right_13 [1/1] 1.37ns
.preheader24:12  %bottom_right_13 = select i1 %tmp_i14, i32 %diag_1_load_11, i32 %diag_2_load_11

ST_195: diag_1_load_12 [1/2] 2.71ns
.preheader25:10  %diag_1_load_12 = load i32* %diag_1_addr_15, align 4

ST_195: diag_2_load_12 [1/2] 2.71ns
.preheader25:12  %diag_2_load_12 = load i32* %diag_2_addr_15, align 4

ST_195: tmp_i14_mid1 [1/1] 2.52ns
.preheader25:13  %tmp_i14_mid1 = icmp sgt i32 %diag_1_load_12, %diag_2_load_12

ST_195: top_left_22_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_22_mid2)
.preheader25:14  %top_left_22_mid1 = select i1 %tmp_i14_mid1, i32 %diag_2_load_12, i32 %diag_1_load_12

ST_195: top_left_22_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader25:15  %top_left_22_mid2 = select i1 %exitcond11, i32 %top_left_22_mid1, i32 %top_left_13

ST_195: bottom_right_28_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_28_mid2)
.preheader25:16  %bottom_right_28_mid1 = select i1 %tmp_i14_mid1, i32 %diag_1_load_12, i32 %diag_2_load_12

ST_195: bottom_right_28_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader25:17  %bottom_right_28_mid2 = select i1 %exitcond11, i32 %bottom_right_28_mid1, i32 %bottom_right_13


 <State 196>: 7.33ns
ST_196: top_left_12 [1/1] 0.00ns
.preheader24:2  %top_left_12 = phi i32 [ %idx2_idx1_i494_top_left_s, %._crit_edge58 ], [ %top_left_s, %.preheader26 ]

ST_196: bottom_right_12 [1/1] 0.00ns
.preheader24:3  %bottom_right_12 = phi i32 [ %bottom_right_write_assign_i3, %._crit_edge58 ], [ %bottom_right_s, %.preheader26 ]

ST_196: stg_1585 [1/1] 1.57ns
.preheader24:15  br i1 %exitcond_flatten4, label %.preheader22, label %.preheader25

ST_196: i3_cast5 [1/1] 0.00ns
.preheader25:18  %i3_cast5 = zext i10 %i3_mid2 to i32

ST_196: tmp_78 [1/1] 0.00ns
.preheader25:20  %tmp_78 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1814)

ST_196: tmp_51 [1/1] 2.07ns
.preheader25:22  %tmp_51 = icmp eq i10 %i3_mid2, 0

ST_196: idx2_idx1_i494_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader25:23  %idx2_idx1_i494_top_left_s = select i1 %tmp_51, i32 %top_left_22_mid2, i32 %top_left_12

ST_196: bottom_right_write_assign_i3 [1/1] 1.37ns (out node of the LUT)
.preheader25:24  %bottom_right_write_assign_i3 = select i1 %tmp_51, i32 %bottom_right_28_mid2, i32 %bottom_right_12

ST_196: tmp_54 [1/1] 2.52ns
.preheader25:25  %tmp_54 = icmp eq i32 %idx2_idx1_i494_top_left_s, 784

ST_196: tmp_59 [1/1] 2.52ns
.preheader25:26  %tmp_59 = icmp eq i32 %bottom_right_write_assign_i3, 784

ST_196: or_cond12 [1/1] 1.37ns
.preheader25:27  %or_cond12 = or i1 %tmp_54, %tmp_59

ST_196: stg_1594 [1/1] 0.00ns
.preheader25:28  br i1 %or_cond12, label %._crit_edge58, label %23

ST_196: tmp_64 [1/1] 2.52ns
:0  %tmp_64 = icmp eq i32 %i3_cast5, %bottom_right_write_assign_i3

ST_196: tmp_65 [1/1] 2.52ns
:1  %tmp_65 = icmp eq i32 %i3_cast5, %idx2_idx1_i494_top_left_s

ST_196: or_cond3 [1/1] 1.37ns
:2  %or_cond3 = or i1 %tmp_64, %tmp_65

ST_196: stg_1598 [1/1] 0.00ns
:3  br i1 %or_cond3, label %._crit_edge60, label %24

ST_196: tmp_104 [1/1] 0.00ns
:6  %tmp_104 = trunc i32 %idx2_idx1_i494_top_left_s to i21

ST_196: tmp_107 [1/1] 0.00ns
:13  %tmp_107 = trunc i32 %bottom_right_write_assign_i3 to i21

ST_196: empty_24 [1/1] 0.00ns
._crit_edge60:0  %empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1814, i32 %tmp_78)

ST_196: stg_1602 [1/1] 0.00ns
._crit_edge60:1  br label %._crit_edge58


 <State 197>: 8.99ns
ST_197: stg_1603 [1/1] 0.00ns
.preheader25:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_rd_off_c_str)

ST_197: empty_25 [1/1] 0.00ns
.preheader25:2  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 307328, i64 307328, i64 307328)

ST_197: tmp_41_mid2_cast [1/1] 0.00ns
.preheader25:7  %tmp_41_mid2_cast = zext i9 %tmp_41_mid2 to i19

ST_197: tmp_93 [1/1] 6.38ns
.preheader25:8  %tmp_93 = mul i19 %tmp_41_mid2_cast, 784

ST_197: stg_1607 [1/1] 0.00ns
.preheader25:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1814) nounwind

ST_197: stg_1608 [1/1] 0.00ns
.preheader25:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_197: tmp_68_cast1 [1/1] 0.00ns
:0  %tmp_68_cast1 = zext i10 %i3_mid2 to i21

ST_197: tmp_68_cast [1/1] 0.00ns
:1  %tmp_68_cast = zext i10 %i3_mid2 to i19

ST_197: tmp_103 [1/1] 2.08ns
:2  %tmp_103 = add i19 %tmp_68_cast, %tmp_93

ST_197: tmp_105 [1/1] 3.36ns
:7  %tmp_105 = mul i21 784, %tmp_104

ST_197: tmp_106 [1/1] 3.02ns
:8  %tmp_106 = add i21 %tmp_68_cast1, %tmp_105

ST_197: tmp_115_cast [1/1] 0.00ns
:9  %tmp_115_cast = sext i21 %tmp_106 to i64

ST_197: S_addr_13 [1/1] 0.00ns
:10  %S_addr_13 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_115_cast

ST_197: S_load_6 [4/4] 2.61ns
:11  %S_load_6 = load float* %S_addr_13, align 4

ST_197: tmp_108 [1/1] 3.36ns
:14  %tmp_108 = mul i21 784, %tmp_107

ST_197: tmp_109 [1/1] 3.02ns
:15  %tmp_109 = add i21 %tmp_68_cast1, %tmp_108

ST_197: tmp_117_cast [1/1] 0.00ns
:16  %tmp_117_cast = sext i21 %tmp_109 to i64

ST_197: S_addr_14 [1/1] 0.00ns
:17  %S_addr_14 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_117_cast

ST_197: S_load_7 [4/4] 2.61ns
:18  %S_load_7 = load float* %S_addr_14, align 4


 <State 198>: 2.61ns
ST_198: S_load_6 [3/4] 2.61ns
:11  %S_load_6 = load float* %S_addr_13, align 4

ST_198: S_load_7 [3/4] 2.61ns
:18  %S_load_7 = load float* %S_addr_14, align 4


 <State 199>: 2.61ns
ST_199: S_load_6 [2/4] 2.61ns
:11  %S_load_6 = load float* %S_addr_13, align 4

ST_199: S_load_7 [2/4] 2.61ns
:18  %S_load_7 = load float* %S_addr_14, align 4


 <State 200>: 5.32ns
ST_200: tmp_113_cast [1/1] 0.00ns
:3  %tmp_113_cast = zext i19 %tmp_103 to i64

ST_200: S_r_buffer_0_addr [1/1] 0.00ns
:4  %S_r_buffer_0_addr = getelementptr [307328 x float]* %S_r_buffer_0, i64 0, i64 %tmp_113_cast

ST_200: S_r_buffer_1_addr [1/1] 0.00ns
:5  %S_r_buffer_1_addr = getelementptr [307328 x float]* %S_r_buffer_1, i64 0, i64 %tmp_113_cast

ST_200: S_load_6 [1/4] 2.61ns
:11  %S_load_6 = load float* %S_addr_13, align 4

ST_200: stg_1630 [1/1] 2.71ns
:12  store float %S_load_6, float* %S_r_buffer_0_addr, align 4

ST_200: S_load_7 [1/4] 2.61ns
:18  %S_load_7 = load float* %S_addr_14, align 4

ST_200: stg_1632 [1/1] 2.71ns
:19  store float %S_load_7, float* %S_r_buffer_1_addr, align 4

ST_200: stg_1633 [1/1] 0.00ns
:20  br label %._crit_edge60


 <State 201>: 5.28ns
ST_201: indvar_flatten4 [1/1] 0.00ns
.preheader22:0  %indvar_flatten4 = phi i19 [ %indvar_flatten_next4, %._crit_edge63 ], [ 0, %.preheader24 ]

ST_201: proc10 [1/1] 0.00ns
.preheader22:1  %proc10 = phi i9 [ %tmp_50_mid2, %._crit_edge63 ], [ 0, %.preheader24 ]

ST_201: off_col [1/1] 0.00ns
.preheader22:4  %off_col = phi i10 [ %off_col_1, %._crit_edge63 ], [ 0, %.preheader24 ]

ST_201: tmp_50 [1/1] 0.00ns
.preheader22:5  %tmp_50 = zext i9 %proc10 to i64

ST_201: diag_1_addr_16 [1/1] 0.00ns
.preheader22:6  %diag_1_addr_16 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_50

ST_201: diag_1_load_13 [2/2] 2.71ns
.preheader22:7  %diag_1_load_13 = load i32* %diag_1_addr_16, align 4

ST_201: diag_2_addr_16 [1/1] 0.00ns
.preheader22:8  %diag_2_addr_16 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_50

ST_201: diag_2_load_13 [2/2] 2.71ns
.preheader22:9  %diag_2_load_13 = load i32* %diag_2_addr_16, align 4

ST_201: exitcond_flatten5 [1/1] 2.33ns
.preheader22:13  %exitcond_flatten5 = icmp eq i19 %indvar_flatten4, -216960

ST_201: indvar_flatten_next4 [1/1] 2.08ns
.preheader22:14  %indvar_flatten_next4 = add i19 %indvar_flatten4, 1

ST_201: proc_14 [1/1] 1.84ns
.preheader23:0  %proc_14 = add i9 %proc10, 1

ST_201: exitcond12 [1/1] 2.07ns
.preheader23:3  %exitcond12 = icmp eq i10 %off_col, -240

ST_201: off_col_mid2 [1/1] 1.37ns
.preheader23:4  %off_col_mid2 = select i1 %exitcond12, i10 0, i10 %off_col

ST_201: tmp_50_mid1 [1/1] 0.00ns
.preheader23:5  %tmp_50_mid1 = zext i9 %proc_14 to i64

ST_201: tmp_50_mid2 [1/1] 1.37ns
.preheader23:6  %tmp_50_mid2 = select i1 %exitcond12, i9 %proc_14, i9 %proc10

ST_201: diag_1_addr_17 [1/1] 0.00ns
.preheader23:10  %diag_1_addr_17 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_50_mid1

ST_201: diag_1_load_14 [2/2] 2.71ns
.preheader23:11  %diag_1_load_14 = load i32* %diag_1_addr_17, align 4

ST_201: diag_2_addr_17 [1/1] 0.00ns
.preheader23:12  %diag_2_addr_17 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_50_mid1

ST_201: diag_2_load_14 [2/2] 2.71ns
.preheader23:13  %diag_2_load_14 = load i32* %diag_2_addr_17, align 4

ST_201: off_col_1 [1/1] 1.84ns
._crit_edge63:0  %off_col_1 = add i10 %off_col_mid2, 1

ST_201: stg_1654 [1/1] 0.00ns
._crit_edge63:1  br label %.preheader22


 <State 202>: 7.97ns
ST_202: diag_1_load_13 [1/2] 2.71ns
.preheader22:7  %diag_1_load_13 = load i32* %diag_1_addr_16, align 4

ST_202: diag_2_load_13 [1/2] 2.71ns
.preheader22:9  %diag_2_load_13 = load i32* %diag_2_addr_16, align 4

ST_202: tmp_i21 [1/1] 2.52ns
.preheader22:10  %tmp_i21 = icmp sgt i32 %diag_1_load_13, %diag_2_load_13

ST_202: top_left_15 [1/1] 1.37ns
.preheader22:11  %top_left_15 = select i1 %tmp_i21, i32 %diag_2_load_13, i32 %diag_1_load_13

ST_202: bottom_right_15 [1/1] 1.37ns
.preheader22:12  %bottom_right_15 = select i1 %tmp_i21, i32 %diag_1_load_13, i32 %diag_2_load_13

ST_202: tmp_50_mid2_cast1 [1/1] 0.00ns
.preheader23:7  %tmp_50_mid2_cast1 = zext i9 %tmp_50_mid2 to i19

ST_202: tmp_95 [1/1] 6.38ns
.preheader23:9  %tmp_95 = mul i19 %tmp_50_mid2_cast1, 784

ST_202: diag_1_load_14 [1/2] 2.71ns
.preheader23:11  %diag_1_load_14 = load i32* %diag_1_addr_17, align 4

ST_202: diag_2_load_14 [1/2] 2.71ns
.preheader23:13  %diag_2_load_14 = load i32* %diag_2_addr_17, align 4

ST_202: tmp_i21_mid1 [1/1] 2.52ns
.preheader23:22  %tmp_i21_mid1 = icmp sgt i32 %diag_1_load_14, %diag_2_load_14

ST_202: top_left_23_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_23_mid2)
.preheader23:23  %top_left_23_mid1 = select i1 %tmp_i21_mid1, i32 %diag_2_load_14, i32 %diag_1_load_14

ST_202: top_left_23_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader23:24  %top_left_23_mid2 = select i1 %exitcond12, i32 %top_left_23_mid1, i32 %top_left_15

ST_202: bottom_right_29_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_29_mid2)
.preheader23:25  %bottom_right_29_mid1 = select i1 %tmp_i21_mid1, i32 %diag_1_load_14, i32 %diag_2_load_14

ST_202: bottom_right_29_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader23:26  %bottom_right_29_mid2 = select i1 %exitcond12, i32 %bottom_right_29_mid1, i32 %bottom_right_15


 <State 203>: 7.33ns
ST_203: top_left_14 [1/1] 0.00ns
.preheader22:2  %top_left_14 = phi i32 [ %idx2_idx1_i499_top_left_s, %._crit_edge63 ], [ %top_left_12, %.preheader24 ]

ST_203: bottom_right_14 [1/1] 0.00ns
.preheader22:3  %bottom_right_14 = phi i32 [ %bottom_right_write_assign_i4, %._crit_edge63 ], [ %bottom_right_12, %.preheader24 ]

ST_203: stg_1671 [1/1] 1.57ns
.preheader22:15  br i1 %exitcond_flatten5, label %.preheader, label %.preheader23

ST_203: tmp_50_mid2_cast [1/1] 0.00ns
.preheader23:8  %tmp_50_mid2_cast = zext i9 %tmp_50_mid2 to i64

ST_203: J2x2_0_0_addr_2 [1/1] 0.00ns
.preheader23:14  %J2x2_0_0_addr_2 = getelementptr [392 x float]* %J2x2_0_0, i64 0, i64 %tmp_50_mid2_cast

ST_203: J2x2_0_0_load_1 [2/2] 2.71ns
.preheader23:15  %J2x2_0_0_load_1 = load float* %J2x2_0_0_addr_2, align 4

ST_203: J2x2_0_1_addr_2 [1/1] 0.00ns
.preheader23:16  %J2x2_0_1_addr_2 = getelementptr [392 x float]* %J2x2_0_1, i64 0, i64 %tmp_50_mid2_cast

ST_203: J2x2_0_1_load_1 [2/2] 2.71ns
.preheader23:17  %J2x2_0_1_load_1 = load float* %J2x2_0_1_addr_2, align 4

ST_203: J2x2_1_0_addr_2 [1/1] 0.00ns
.preheader23:18  %J2x2_1_0_addr_2 = getelementptr [392 x float]* %J2x2_1_0, i64 0, i64 %tmp_50_mid2_cast

ST_203: J2x2_1_0_load_1 [2/2] 2.71ns
.preheader23:19  %J2x2_1_0_load_1 = load float* %J2x2_1_0_addr_2, align 4

ST_203: J2x2_1_1_addr_2 [1/1] 0.00ns
.preheader23:20  %J2x2_1_1_addr_2 = getelementptr [392 x float]* %J2x2_1_1, i64 0, i64 %tmp_50_mid2_cast

ST_203: J2x2_1_1_load_1 [2/2] 2.71ns
.preheader23:21  %J2x2_1_1_load_1 = load float* %J2x2_1_1_addr_2, align 4

ST_203: off_col_cast3 [1/1] 0.00ns
.preheader23:27  %off_col_cast3 = zext i10 %off_col_mid2 to i32

ST_203: tmp_79 [1/1] 0.00ns
.preheader23:29  %tmp_79 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str1815)

ST_203: tmp_58 [1/1] 2.07ns
.preheader23:31  %tmp_58 = icmp eq i10 %off_col_mid2, 0

ST_203: idx2_idx1_i499_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader23:32  %idx2_idx1_i499_top_left_s = select i1 %tmp_58, i32 %top_left_23_mid2, i32 %top_left_14

ST_203: bottom_right_write_assign_i4 [1/1] 1.37ns (out node of the LUT)
.preheader23:33  %bottom_right_write_assign_i4 = select i1 %tmp_58, i32 %bottom_right_29_mid2, i32 %bottom_right_14

ST_203: tmp_63 [1/1] 2.52ns
.preheader23:34  %tmp_63 = icmp eq i32 %idx2_idx1_i499_top_left_s, 784

ST_203: tmp_67 [1/1] 2.52ns
.preheader23:35  %tmp_67 = icmp eq i32 %bottom_right_write_assign_i4, 784

ST_203: or_cond13 [1/1] 1.37ns
.preheader23:36  %or_cond13 = or i1 %tmp_63, %tmp_67

ST_203: stg_1689 [1/1] 0.00ns
.preheader23:37  br i1 %or_cond13, label %._crit_edge63, label %25

ST_203: tmp_72 [1/1] 2.52ns
:0  %tmp_72 = icmp eq i32 %off_col_cast3, %bottom_right_write_assign_i4

ST_203: tmp_73 [1/1] 2.52ns
:1  %tmp_73 = icmp eq i32 %off_col_cast3, %idx2_idx1_i499_top_left_s

ST_203: or_cond4 [1/1] 1.37ns
:2  %or_cond4 = or i1 %tmp_72, %tmp_73

ST_203: stg_1693 [1/1] 0.00ns
:3  br i1 %or_cond4, label %._crit_edge65, label %26

ST_203: tmp_75_cast [1/1] 0.00ns
:0  %tmp_75_cast = zext i10 %off_col_mid2 to i19

ST_203: tmp_110 [1/1] 2.08ns
:1  %tmp_110 = add i19 %tmp_95, %tmp_75_cast

ST_203: tmp_119_cast [1/1] 0.00ns
:2  %tmp_119_cast = zext i19 %tmp_110 to i64

ST_203: S_r_buffer_0_addr_1 [1/1] 0.00ns
:3  %S_r_buffer_0_addr_1 = getelementptr [307328 x float]* %S_r_buffer_0, i64 0, i64 %tmp_119_cast

ST_203: S_r_buffer_1_addr_1 [1/1] 0.00ns
:4  %S_r_buffer_1_addr_1 = getelementptr [307328 x float]* %S_r_buffer_1, i64 0, i64 %tmp_119_cast

ST_203: w_in_2 [2/2] 2.71ns
:5  %w_in_2 = load float* %S_r_buffer_0_addr_1, align 4

ST_203: y_in_1 [2/2] 2.71ns
:6  %y_in_1 = load float* %S_r_buffer_1_addr_1, align 4

ST_203: empty_26 [1/1] 0.00ns
._crit_edge65:0  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str1815, i32 %tmp_79)

ST_203: stg_1702 [1/1] 0.00ns
._crit_edge65:1  br label %._crit_edge63


 <State 204>: 8.41ns
ST_204: stg_1703 [1/1] 0.00ns
.preheader23:1  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @L_svd_calc_off_c_str)

ST_204: empty_27 [1/1] 0.00ns
.preheader23:2  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 307328, i64 307328, i64 307328)

ST_204: J2x2_0_0_load_1 [1/2] 2.71ns
.preheader23:15  %J2x2_0_0_load_1 = load float* %J2x2_0_0_addr_2, align 4

ST_204: J2x2_0_1_load_1 [1/2] 2.71ns
.preheader23:17  %J2x2_0_1_load_1 = load float* %J2x2_0_1_addr_2, align 4

ST_204: J2x2_1_0_load_1 [1/2] 2.71ns
.preheader23:19  %J2x2_1_0_load_1 = load float* %J2x2_1_0_addr_2, align 4

ST_204: J2x2_1_1_load_1 [1/2] 2.71ns
.preheader23:21  %J2x2_1_1_load_1 = load float* %J2x2_1_1_addr_2, align 4

ST_204: stg_1709 [1/1] 0.00ns
.preheader23:28  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str1815) nounwind

ST_204: stg_1710 [1/1] 0.00ns
.preheader23:30  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_204: w_in_2 [1/2] 2.71ns
:5  %w_in_2 = load float* %S_r_buffer_0_addr_1, align 4

ST_204: y_in_1 [1/2] 2.71ns
:6  %y_in_1 = load float* %S_r_buffer_1_addr_1, align 4

ST_204: tmp_i23 [4/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_204: tmp_3_i16 [4/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_204: tmp_i24 [4/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_204: tmp_3_i17 [4/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 205>: 5.70ns
ST_205: tmp_i23 [3/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_205: tmp_3_i16 [3/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_205: tmp_i24 [3/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_205: tmp_3_i17 [3/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 206>: 5.70ns
ST_206: tmp_i23 [2/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_206: tmp_3_i16 [2/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_206: tmp_i24 [2/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_206: tmp_3_i17 [2/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 207>: 5.70ns
ST_207: tmp_i23 [1/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_207: tmp_3_i16 [1/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_207: tmp_i24 [1/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_207: tmp_3_i17 [1/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 208>: 7.26ns
ST_208: w_out_4 [5/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_208: y_out [5/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 209>: 7.26ns
ST_209: w_out_4 [4/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_209: y_out [4/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 210>: 7.26ns
ST_210: w_out_4 [3/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_210: y_out [3/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 211>: 7.26ns
ST_211: w_out_4 [2/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_211: y_out [2/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 212>: 7.26ns
ST_212: w_out_4 [1/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_212: y_out [1/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 213>: 2.71ns
ST_213: stg_1739 [1/1] 2.71ns
:13  store float %w_out_4, float* %S_r_buffer_0_addr_1, align 4

ST_213: stg_1740 [1/1] 2.71ns
:14  store float %y_out, float* %S_r_buffer_1_addr_1, align 4

ST_213: stg_1741 [1/1] 0.00ns
:15  br label %._crit_edge65


 <State 214>: 5.28ns
ST_214: indvar_flatten5 [1/1] 0.00ns
.preheader:0  %indvar_flatten5 = phi i19 [ %indvar_flatten_next5, %._crit_edge68 ], [ 0, %.preheader22 ]

ST_214: proc11 [1/1] 0.00ns
.preheader:1  %proc11 = phi i9 [ %tmp_57_mid2, %._crit_edge68 ], [ 0, %.preheader22 ]

ST_214: i4 [1/1] 0.00ns
.preheader:4  %i4 = phi i10 [ %i_5, %._crit_edge68 ], [ 0, %.preheader22 ]

ST_214: tmp_57 [1/1] 0.00ns
.preheader:5  %tmp_57 = zext i9 %proc11 to i64

ST_214: diag_1_addr_18 [1/1] 0.00ns
.preheader:6  %diag_1_addr_18 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_57

ST_214: diag_1_load_15 [2/2] 2.71ns
.preheader:7  %diag_1_load_15 = load i32* %diag_1_addr_18, align 4

ST_214: diag_2_addr_18 [1/1] 0.00ns
.preheader:8  %diag_2_addr_18 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_57

ST_214: diag_2_load_15 [2/2] 2.71ns
.preheader:9  %diag_2_load_15 = load i32* %diag_2_addr_18, align 4

ST_214: exitcond_flatten6 [1/1] 2.33ns
.preheader:13  %exitcond_flatten6 = icmp eq i19 %indvar_flatten5, -216960

ST_214: indvar_flatten_next5 [1/1] 2.08ns
.preheader:14  %indvar_flatten_next5 = add i19 %indvar_flatten5, 1

ST_214: stg_1752 [1/1] 0.00ns
.preheader:15  br i1 %exitcond_flatten6, label %.preheader34.loopexit, label %.preheader21

ST_214: proc_15 [1/1] 1.84ns
.preheader21:0  %proc_15 = add i9 %proc11, 1

ST_214: exitcond13 [1/1] 2.07ns
.preheader21:3  %exitcond13 = icmp eq i10 %i4, -240

ST_214: i4_mid2 [1/1] 1.37ns
.preheader21:4  %i4_mid2 = select i1 %exitcond13, i10 0, i10 %i4

ST_214: tmp_57_mid1 [1/1] 0.00ns
.preheader21:5  %tmp_57_mid1 = zext i9 %proc_15 to i64

ST_214: tmp_57_mid2 [1/1] 1.37ns
.preheader21:6  %tmp_57_mid2 = select i1 %exitcond13, i9 %proc_15, i9 %proc11

ST_214: diag_1_addr_19 [1/1] 0.00ns
.preheader21:9  %diag_1_addr_19 = getelementptr inbounds [392 x i32]* %diag_1, i64 0, i64 %tmp_57_mid1

ST_214: diag_1_load_16 [2/2] 2.71ns
.preheader21:10  %diag_1_load_16 = load i32* %diag_1_addr_19, align 4

ST_214: diag_2_addr_19 [1/1] 0.00ns
.preheader21:11  %diag_2_addr_19 = getelementptr inbounds [392 x i32]* %diag_2, i64 0, i64 %tmp_57_mid1

ST_214: diag_2_load_16 [2/2] 2.71ns
.preheader21:12  %diag_2_load_16 = load i32* %diag_2_addr_19, align 4

ST_214: i_5 [1/1] 1.84ns
._crit_edge68:0  %i_5 = add i10 %i4_mid2, 1

ST_214: stg_1763 [1/1] 0.00ns
._crit_edge68:1  br label %.preheader


 <State 215>: 7.97ns
ST_215: top_left_16 [1/1] 0.00ns
.preheader:2  %top_left_16 = phi i32 [ %idx2_idx1_i510_top_left_s, %._crit_edge68 ], [ %top_left_14, %.preheader22 ]

ST_215: bottom_right_16 [1/1] 0.00ns
.preheader:3  %bottom_right_16 = phi i32 [ %bottom_right_write_assign_i5, %._crit_edge68 ], [ %bottom_right_14, %.preheader22 ]

ST_215: diag_1_load_15 [1/2] 2.71ns
.preheader:7  %diag_1_load_15 = load i32* %diag_1_addr_18, align 4

ST_215: diag_2_load_15 [1/2] 2.71ns
.preheader:9  %diag_2_load_15 = load i32* %diag_2_addr_18, align 4

ST_215: tmp_i22 [1/1] 2.52ns
.preheader:10  %tmp_i22 = icmp sgt i32 %diag_1_load_15, %diag_2_load_15

ST_215: top_left_17 [1/1] 1.37ns
.preheader:11  %top_left_17 = select i1 %tmp_i22, i32 %diag_2_load_15, i32 %diag_1_load_15

ST_215: bottom_right_17 [1/1] 1.37ns
.preheader:12  %bottom_right_17 = select i1 %tmp_i22, i32 %diag_1_load_15, i32 %diag_2_load_15

ST_215: tmp_57_mid2_cast [1/1] 0.00ns
.preheader21:7  %tmp_57_mid2_cast = zext i9 %tmp_57_mid2 to i19

ST_215: tmp_102 [1/1] 6.38ns
.preheader21:8  %tmp_102 = mul i19 %tmp_57_mid2_cast, 784

ST_215: diag_1_load_16 [1/2] 2.71ns
.preheader21:10  %diag_1_load_16 = load i32* %diag_1_addr_19, align 4

ST_215: diag_2_load_16 [1/2] 2.71ns
.preheader21:12  %diag_2_load_16 = load i32* %diag_2_addr_19, align 4

ST_215: tmp_i22_mid1 [1/1] 2.52ns
.preheader21:13  %tmp_i22_mid1 = icmp sgt i32 %diag_1_load_16, %diag_2_load_16

ST_215: top_left_24_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_24_mid2)
.preheader21:14  %top_left_24_mid1 = select i1 %tmp_i22_mid1, i32 %diag_2_load_16, i32 %diag_1_load_16

ST_215: top_left_24_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader21:15  %top_left_24_mid2 = select i1 %exitcond13, i32 %top_left_24_mid1, i32 %top_left_17

ST_215: bottom_right_30_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_30_mid2)
.preheader21:16  %bottom_right_30_mid1 = select i1 %tmp_i22_mid1, i32 %diag_1_load_16, i32 %diag_2_load_16

ST_215: bottom_right_30_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader21:17  %bottom_right_30_mid2 = select i1 %exitcond13, i32 %bottom_right_30_mid1, i32 %bottom_right_17

ST_215: tmp_66 [1/1] 2.07ns
.preheader21:22  %tmp_66 = icmp eq i10 %i4_mid2, 0


 <State 216>: 7.75ns
ST_216: stg_1781 [1/1] 0.00ns
.preheader21:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_wb_off_c_str)

ST_216: empty_29 [1/1] 0.00ns
.preheader21:2  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 307328, i64 307328, i64 307328)

ST_216: i4_cast1 [1/1] 0.00ns
.preheader21:18  %i4_cast1 = zext i10 %i4_mid2 to i32

ST_216: stg_1784 [1/1] 0.00ns
.preheader21:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1816) nounwind

ST_216: tmp_85 [1/1] 0.00ns
.preheader21:20  %tmp_85 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1816)

ST_216: stg_1786 [1/1] 0.00ns
.preheader21:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_216: idx2_idx1_i510_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader21:23  %idx2_idx1_i510_top_left_s = select i1 %tmp_66, i32 %top_left_24_mid2, i32 %top_left_16

ST_216: bottom_right_write_assign_i5 [1/1] 1.37ns (out node of the LUT)
.preheader21:24  %bottom_right_write_assign_i5 = select i1 %tmp_66, i32 %bottom_right_30_mid2, i32 %bottom_right_16

ST_216: tmp_71 [1/1] 2.52ns
.preheader21:25  %tmp_71 = icmp eq i32 %idx2_idx1_i510_top_left_s, 784

ST_216: tmp_74 [1/1] 2.52ns
.preheader21:26  %tmp_74 = icmp eq i32 %bottom_right_write_assign_i5, 784

ST_216: or_cond14 [1/1] 1.37ns
.preheader21:27  %or_cond14 = or i1 %tmp_71, %tmp_74

ST_216: stg_1792 [1/1] 0.00ns
.preheader21:28  br i1 %or_cond14, label %._crit_edge68, label %27

ST_216: tmp_80 [1/1] 2.52ns
:0  %tmp_80 = icmp eq i32 %i4_cast1, %bottom_right_write_assign_i5

ST_216: tmp_81 [1/1] 2.52ns
:1  %tmp_81 = icmp eq i32 %i4_cast1, %idx2_idx1_i510_top_left_s

ST_216: or_cond5 [1/1] 1.37ns
:2  %or_cond5 = or i1 %tmp_80, %tmp_81

ST_216: stg_1796 [1/1] 0.00ns
:3  br i1 %or_cond5, label %._crit_edge70, label %28

ST_216: tmp_82_cast1 [1/1] 0.00ns
:0  %tmp_82_cast1 = zext i10 %i4_mid2 to i21

ST_216: tmp_82_cast [1/1] 0.00ns
:1  %tmp_82_cast = zext i10 %i4_mid2 to i19

ST_216: tmp_111 [1/1] 2.08ns
:2  %tmp_111 = add i19 %tmp_82_cast, %tmp_102

ST_216: tmp_120_cast [1/1] 0.00ns
:3  %tmp_120_cast = zext i19 %tmp_111 to i64

ST_216: S_r_buffer_0_addr_2 [1/1] 0.00ns
:4  %S_r_buffer_0_addr_2 = getelementptr [307328 x float]* %S_r_buffer_0, i64 0, i64 %tmp_120_cast

ST_216: S_r_buffer_1_addr_2 [1/1] 0.00ns
:5  %S_r_buffer_1_addr_2 = getelementptr [307328 x float]* %S_r_buffer_1, i64 0, i64 %tmp_120_cast

ST_216: S_r_buffer_0_load [2/2] 2.71ns
:6  %S_r_buffer_0_load = load float* %S_r_buffer_0_addr_2, align 4

ST_216: tmp_112 [1/1] 0.00ns
:7  %tmp_112 = trunc i32 %idx2_idx1_i510_top_left_s to i21

ST_216: tmp_113 [1/1] 3.36ns
:8  %tmp_113 = mul i21 784, %tmp_112

ST_216: tmp_114 [1/1] 3.02ns
:9  %tmp_114 = add i21 %tmp_82_cast1, %tmp_113

ST_216: S_r_buffer_1_load [2/2] 2.71ns
:13  %S_r_buffer_1_load = load float* %S_r_buffer_1_addr_2, align 4

ST_216: tmp_115 [1/1] 0.00ns
:14  %tmp_115 = trunc i32 %bottom_right_write_assign_i5 to i21

ST_216: tmp_116 [1/1] 3.36ns
:15  %tmp_116 = mul i21 784, %tmp_115

ST_216: tmp_117 [1/1] 3.02ns
:16  %tmp_117 = add i21 %tmp_82_cast1, %tmp_116

ST_216: empty_28 [1/1] 0.00ns
._crit_edge70:0  %empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1816, i32 %tmp_85)

ST_216: stg_1812 [1/1] 0.00ns
._crit_edge70:1  br label %._crit_edge68


 <State 217>: 5.32ns
ST_217: S_r_buffer_0_load [1/2] 2.71ns
:6  %S_r_buffer_0_load = load float* %S_r_buffer_0_addr_2, align 4

ST_217: tmp_122_cast [1/1] 0.00ns
:10  %tmp_122_cast = sext i21 %tmp_114 to i64

ST_217: S_addr_15 [1/1] 0.00ns
:11  %S_addr_15 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_122_cast

ST_217: stg_1816 [2/2] 2.61ns
:12  store float %S_r_buffer_0_load, float* %S_addr_15, align 4

ST_217: S_r_buffer_1_load [1/2] 2.71ns
:13  %S_r_buffer_1_load = load float* %S_r_buffer_1_addr_2, align 4


 <State 218>: 2.61ns
ST_218: stg_1818 [1/2] 2.61ns
:12  store float %S_r_buffer_0_load, float* %S_addr_15, align 4

ST_218: tmp_124_cast [1/1] 0.00ns
:17  %tmp_124_cast = sext i21 %tmp_117 to i64

ST_218: S_addr_16 [1/1] 0.00ns
:18  %S_addr_16 = getelementptr [614656 x float]* %S, i64 0, i64 %tmp_124_cast

ST_218: stg_1821 [2/2] 2.61ns
:19  store float %S_r_buffer_1_load, float* %S_addr_16, align 4


 <State 219>: 2.61ns
ST_219: stg_1822 [1/2] 2.61ns
:19  store float %S_r_buffer_1_load, float* %S_addr_16, align 4

ST_219: stg_1823 [1/1] 0.00ns
:20  br label %._crit_edge70


 <State 220>: 0.00ns
ST_220: stg_1824 [1/1] 0.00ns
.preheader34.loopexit:0  store i32 %top_left_16, i32* %top_left

ST_220: stg_1825 [1/1] 0.00ns
.preheader34.loopexit:1  store i32 %bottom_right_16, i32* %bottom_right

ST_220: stg_1826 [1/1] 0.00ns
.preheader34.loopexit:2  br label %.preheader34



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 6>: 8.99ns
The critical path consists of the following:
	'mul' operation ('tmp', ./svd.h:532) (3.36 ns)
	'add' operation ('tmp_17', ./svd.h:532) (3.02 ns)
	'getelementptr' operation ('A_addr', ./svd.h:532) (0 ns)
	'load' operation ('A_load', ./svd.h:532) on array 'A' (2.61 ns)

 <State 197>: 8.99ns
The critical path consists of the following:
	'mul' operation ('tmp_105', ./svd.h:767) (3.36 ns)
	'add' operation ('tmp_106', ./svd.h:767) (3.02 ns)
	'getelementptr' operation ('S_addr_13', ./svd.h:767) (0 ns)
	'load' operation ('S_load_6', ./svd.h:767) on array 'S' (2.61 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173
	State 174
	State 175
	State 176
	State 177
	State 178
	State 179
	State 180
	State 181
	State 182
	State 183
	State 184
	State 185
	State 186
	State 187
	State 188
	State 189
	State 190
	State 191
	State 192
	State 193
	State 194
	State 195
	State 196
	State 197
	State 198
	State 199
	State 200
	State 201
	State 202
	State 203
	State 204
	State 205
	State 206
	State 207
	State 208
	State 209
	State 210
	State 211
	State 212
	State 213
	State 214
	State 215
	State 216
	State 217
	State 218
	State 219
	State 220


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
