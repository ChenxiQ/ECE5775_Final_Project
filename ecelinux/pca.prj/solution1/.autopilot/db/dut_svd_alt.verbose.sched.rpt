

================================================================
== Vivado HLS Report for 'dut_svd_alt'
================================================================
* Date:           Tue Nov 29 10:24:22 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        pca.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.44|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  93031|  93031|  93031|  93031|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |                       |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name       |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |- L_rd_buffer          |    262|    262|         8|          1|          1|   256|    yes   |
        |- sweep_loop           |  92766|  92766|     15461|          -|          -|     6|    no    |
        | + sweep_loop.1        |      8|      8|         1|          -|          -|     8|    no    |
        | + sweep_loop.2        |  15450|  15450|      1030|          -|          -|    15|    no    |
        |  ++ sweep_loop.2.1    |     12|     12|         2|          -|          -|     6|    no    |
        |  ++ sweep_loop.2.2    |     14|     14|         2|          -|          -|     7|    no    |
        |  ++ svd_rd_diag       |     18|     18|         5|          2|          1|     8|    yes   |
        |  ++ svd_calc_diag     |    137|    137|       131|          1|          1|     8|    yes   |
        |  ++ svd_wb_diag       |     34|     34|         7|          4|          1|     8|    yes   |
        |  ++ L_svd_rd_off_r    |    130|    130|         4|          1|          1|   128|    yes   |
        |  ++ L_svd_calc_off_r  |    139|    139|        13|          1|          1|   128|    yes   |
        |  ++ L_svd_wb_off_r    |    131|    131|         5|          1|          1|   128|    yes   |
        |  ++ L_svd_rd_off_c    |    130|    130|         4|          1|          1|   128|    yes   |
        |  ++ L_svd_calc_off_c  |    139|    139|        13|          1|          1|   128|    yes   |
        |  ++ L_svd_wb_off_c    |    131|    131|         5|          1|          1|   128|    yes   |
        +-----------------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 8
  * Pipeline-1: initiation interval (II) = 2, depth = 5
  * Pipeline-2: initiation interval (II) = 1, depth = 131
  * Pipeline-3: initiation interval (II) = 4, depth = 7
  * Pipeline-4: initiation interval (II) = 1, depth = 4
  * Pipeline-5: initiation interval (II) = 1, depth = 13
  * Pipeline-6: initiation interval (II) = 1, depth = 5
  * Pipeline-7: initiation interval (II) = 1, depth = 4
  * Pipeline-8: initiation interval (II) = 1, depth = 13
  * Pipeline-9: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 207
* Pipeline: 10
  Pipeline-0: II = 1, D = 8, States = { 2 3 4 5 6 7 8 9 }
  Pipeline-1: II = 2, D = 5, States = { 20 21 22 23 24 }
  Pipeline-2: II = 1, D = 131, States = { 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 }
  Pipeline-3: II = 4, D = 7, States = { 156 157 158 159 160 161 162 }
  Pipeline-4: II = 1, D = 4, States = { 163 164 165 166 }
  Pipeline-5: II = 1, D = 13, States = { 167 168 169 170 171 172 173 174 175 176 177 178 179 }
  Pipeline-6: II = 1, D = 5, States = { 180 181 182 183 184 }
  Pipeline-7: II = 1, D = 4, States = { 185 186 187 188 }
  Pipeline-8: II = 1, D = 13, States = { 189 190 191 192 193 194 195 196 197 198 199 200 201 }
  Pipeline-9: II = 1, D = 5, States = { 202 203 204 205 206 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	10  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	2  / true
10 --> 
	11  / true
11 --> 
	12  / (!exitcond3)
12 --> 
	13  / (exitcond5)
	12  / (!exitcond5)
13 --> 
	14  / (!exitcond7)
	11  / (exitcond7)
14 --> 
	15  / true
15 --> 
	16  / (!exitcond9)
	17  / (exitcond9)
16 --> 
	15  / true
17 --> 
	18  / true
18 --> 
	19  / (!tmp_5)
	20  / (tmp_5)
19 --> 
	18  / true
20 --> 
	25  / (exitcond1)
	21  / (!exitcond1)
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	20  / true
25 --> 
	26  / true
26 --> 
	156  / (exitcond2)
	27  / (!exitcond2)
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	25  / true
156 --> 
	163  / (exitcond4)
	157  / (!exitcond4)
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	156  / true
163 --> 
	164  / true
164 --> 
	165  / true
165 --> 
	167  / (exitcond_flatten1)
	166  / (!exitcond_flatten1)
166 --> 
	163  / true
167 --> 
	168  / true
168 --> 
	169  / true
169 --> 
	180  / (exitcond_flatten2)
	170  / (!exitcond_flatten2)
170 --> 
	171  / true
171 --> 
	172  / true
172 --> 
	173  / true
173 --> 
	174  / true
174 --> 
	175  / true
175 --> 
	176  / true
176 --> 
	177  / true
177 --> 
	178  / true
178 --> 
	179  / true
179 --> 
	167  / true
180 --> 
	181  / true
181 --> 
	182  / true
182 --> 
	185  / (exitcond_flatten3)
	183  / (!exitcond_flatten3)
183 --> 
	184  / true
184 --> 
	180  / true
185 --> 
	186  / true
186 --> 
	187  / true
187 --> 
	189  / (exitcond_flatten4)
	188  / (!exitcond_flatten4)
188 --> 
	185  / true
189 --> 
	190  / true
190 --> 
	191  / true
191 --> 
	202  / (exitcond_flatten5)
	192  / (!exitcond_flatten5)
192 --> 
	193  / true
193 --> 
	194  / true
194 --> 
	195  / true
195 --> 
	196  / true
196 --> 
	197  / true
197 --> 
	198  / true
198 --> 
	199  / true
199 --> 
	200  / true
200 --> 
	201  / true
201 --> 
	189  / true
202 --> 
	203  / true
203 --> 
	207  / (exitcond_flatten6)
	204  / (!exitcond_flatten6)
204 --> 
	205  / true
205 --> 
	206  / true
206 --> 
	202  / true
207 --> 
	13  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: diag_1 [1/1] 0.00ns
:0  %diag_1 = alloca [8 x i32], align 16

ST_1: diag_2 [1/1] 0.00ns
:1  %diag_2 = alloca [8 x i32], align 16

ST_1: S_block_buffer_0_0 [1/1] 0.00ns
:2  %S_block_buffer_0_0 = alloca [8 x float], align 16

ST_1: S_block_buffer_0_1 [1/1] 0.00ns
:3  %S_block_buffer_0_1 = alloca [8 x float], align 16

ST_1: S_block_buffer_1_0 [1/1] 0.00ns
:4  %S_block_buffer_1_0 = alloca [8 x float], align 16

ST_1: S_block_buffer_1_1 [1/1] 0.00ns
:5  %S_block_buffer_1_1 = alloca [8 x float], align 16

ST_1: U_block_buffer_0_0 [1/1] 0.00ns
:6  %U_block_buffer_0_0 = alloca [8 x float], align 16

ST_1: U_block_buffer_0_1 [1/1] 0.00ns
:7  %U_block_buffer_0_1 = alloca [8 x float], align 16

ST_1: U_block_buffer_1_0 [1/1] 0.00ns
:8  %U_block_buffer_1_0 = alloca [8 x float], align 16

ST_1: U_block_buffer_1_1 [1/1] 0.00ns
:9  %U_block_buffer_1_1 = alloca [8 x float], align 16

ST_1: V_block_buffer_0_0 [1/1] 0.00ns
:10  %V_block_buffer_0_0 = alloca [8 x float], align 16

ST_1: V_block_buffer_0_1 [1/1] 0.00ns
:11  %V_block_buffer_0_1 = alloca [8 x float], align 16

ST_1: V_block_buffer_1_0 [1/1] 0.00ns
:12  %V_block_buffer_1_0 = alloca [8 x float], align 16

ST_1: V_block_buffer_1_1 [1/1] 0.00ns
:13  %V_block_buffer_1_1 = alloca [8 x float], align 16

ST_1: S_r_buffer_0 [1/1] 0.00ns
:14  %S_r_buffer_0 = alloca [128 x float], align 4

ST_1: S_r_buffer_1 [1/1] 0.00ns
:15  %S_r_buffer_1 = alloca [128 x float], align 4

ST_1: S_c_buffer_0 [1/1] 0.00ns
:16  %S_c_buffer_0 = alloca [128 x float], align 4

ST_1: S_c_buffer_1 [1/1] 0.00ns
:17  %S_c_buffer_1 = alloca [128 x float], align 4

ST_1: U_c_buffer_0 [1/1] 0.00ns
:18  %U_c_buffer_0 = alloca [128 x float], align 4

ST_1: U_c_buffer_1 [1/1] 0.00ns
:19  %U_c_buffer_1 = alloca [128 x float], align 4

ST_1: V_c_buffer_0 [1/1] 0.00ns
:20  %V_c_buffer_0 = alloca [128 x float], align 4

ST_1: V_c_buffer_1 [1/1] 0.00ns
:21  %V_c_buffer_1 = alloca [128 x float], align 4

ST_1: J2x2_0_0 [1/1] 0.00ns
:22  %J2x2_0_0 = alloca [8 x float], align 16

ST_1: J2x2_0_1 [1/1] 0.00ns
:23  %J2x2_0_1 = alloca [8 x float], align 16

ST_1: J2x2_1_0 [1/1] 0.00ns
:24  %J2x2_1_0 = alloca [8 x float], align 16

ST_1: J2x2_1_1 [1/1] 0.00ns
:25  %J2x2_1_1 = alloca [8 x float], align 16

ST_1: K2x2_0_0 [1/1] 0.00ns
:26  %K2x2_0_0 = alloca [8 x float], align 16

ST_1: K2x2_0_1 [1/1] 0.00ns
:27  %K2x2_0_1 = alloca [8 x float], align 16

ST_1: K2x2_1_0 [1/1] 0.00ns
:28  %K2x2_1_0 = alloca [8 x float], align 16

ST_1: K2x2_1_1 [1/1] 0.00ns
:29  %K2x2_1_1 = alloca [8 x float], align 16

ST_1: stg_238 [1/1] 1.57ns
:30  br label %.preheader36


 <State 2>: 5.00ns
ST_2: indvar_flatten [1/1] 0.00ns
.preheader36:0  %indvar_flatten = phi i9 [ 0, %0 ], [ %indvar_flatten_next, %.preheader36.preheader ]

ST_2: i [1/1] 0.00ns
.preheader36:1  %i = phi i5 [ 0, %0 ], [ %tmp_mid2_v, %.preheader36.preheader ]

ST_2: j [1/1] 0.00ns
.preheader36:2  %j = phi i5 [ 0, %0 ], [ %j_1, %.preheader36.preheader ]

ST_2: exitcond_flatten [1/1] 2.03ns
.preheader36:3  %exitcond_flatten = icmp eq i9 %indvar_flatten, -256

ST_2: indvar_flatten_next [1/1] 1.84ns
.preheader36:4  %indvar_flatten_next = add i9 %indvar_flatten, 1

ST_2: stg_244 [1/1] 0.00ns
.preheader36:5  br i1 %exitcond_flatten, label %.preheader35.preheader, label %.preheader36.preheader

ST_2: i_1 [1/1] 1.72ns
.preheader36.preheader:0  %i_1 = add i5 %i, 1

ST_2: exitcond [1/1] 1.91ns
.preheader36.preheader:3  %exitcond = icmp eq i5 %j, -16

ST_2: j_mid2 [1/1] 1.37ns
.preheader36.preheader:4  %j_mid2 = select i1 %exitcond, i5 0, i5 %j

ST_2: tmp_mid2_v [1/1] 1.37ns
.preheader36.preheader:5  %tmp_mid2_v = select i1 %exitcond, i5 %i_1, i5 %i

ST_2: j_1 [1/1] 1.72ns
.preheader36.preheader:26  %j_1 = add i5 %j_mid2, 1


 <State 3>: 8.32ns
ST_3: tmp_7 [1/1] 1.91ns
.preheader36.preheader:20  %tmp_7 = icmp eq i5 %tmp_mid2_v, %j_mid2

ST_3: tmp_8 [1/1] 0.00ns
.preheader36.preheader:21  %tmp_8 = zext i1 %tmp_7 to i32

ST_3: tmp_9 [6/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 4>: 6.41ns
ST_4: tmp_9 [5/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 5>: 6.41ns
ST_5: tmp_9 [4/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 6>: 6.41ns
ST_6: tmp_9 [3/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 7>: 6.41ns
ST_7: tmp_9 [2/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 8>: 6.41ns
ST_8: tmp [1/1] 0.00ns
.preheader36.preheader:6  %tmp = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %tmp_mid2_v, i4 0)

ST_8: tmp_69_cast [1/1] 0.00ns
.preheader36.preheader:7  %tmp_69_cast = zext i9 %tmp to i10

ST_8: tmp_6_cast [1/1] 0.00ns
.preheader36.preheader:11  %tmp_6_cast = zext i5 %j_mid2 to i10

ST_8: tmp_6 [1/1] 1.84ns
.preheader36.preheader:12  %tmp_6 = add i10 %tmp_6_cast, %tmp_69_cast

ST_8: tmp_70_cast [1/1] 0.00ns
.preheader36.preheader:13  %tmp_70_cast = zext i10 %tmp_6 to i64

ST_8: A_addr [1/1] 0.00ns
.preheader36.preheader:14  %A_addr = getelementptr [256 x float]* %A, i64 0, i64 %tmp_70_cast

ST_8: A_load [2/2] 2.71ns
.preheader36.preheader:18  %A_load = load float* %A_addr, align 4

ST_8: tmp_9 [1/6] 6.41ns
.preheader36.preheader:22  %tmp_9 = sitofp i32 %tmp_8 to float


 <State 9>: 5.42ns
ST_9: stg_265 [1/1] 0.00ns
.preheader36.preheader:1  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @L_rd_buffer_str)

ST_9: empty [1/1] 0.00ns
.preheader36.preheader:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_9: stg_267 [1/1] 0.00ns
.preheader36.preheader:8  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str1805) nounwind

ST_9: tmp_s [1/1] 0.00ns
.preheader36.preheader:9  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str1805)

ST_9: stg_269 [1/1] 0.00ns
.preheader36.preheader:10  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_9: S_addr [1/1] 0.00ns
.preheader36.preheader:15  %S_addr = getelementptr [256 x float]* %S, i64 0, i64 %tmp_70_cast

ST_9: U_addr [1/1] 0.00ns
.preheader36.preheader:16  %U_addr = getelementptr [256 x float]* %U, i64 0, i64 %tmp_70_cast

ST_9: V_addr [1/1] 0.00ns
.preheader36.preheader:17  %V_addr = getelementptr [256 x float]* %V, i64 0, i64 %tmp_70_cast

ST_9: A_load [1/2] 2.71ns
.preheader36.preheader:18  %A_load = load float* %A_addr, align 4

ST_9: stg_274 [1/1] 2.71ns
.preheader36.preheader:19  store float %A_load, float* %S_addr, align 4

ST_9: stg_275 [1/1] 2.71ns
.preheader36.preheader:23  store float %tmp_9, float* %U_addr, align 4

ST_9: stg_276 [1/1] 2.71ns
.preheader36.preheader:24  store float %tmp_9, float* %V_addr, align 4

ST_9: empty_6 [1/1] 0.00ns
.preheader36.preheader:25  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str1805, i32 %tmp_s)

ST_9: stg_278 [1/1] 0.00ns
.preheader36.preheader:27  br label %.preheader36


 <State 10>: 1.57ns
ST_10: bottom_right [1/1] 0.00ns
.preheader35.preheader:0  %bottom_right = alloca i32

ST_10: top_left [1/1] 0.00ns
.preheader35.preheader:1  %top_left = alloca i32

ST_10: diag_1_addr [1/1] 0.00ns
.preheader35.preheader:2  %diag_1_addr = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 1

ST_10: diag_2_addr [1/1] 0.00ns
.preheader35.preheader:3  %diag_2_addr = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 7

ST_10: diag_1_addr_1 [1/1] 0.00ns
.preheader35.preheader:4  %diag_1_addr_1 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 7

ST_10: diag_2_addr_1 [1/1] 0.00ns
.preheader35.preheader:5  %diag_2_addr_1 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 0

ST_10: stg_285 [1/1] 1.57ns
.preheader35.preheader:6  br label %.preheader35


 <State 11>: 1.62ns
ST_11: sweepnum [1/1] 0.00ns
.preheader35:0  %sweepnum = phi i3 [ 0, %.preheader35.preheader ], [ %sweepnum_1, %29 ]

ST_11: exitcond3 [1/1] 1.62ns
.preheader35:1  %exitcond3 = icmp eq i3 %sweepnum, -2

ST_11: sweepnum_1 [1/1] 0.80ns
.preheader35:2  %sweepnum_1 = add i3 %sweepnum, 1

ST_11: stg_289 [1/1] 0.00ns
.preheader35:3  br i1 %exitcond3, label %30, label %1

ST_11: empty_7 [1/1] 0.00ns
:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_11: stg_291 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1807) nounwind

ST_11: tmp_17 [1/1] 0.00ns
:2  %tmp_17 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1807)

ST_11: stg_293 [1/1] 1.57ns
:3  br label %2

ST_11: stg_294 [1/1] 0.00ns
:0  ret void


 <State 12>: 3.45ns
ST_12: proc [1/1] 0.00ns
:0  %proc = phi i4 [ 0, %1 ], [ %proc_1, %3 ]

ST_12: exitcond5 [1/1] 1.88ns
:1  %exitcond5 = icmp eq i4 %proc, -8

ST_12: empty_8 [1/1] 0.00ns
:2  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_12: proc_1 [1/1] 0.80ns
:3  %proc_1 = add i4 %proc, 1

ST_12: stg_299 [1/1] 1.57ns
:4  br i1 %exitcond5, label %.preheader34, label %3

ST_12: tmp_18 [1/1] 0.00ns
:0  %tmp_18 = shl i4 %proc, 1

ST_12: tmp_cast [1/1] 0.00ns
:1  %tmp_cast = zext i4 %tmp_18 to i32

ST_12: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = zext i4 %proc to i64

ST_12: diag_1_addr_2 [1/1] 0.00ns
:3  %diag_1_addr_2 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_1

ST_12: stg_304 [1/1] 2.39ns
:4  store i32 %tmp_cast, i32* %diag_1_addr_2, align 4

ST_12: tmp_2 [1/1] 0.00ns
:5  %tmp_2 = or i4 %tmp_18, 1

ST_12: tmp_2_cast [1/1] 0.00ns
:6  %tmp_2_cast = zext i4 %tmp_2 to i32

ST_12: diag_2_addr_2 [1/1] 0.00ns
:7  %diag_2_addr_2 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_1

ST_12: stg_308 [1/1] 2.39ns
:8  store i32 %tmp_2_cast, i32* %diag_2_addr_2, align 4

ST_12: stg_309 [1/1] 0.00ns
:9  br label %2


 <State 13>: 2.39ns
ST_13: step [1/1] 0.00ns
.preheader34:0  %step = phi i4 [ %step_1, %.preheader34.loopexit ], [ 0, %2 ]

ST_13: bottom_right_load [1/1] 0.00ns
.preheader34:1  %bottom_right_load = load i32* %bottom_right

ST_13: top_left_load [1/1] 0.00ns
.preheader34:2  %top_left_load = load i32* %top_left

ST_13: exitcond7 [1/1] 1.88ns
.preheader34:3  %exitcond7 = icmp eq i4 %step, -1

ST_13: step_1 [1/1] 0.80ns
.preheader34:4  %step_1 = add i4 %step, 1

ST_13: stg_315 [1/1] 0.00ns
.preheader34:5  br i1 %exitcond7, label %29, label %4

ST_13: temp_diag [2/2] 2.39ns
:1  %temp_diag = load i32* %diag_1_addr, align 4

ST_13: empty_30 [1/1] 0.00ns
:0  %empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1807, i32 %tmp_17)

ST_13: stg_318 [1/1] 0.00ns
:1  br label %.preheader35


 <State 14>: 2.39ns
ST_14: empty_9 [1/1] 0.00ns
:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 15, i64 15, i64 15)

ST_14: temp_diag [1/2] 2.39ns
:1  %temp_diag = load i32* %diag_1_addr, align 4

ST_14: stg_321 [1/1] 1.57ns
:2  br label %5


 <State 15>: 3.19ns
ST_15: proc1 [1/1] 0.00ns
:0  %proc1 = phi i3 [ 1, %4 ], [ %proc_2, %6 ]

ST_15: exitcond9 [1/1] 1.62ns
:1  %exitcond9 = icmp eq i3 %proc1, -1

ST_15: empty_10 [1/1] 0.00ns
:2  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_15: stg_325 [1/1] 0.00ns
:3  br i1 %exitcond9, label %7, label %6

ST_15: proc_2 [1/1] 0.80ns
:0  %proc_2 = add i3 %proc1, 1

ST_15: tmp_3 [1/1] 0.00ns
:1  %tmp_3 = zext i3 %proc_2 to i64

ST_15: diag_1_addr_3 [1/1] 0.00ns
:2  %diag_1_addr_3 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_3

ST_15: diag_1_load [2/2] 2.39ns
:3  %diag_1_load = load i32* %diag_1_addr_3, align 4

ST_15: diag_2_load [2/2] 2.39ns
:0  %diag_2_load = load i32* %diag_2_addr, align 4


 <State 16>: 4.78ns
ST_16: diag_1_load [1/2] 2.39ns
:3  %diag_1_load = load i32* %diag_1_addr_3, align 4

ST_16: tmp_4 [1/1] 0.00ns
:4  %tmp_4 = zext i3 %proc1 to i64

ST_16: diag_1_addr_4 [1/1] 0.00ns
:5  %diag_1_addr_4 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_4

ST_16: stg_334 [1/1] 2.39ns
:6  store i32 %diag_1_load, i32* %diag_1_addr_4, align 4

ST_16: stg_335 [1/1] 0.00ns
:7  br label %5


 <State 17>: 4.78ns
ST_17: diag_2_load [1/2] 2.39ns
:0  %diag_2_load = load i32* %diag_2_addr, align 4

ST_17: stg_337 [1/1] 2.39ns
:1  store i32 %diag_2_load, i32* %diag_1_addr_1, align 4

ST_17: stg_338 [1/1] 1.57ns
:2  br label %8


 <State 18>: 3.19ns
ST_18: proc2 [1/1] 0.00ns
:0  %proc2 = phi i3 [ -1, %7 ], [ %proc_3, %9 ]

ST_18: tmp_5 [1/1] 1.62ns
:1  %tmp_5 = icmp eq i3 %proc2, 0

ST_18: empty_11 [1/1] 0.00ns
:2  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 7, i64 7, i64 7)

ST_18: stg_342 [1/1] 0.00ns
:3  br i1 %tmp_5, label %10, label %9

ST_18: proc_3 [1/1] 0.80ns
:0  %proc_3 = add i3 %proc2, -1

ST_18: tmp_10 [1/1] 0.00ns
:1  %tmp_10 = zext i3 %proc_3 to i64

ST_18: diag_2_addr_3 [1/1] 0.00ns
:2  %diag_2_addr_3 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_10

ST_18: diag_2_load_1 [2/2] 2.39ns
:3  %diag_2_load_1 = load i32* %diag_2_addr_3, align 4

ST_18: stg_347 [1/1] 2.39ns
:0  store i32 %temp_diag, i32* %diag_2_addr_1, align 16

ST_18: stg_348 [1/1] 1.57ns
:1  br label %11


 <State 19>: 4.78ns
ST_19: diag_2_load_1 [1/2] 2.39ns
:3  %diag_2_load_1 = load i32* %diag_2_addr_3, align 4

ST_19: tmp_11 [1/1] 0.00ns
:4  %tmp_11 = zext i3 %proc2 to i64

ST_19: diag_2_addr_4 [1/1] 0.00ns
:5  %diag_2_addr_4 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_11

ST_19: stg_352 [1/1] 2.39ns
:6  store i32 %diag_2_load_1, i32* %diag_2_addr_4, align 4

ST_19: stg_353 [1/1] 0.00ns
:7  br label %8


 <State 20>: 3.45ns
ST_20: top_left_2 [1/1] 0.00ns
:0  %top_left_2 = phi i32 [ %top_left_load, %10 ], [ %top_left_1, %._crit_edge ]

ST_20: bottom_right_2 [1/1] 0.00ns
:1  %bottom_right_2 = phi i32 [ %bottom_right_load, %10 ], [ %bottom_right_1, %._crit_edge ]

ST_20: proc3 [1/1] 0.00ns
:2  %proc3 = phi i4 [ 0, %10 ], [ %proc_4, %._crit_edge ]

ST_20: exitcond1 [1/1] 1.88ns
:3  %exitcond1 = icmp eq i4 %proc3, -8

ST_20: proc_4 [1/1] 0.80ns
:4  %proc_4 = add i4 %proc3, 1

ST_20: stg_359 [1/1] 1.57ns
:5  br i1 %exitcond1, label %.preheader33, label %12

ST_20: tmp_12 [1/1] 0.00ns
:4  %tmp_12 = zext i4 %proc3 to i64

ST_20: diag_1_addr_5 [1/1] 0.00ns
:5  %diag_1_addr_5 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_12

ST_20: diag_1_load_2 [2/2] 2.39ns
:6  %diag_1_load_2 = load i32* %diag_1_addr_5, align 4

ST_20: diag_2_addr_5 [1/1] 0.00ns
:7  %diag_2_addr_5 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_12

ST_20: diag_2_load_2 [2/2] 2.39ns
:8  %diag_2_load_2 = load i32* %diag_2_addr_5, align 4

ST_20: stg_365 [1/1] 0.00ns
._crit_edge:0  br label %11


 <State 21>: 6.28ns
ST_21: diag_1_load_2 [1/2] 2.39ns
:6  %diag_1_load_2 = load i32* %diag_1_addr_5, align 4

ST_21: diag_2_load_2 [1/2] 2.39ns
:8  %diag_2_load_2 = load i32* %diag_2_addr_5, align 4

ST_21: tmp_i [1/1] 2.52ns
:9  %tmp_i = icmp sgt i32 %diag_1_load_2, %diag_2_load_2

ST_21: top_left_1 [1/1] 1.37ns
:10  %top_left_1 = select i1 %tmp_i, i32 %diag_2_load_2, i32 %diag_1_load_2

ST_21: bottom_right_1 [1/1] 1.37ns
:11  %bottom_right_1 = select i1 %tmp_i, i32 %diag_1_load_2, i32 %diag_2_load_2


 <State 22>: 4.55ns
ST_22: empty_12 [1/1] 0.00ns
:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_22: stg_372 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1808) nounwind

ST_22: tmp_22 [1/1] 0.00ns
:2  %tmp_22 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1808)

ST_22: stg_374 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_22: tmp_13 [1/1] 2.52ns
:12  %tmp_13 = icmp eq i32 %top_left_1, 16

ST_22: tmp_14 [1/1] 2.52ns
:13  %tmp_14 = icmp eq i32 %bottom_right_1, 16

ST_22: or_cond6 [1/1] 1.37ns
:14  %or_cond6 = or i1 %tmp_13, %tmp_14

ST_22: stg_378 [1/1] 0.00ns
:15  br i1 %or_cond6, label %._crit_edge, label %13

ST_22: tmp_24 [1/1] 0.00ns
:0  %tmp_24 = trunc i32 %top_left_1 to i10

ST_22: tmp_25 [1/1] 0.00ns
:1  %tmp_25 = trunc i32 %top_left_1 to i6

ST_22: tmp_86_cast [1/1] 0.00ns
:2  %tmp_86_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_25, i4 0)

ST_22: tmp_28 [1/1] 1.84ns
:3  %tmp_28 = add i10 %tmp_86_cast, %tmp_24

ST_22: tmp_87_cast [1/1] 0.00ns
:4  %tmp_87_cast = sext i10 %tmp_28 to i64

ST_22: S_addr_1 [1/1] 0.00ns
:5  %S_addr_1 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_87_cast

ST_22: U_addr_1 [1/1] 0.00ns
:6  %U_addr_1 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_87_cast

ST_22: V_addr_1 [1/1] 0.00ns
:7  %V_addr_1 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_87_cast

ST_22: S_load [2/2] 2.71ns
:8  %S_load = load float* %S_addr_1, align 4

ST_22: U_load [2/2] 2.71ns
:11  %U_load = load float* %U_addr_1, align 4

ST_22: V_load [2/2] 2.71ns
:14  %V_load = load float* %V_addr_1, align 4

ST_22: tmp_29 [1/1] 0.00ns
:17  %tmp_29 = trunc i32 %bottom_right_1 to i10

ST_22: tmp_44 [1/1] 1.84ns
:18  %tmp_44 = add i10 %tmp_86_cast, %tmp_29

ST_22: tmp_88_cast [1/1] 0.00ns
:19  %tmp_88_cast = sext i10 %tmp_44 to i64

ST_22: S_addr_2 [1/1] 0.00ns
:20  %S_addr_2 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_88_cast

ST_22: tmp_45 [1/1] 0.00ns
:21  %tmp_45 = trunc i32 %bottom_right_1 to i6

ST_22: tmp_90_cast [1/1] 0.00ns
:22  %tmp_90_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_45, i4 0)

ST_22: tmp_46 [1/1] 1.84ns
:23  %tmp_46 = add i10 %tmp_90_cast, %tmp_24

ST_22: tmp_53 [1/1] 1.84ns
:26  %tmp_53 = add i10 %tmp_90_cast, %tmp_29

ST_22: U_addr_2 [1/1] 0.00ns
:29  %U_addr_2 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_88_cast

ST_22: V_addr_2 [1/1] 0.00ns
:32  %V_addr_2 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_88_cast

ST_22: S_load_1 [2/2] 2.71ns
:35  %S_load_1 = load float* %S_addr_2, align 4

ST_22: U_load_1 [2/2] 2.71ns
:38  %U_load_1 = load float* %U_addr_2, align 4

ST_22: V_load_1 [2/2] 2.71ns
:41  %V_load_1 = load float* %V_addr_2, align 4


 <State 23>: 5.10ns
ST_23: S_load [1/2] 2.71ns
:8  %S_load = load float* %S_addr_1, align 4

ST_23: S_block_buffer_0_0_addr [1/1] 0.00ns
:9  %S_block_buffer_0_0_addr = getelementptr [8 x float]* %S_block_buffer_0_0, i64 0, i64 %tmp_12

ST_23: stg_405 [1/1] 2.39ns
:10  store float %S_load, float* %S_block_buffer_0_0_addr, align 16

ST_23: U_load [1/2] 2.71ns
:11  %U_load = load float* %U_addr_1, align 4

ST_23: U_block_buffer_0_0_addr [1/1] 0.00ns
:12  %U_block_buffer_0_0_addr = getelementptr [8 x float]* %U_block_buffer_0_0, i64 0, i64 %tmp_12

ST_23: stg_408 [1/1] 2.39ns
:13  store float %U_load, float* %U_block_buffer_0_0_addr, align 16

ST_23: V_load [1/2] 2.71ns
:14  %V_load = load float* %V_addr_1, align 4

ST_23: V_block_buffer_0_0_addr [1/1] 0.00ns
:15  %V_block_buffer_0_0_addr = getelementptr [8 x float]* %V_block_buffer_0_0, i64 0, i64 %tmp_12

ST_23: stg_411 [1/1] 2.39ns
:16  store float %V_load, float* %V_block_buffer_0_0_addr, align 16

ST_23: tmp_91_cast [1/1] 0.00ns
:24  %tmp_91_cast = sext i10 %tmp_46 to i64

ST_23: S_addr_3 [1/1] 0.00ns
:25  %S_addr_3 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_91_cast

ST_23: tmp_92_cast [1/1] 0.00ns
:27  %tmp_92_cast = sext i10 %tmp_53 to i64

ST_23: S_addr_4 [1/1] 0.00ns
:28  %S_addr_4 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_92_cast

ST_23: U_addr_3 [1/1] 0.00ns
:30  %U_addr_3 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_91_cast

ST_23: U_addr_4 [1/1] 0.00ns
:31  %U_addr_4 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_92_cast

ST_23: V_addr_3 [1/1] 0.00ns
:33  %V_addr_3 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_91_cast

ST_23: V_addr_4 [1/1] 0.00ns
:34  %V_addr_4 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_92_cast

ST_23: S_load_1 [1/2] 2.71ns
:35  %S_load_1 = load float* %S_addr_2, align 4

ST_23: S_block_buffer_0_1_addr [1/1] 0.00ns
:36  %S_block_buffer_0_1_addr = getelementptr [8 x float]* %S_block_buffer_0_1, i64 0, i64 %tmp_12

ST_23: stg_422 [1/1] 2.39ns
:37  store float %S_load_1, float* %S_block_buffer_0_1_addr, align 4

ST_23: U_load_1 [1/2] 2.71ns
:38  %U_load_1 = load float* %U_addr_2, align 4

ST_23: U_block_buffer_0_1_addr [1/1] 0.00ns
:39  %U_block_buffer_0_1_addr = getelementptr [8 x float]* %U_block_buffer_0_1, i64 0, i64 %tmp_12

ST_23: stg_425 [1/1] 2.39ns
:40  store float %U_load_1, float* %U_block_buffer_0_1_addr, align 4

ST_23: V_load_1 [1/2] 2.71ns
:41  %V_load_1 = load float* %V_addr_2, align 4

ST_23: V_block_buffer_0_1_addr [1/1] 0.00ns
:42  %V_block_buffer_0_1_addr = getelementptr [8 x float]* %V_block_buffer_0_1, i64 0, i64 %tmp_12

ST_23: stg_428 [1/1] 2.39ns
:43  store float %V_load_1, float* %V_block_buffer_0_1_addr, align 4

ST_23: S_load_2 [2/2] 2.71ns
:44  %S_load_2 = load float* %S_addr_3, align 4

ST_23: U_load_2 [2/2] 2.71ns
:47  %U_load_2 = load float* %U_addr_3, align 4

ST_23: V_load_2 [2/2] 2.71ns
:50  %V_load_2 = load float* %V_addr_3, align 4

ST_23: S_load_3 [2/2] 2.71ns
:53  %S_load_3 = load float* %S_addr_4, align 4

ST_23: U_load_3 [2/2] 2.71ns
:56  %U_load_3 = load float* %U_addr_4, align 4

ST_23: V_load_3 [2/2] 2.71ns
:59  %V_load_3 = load float* %V_addr_4, align 4


 <State 24>: 5.10ns
ST_24: S_load_2 [1/2] 2.71ns
:44  %S_load_2 = load float* %S_addr_3, align 4

ST_24: S_block_buffer_1_0_addr [1/1] 0.00ns
:45  %S_block_buffer_1_0_addr = getelementptr [8 x float]* %S_block_buffer_1_0, i64 0, i64 %tmp_12

ST_24: stg_437 [1/1] 2.39ns
:46  store float %S_load_2, float* %S_block_buffer_1_0_addr, align 8

ST_24: U_load_2 [1/2] 2.71ns
:47  %U_load_2 = load float* %U_addr_3, align 4

ST_24: U_block_buffer_1_0_addr [1/1] 0.00ns
:48  %U_block_buffer_1_0_addr = getelementptr [8 x float]* %U_block_buffer_1_0, i64 0, i64 %tmp_12

ST_24: stg_440 [1/1] 2.39ns
:49  store float %U_load_2, float* %U_block_buffer_1_0_addr, align 8

ST_24: V_load_2 [1/2] 2.71ns
:50  %V_load_2 = load float* %V_addr_3, align 4

ST_24: V_block_buffer_1_0_addr [1/1] 0.00ns
:51  %V_block_buffer_1_0_addr = getelementptr [8 x float]* %V_block_buffer_1_0, i64 0, i64 %tmp_12

ST_24: stg_443 [1/1] 2.39ns
:52  store float %V_load_2, float* %V_block_buffer_1_0_addr, align 8

ST_24: S_load_3 [1/2] 2.71ns
:53  %S_load_3 = load float* %S_addr_4, align 4

ST_24: S_block_buffer_1_1_addr [1/1] 0.00ns
:54  %S_block_buffer_1_1_addr = getelementptr [8 x float]* %S_block_buffer_1_1, i64 0, i64 %tmp_12

ST_24: stg_446 [1/1] 2.39ns
:55  store float %S_load_3, float* %S_block_buffer_1_1_addr, align 4

ST_24: U_load_3 [1/2] 2.71ns
:56  %U_load_3 = load float* %U_addr_4, align 4

ST_24: U_block_buffer_1_1_addr [1/1] 0.00ns
:57  %U_block_buffer_1_1_addr = getelementptr [8 x float]* %U_block_buffer_1_1, i64 0, i64 %tmp_12

ST_24: stg_449 [1/1] 2.39ns
:58  store float %U_load_3, float* %U_block_buffer_1_1_addr, align 4

ST_24: V_load_3 [1/2] 2.71ns
:59  %V_load_3 = load float* %V_addr_4, align 4

ST_24: V_block_buffer_1_1_addr [1/1] 0.00ns
:60  %V_block_buffer_1_1_addr = getelementptr [8 x float]* %V_block_buffer_1_1, i64 0, i64 %tmp_12

ST_24: stg_452 [1/1] 2.39ns
:61  store float %V_load_3, float* %V_block_buffer_1_1_addr, align 4

ST_24: empty_13 [1/1] 0.00ns
:62  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1808, i32 %tmp_22)

ST_24: stg_454 [1/1] 0.00ns
:63  br label %._crit_edge


 <State 25>: 2.39ns
ST_25: proc4 [1/1] 0.00ns
.preheader33:2  %proc4 = phi i4 [ %proc_7, %._crit_edge38 ], [ 0, %11 ]

ST_25: exitcond2 [1/1] 1.88ns
.preheader33:3  %exitcond2 = icmp eq i4 %proc4, -8

ST_25: proc_7 [1/1] 0.80ns
.preheader33:4  %proc_7 = add i4 %proc4, 1

ST_25: tmp_15 [1/1] 0.00ns
:4  %tmp_15 = zext i4 %proc4 to i64

ST_25: diag_1_addr_6 [1/1] 0.00ns
:5  %diag_1_addr_6 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_15

ST_25: diag_1_load_3 [2/2] 2.39ns
:6  %diag_1_load_3 = load i32* %diag_1_addr_6, align 4

ST_25: diag_2_addr_6 [1/1] 0.00ns
:7  %diag_2_addr_6 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_15

ST_25: diag_2_load_3 [2/2] 2.39ns
:8  %diag_2_load_3 = load i32* %diag_2_addr_6, align 4

ST_25: stg_463 [1/1] 0.00ns
._crit_edge38:0  br label %.preheader33


 <State 26>: 6.28ns
ST_26: top_left_3 [1/1] 0.00ns
.preheader33:0  %top_left_3 = phi i32 [ %top_left_5, %._crit_edge38 ], [ %top_left_2, %11 ]

ST_26: bottom_right_3 [1/1] 0.00ns
.preheader33:1  %bottom_right_3 = phi i32 [ %bottom_right_5, %._crit_edge38 ], [ %bottom_right_2, %11 ]

ST_26: stg_466 [1/1] 1.57ns
.preheader33:5  br i1 %exitcond2, label %.preheader32, label %14

ST_26: diag_1_load_3 [1/2] 2.39ns
:6  %diag_1_load_3 = load i32* %diag_1_addr_6, align 4

ST_26: diag_2_load_3 [1/2] 2.39ns
:8  %diag_2_load_3 = load i32* %diag_2_addr_6, align 4

ST_26: tmp_i1 [1/1] 2.52ns
:9  %tmp_i1 = icmp sgt i32 %diag_1_load_3, %diag_2_load_3

ST_26: top_left_5 [1/1] 1.37ns
:10  %top_left_5 = select i1 %tmp_i1, i32 %diag_2_load_3, i32 %diag_1_load_3

ST_26: bottom_right_5 [1/1] 1.37ns
:11  %bottom_right_5 = select i1 %tmp_i1, i32 %diag_1_load_3, i32 %diag_2_load_3


 <State 27>: 3.89ns
ST_27: empty_14 [1/1] 0.00ns
:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_27: stg_473 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str1809) nounwind

ST_27: tmp_23 [1/1] 0.00ns
:2  %tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str1809)

ST_27: stg_475 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_27: tmp_16 [1/1] 2.52ns
:12  %tmp_16 = icmp eq i32 %top_left_5, 16

ST_27: tmp_19 [1/1] 2.52ns
:13  %tmp_19 = icmp eq i32 %bottom_right_5, 16

ST_27: or_cond7 [1/1] 1.37ns
:14  %or_cond7 = or i1 %tmp_16, %tmp_19

ST_27: stg_479 [1/1] 0.00ns
:15  br i1 %or_cond7, label %._crit_edge38, label %_ifconv

ST_27: S_block_buffer_0_0_addr_1 [1/1] 0.00ns
_ifconv:0  %S_block_buffer_0_0_addr_1 = getelementptr [8 x float]* %S_block_buffer_0_0, i64 0, i64 %tmp_15

ST_27: w_in [2/2] 2.39ns
_ifconv:1  %w_in = load float* %S_block_buffer_0_0_addr_1, align 16

ST_27: S_block_buffer_0_1_addr_1 [1/1] 0.00ns
_ifconv:2  %S_block_buffer_0_1_addr_1 = getelementptr [8 x float]* %S_block_buffer_0_1, i64 0, i64 %tmp_15

ST_27: x_in [2/2] 2.39ns
_ifconv:3  %x_in = load float* %S_block_buffer_0_1_addr_1, align 4

ST_27: S_block_buffer_1_0_addr_1 [1/1] 0.00ns
_ifconv:4  %S_block_buffer_1_0_addr_1 = getelementptr [8 x float]* %S_block_buffer_1_0, i64 0, i64 %tmp_15

ST_27: y_in [2/2] 2.39ns
_ifconv:5  %y_in = load float* %S_block_buffer_1_0_addr_1, align 8

ST_27: S_block_buffer_1_1_addr_1 [1/1] 0.00ns
_ifconv:6  %S_block_buffer_1_1_addr_1 = getelementptr [8 x float]* %S_block_buffer_1_1, i64 0, i64 %tmp_15

ST_27: z_in [2/2] 2.39ns
_ifconv:7  %z_in = load float* %S_block_buffer_1_1_addr_1, align 4


 <State 28>: 2.39ns
ST_28: w_in [1/2] 2.39ns
_ifconv:1  %w_in = load float* %S_block_buffer_0_0_addr_1, align 16

ST_28: x_in [1/2] 2.39ns
_ifconv:3  %x_in = load float* %S_block_buffer_0_1_addr_1, align 4

ST_28: y_in [1/2] 2.39ns
_ifconv:5  %y_in = load float* %S_block_buffer_1_0_addr_1, align 8

ST_28: z_in [1/2] 2.39ns
_ifconv:7  %z_in = load float* %S_block_buffer_1_1_addr_1, align 4

ST_28: stg_492 [1/1] 2.39ns
_ifconv:76  store float 0.000000e+00, float* %S_block_buffer_0_1_addr_1, align 4

ST_28: stg_493 [1/1] 2.39ns
_ifconv:77  store float 0.000000e+00, float* %S_block_buffer_1_0_addr_1, align 8


 <State 29>: 7.26ns
ST_29: u1 [5/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_29: u2 [5/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_29: u1_1 [5/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_29: u2_1 [5/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 30>: 7.26ns
ST_30: u1 [4/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_30: u2 [4/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_30: u1_1 [4/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_30: u2_1 [4/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 31>: 7.26ns
ST_31: u1 [3/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_31: u2 [3/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_31: u1_1 [3/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_31: u2_1 [3/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 32>: 7.26ns
ST_32: u1 [2/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_32: u2 [2/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_32: u1_1 [2/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_32: u2_1 [2/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 33>: 7.26ns
ST_33: u1 [1/5] 7.26ns
_ifconv:8  %u1 = fsub float %z_in, %w_in

ST_33: u2 [1/5] 7.26ns
_ifconv:9  %u2 = fadd float %y_in, %x_in

ST_33: u1_1 [1/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %z_in, %w_in

ST_33: u2_1 [1/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %y_in, %x_in


 <State 34>: 6.16ns
ST_34: call_ret4 [85/85] 6.16ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_34: call_ret5 [85/85] 6.16ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 35>: 7.65ns
ST_35: call_ret4 [84/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_35: call_ret5 [84/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 36>: 7.65ns
ST_36: call_ret4 [83/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_36: call_ret5 [83/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 37>: 7.65ns
ST_37: call_ret4 [82/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_37: call_ret5 [82/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 38>: 7.65ns
ST_38: call_ret4 [81/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_38: call_ret5 [81/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 39>: 7.65ns
ST_39: call_ret4 [80/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_39: call_ret5 [80/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 40>: 7.65ns
ST_40: call_ret4 [79/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_40: call_ret5 [79/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 41>: 7.65ns
ST_41: call_ret4 [78/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_41: call_ret5 [78/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 42>: 7.65ns
ST_42: call_ret4 [77/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_42: call_ret5 [77/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 43>: 7.65ns
ST_43: call_ret4 [76/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_43: call_ret5 [76/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 44>: 7.65ns
ST_44: call_ret4 [75/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_44: call_ret5 [75/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 45>: 7.65ns
ST_45: call_ret4 [74/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_45: call_ret5 [74/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 46>: 7.65ns
ST_46: call_ret4 [73/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_46: call_ret5 [73/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 47>: 7.65ns
ST_47: call_ret4 [72/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_47: call_ret5 [72/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 48>: 7.65ns
ST_48: call_ret4 [71/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_48: call_ret5 [71/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 49>: 7.65ns
ST_49: call_ret4 [70/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_49: call_ret5 [70/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 50>: 7.65ns
ST_50: call_ret4 [69/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_50: call_ret5 [69/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 51>: 7.65ns
ST_51: call_ret4 [68/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_51: call_ret5 [68/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 52>: 7.65ns
ST_52: call_ret4 [67/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_52: call_ret5 [67/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 53>: 7.65ns
ST_53: call_ret4 [66/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_53: call_ret5 [66/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 54>: 7.65ns
ST_54: call_ret4 [65/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_54: call_ret5 [65/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 55>: 7.65ns
ST_55: call_ret4 [64/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_55: call_ret5 [64/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 56>: 7.65ns
ST_56: call_ret4 [63/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_56: call_ret5 [63/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 57>: 7.65ns
ST_57: call_ret4 [62/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_57: call_ret5 [62/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 58>: 7.65ns
ST_58: call_ret4 [61/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_58: call_ret5 [61/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 59>: 7.65ns
ST_59: call_ret4 [60/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_59: call_ret5 [60/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 60>: 7.65ns
ST_60: call_ret4 [59/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_60: call_ret5 [59/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 61>: 7.65ns
ST_61: call_ret4 [58/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_61: call_ret5 [58/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 62>: 7.65ns
ST_62: call_ret4 [57/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_62: call_ret5 [57/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 63>: 7.65ns
ST_63: call_ret4 [56/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_63: call_ret5 [56/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 64>: 7.65ns
ST_64: call_ret4 [55/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_64: call_ret5 [55/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 65>: 7.65ns
ST_65: call_ret4 [54/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_65: call_ret5 [54/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 66>: 7.65ns
ST_66: call_ret4 [53/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_66: call_ret5 [53/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 67>: 7.65ns
ST_67: call_ret4 [52/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_67: call_ret5 [52/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 68>: 7.65ns
ST_68: call_ret4 [51/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_68: call_ret5 [51/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 69>: 7.65ns
ST_69: call_ret4 [50/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_69: call_ret5 [50/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 70>: 7.65ns
ST_70: call_ret4 [49/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_70: call_ret5 [49/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 71>: 7.65ns
ST_71: call_ret4 [48/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_71: call_ret5 [48/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 72>: 7.65ns
ST_72: call_ret4 [47/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_72: call_ret5 [47/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 73>: 7.65ns
ST_73: call_ret4 [46/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_73: call_ret5 [46/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 74>: 7.65ns
ST_74: call_ret4 [45/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_74: call_ret5 [45/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 75>: 7.65ns
ST_75: call_ret4 [44/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_75: call_ret5 [44/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 76>: 7.65ns
ST_76: call_ret4 [43/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_76: call_ret5 [43/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 77>: 7.65ns
ST_77: call_ret4 [42/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_77: call_ret5 [42/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 78>: 7.65ns
ST_78: call_ret4 [41/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_78: call_ret5 [41/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 79>: 7.65ns
ST_79: call_ret4 [40/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_79: call_ret5 [40/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 80>: 7.65ns
ST_80: call_ret4 [39/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_80: call_ret5 [39/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 81>: 7.65ns
ST_81: call_ret4 [38/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_81: call_ret5 [38/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 82>: 7.65ns
ST_82: call_ret4 [37/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_82: call_ret5 [37/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 83>: 7.65ns
ST_83: call_ret4 [36/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_83: call_ret5 [36/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 84>: 7.65ns
ST_84: call_ret4 [35/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_84: call_ret5 [35/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 85>: 7.65ns
ST_85: call_ret4 [34/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_85: call_ret5 [34/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 86>: 7.65ns
ST_86: call_ret4 [33/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_86: call_ret5 [33/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 87>: 7.65ns
ST_87: call_ret4 [32/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_87: call_ret5 [32/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 88>: 7.65ns
ST_88: call_ret4 [31/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_88: call_ret5 [31/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 89>: 7.65ns
ST_89: call_ret4 [30/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_89: call_ret5 [30/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 90>: 7.65ns
ST_90: call_ret4 [29/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_90: call_ret5 [29/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 91>: 7.65ns
ST_91: call_ret4 [28/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_91: call_ret5 [28/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 92>: 7.65ns
ST_92: call_ret4 [27/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_92: call_ret5 [27/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 93>: 7.65ns
ST_93: call_ret4 [26/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_93: call_ret5 [26/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 94>: 7.65ns
ST_94: call_ret4 [25/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_94: call_ret5 [25/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 95>: 7.65ns
ST_95: call_ret4 [24/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_95: call_ret5 [24/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 96>: 7.65ns
ST_96: call_ret4 [23/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_96: call_ret5 [23/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 97>: 7.65ns
ST_97: call_ret4 [22/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_97: call_ret5 [22/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 98>: 7.65ns
ST_98: call_ret4 [21/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_98: call_ret5 [21/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 99>: 7.65ns
ST_99: call_ret4 [20/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_99: call_ret5 [20/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 100>: 7.65ns
ST_100: call_ret4 [19/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_100: call_ret5 [19/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 101>: 7.65ns
ST_101: call_ret4 [18/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_101: call_ret5 [18/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 102>: 7.65ns
ST_102: call_ret4 [17/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_102: call_ret5 [17/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 103>: 7.65ns
ST_103: call_ret4 [16/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_103: call_ret5 [16/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 104>: 7.65ns
ST_104: call_ret4 [15/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_104: call_ret5 [15/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 105>: 7.65ns
ST_105: call_ret4 [14/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_105: call_ret5 [14/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 106>: 7.65ns
ST_106: call_ret4 [13/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_106: call_ret5 [13/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 107>: 7.65ns
ST_107: call_ret4 [12/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_107: call_ret5 [12/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 108>: 7.65ns
ST_108: call_ret4 [11/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_108: call_ret5 [11/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 109>: 7.65ns
ST_109: call_ret4 [10/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_109: call_ret5 [10/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 110>: 7.65ns
ST_110: call_ret4 [9/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_110: call_ret5 [9/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 111>: 7.65ns
ST_111: call_ret4 [8/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_111: call_ret5 [8/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 112>: 7.65ns
ST_112: call_ret4 [7/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_112: call_ret5 [7/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 113>: 7.65ns
ST_113: call_ret4 [6/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_113: call_ret5 [6/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 114>: 7.65ns
ST_114: call_ret4 [5/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_114: call_ret5 [5/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 115>: 7.65ns
ST_115: call_ret4 [4/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_115: call_ret5 [4/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 116>: 7.65ns
ST_116: call_ret4 [3/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_116: call_ret5 [3/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 117>: 7.65ns
ST_117: call_ret4 [2/85] 7.65ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_117: call_ret5 [2/85] 7.65ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 118>: 7.27ns
ST_118: call_ret4 [1/85] 7.27ns
_ifconv:10  %call_ret4 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_118: cosA_half [1/1] 0.00ns
_ifconv:11  %cosA_half = extractvalue { float, float } %call_ret4, 0

ST_118: sinA_half [1/1] 0.00ns
_ifconv:12  %sinA_half = extractvalue { float, float } %call_ret4, 1

ST_118: call_ret5 [1/85] 7.27ns
_ifconv:15  %call_ret5 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_118: cosB_half [1/1] 0.00ns
_ifconv:16  %cosB_half = extractvalue { float, float } %call_ret5, 0

ST_118: sinB_half [1/1] 0.00ns
_ifconv:17  %sinB_half = extractvalue { float, float } %call_ret5, 1


 <State 119>: 7.07ns
ST_119: tmp_i2 [4/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_119: tmp_3_i [4/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_119: tmp_22_to_int [1/1] 0.00ns
_ifconv:21  %tmp_22_to_int = bitcast float %cosA_half to i32

ST_119: tmp_22_neg [1/1] 1.37ns
_ifconv:22  %tmp_22_neg = xor i32 %tmp_22_to_int, -2147483648

ST_119: a2_assign [1/1] 0.00ns
_ifconv:23  %a2_assign = bitcast i32 %tmp_22_neg to float

ST_119: tmp_i3 [4/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_119: tmp_3_i1 [4/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_119: tmp_23_to_int [1/1] 0.00ns
_ifconv:27  %tmp_23_to_int = bitcast float %sinA_half to i32

ST_119: tmp_23_neg [1/1] 1.37ns
_ifconv:28  %tmp_23_neg = xor i32 %tmp_23_to_int, -2147483648

ST_119: a2_assign_1 [1/1] 0.00ns
_ifconv:29  %a2_assign_1 = bitcast i32 %tmp_23_neg to float

ST_119: tmp_3_i2 [4/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_119: tmp_3_i3 [4/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 120>: 5.70ns
ST_120: tmp_i2 [3/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_120: tmp_3_i [3/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_120: tmp_i3 [3/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_120: tmp_3_i1 [3/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_120: tmp_3_i2 [3/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_120: tmp_3_i3 [3/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 121>: 5.70ns
ST_121: tmp_i2 [2/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_121: tmp_3_i [2/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_121: tmp_i3 [2/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_121: tmp_3_i1 [2/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_121: tmp_3_i2 [2/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_121: tmp_3_i3 [2/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 122>: 5.70ns
ST_122: tmp_i2 [1/4] 5.70ns
_ifconv:18  %tmp_i2 = fmul float %cosA_half, %cosB_half

ST_122: tmp_3_i [1/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_122: tmp_i3 [1/4] 5.70ns
_ifconv:24  %tmp_i3 = fmul float %sinA_half, %cosB_half

ST_122: tmp_3_i1 [1/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_122: tmp_3_i2 [1/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_122: tmp_3_i3 [1/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 123>: 7.26ns
ST_123: uz_new [5/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_123: ux_new [5/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_123: vz_int_1 [5/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_123: vy_int_1 [5/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 124>: 7.26ns
ST_124: uz_new [4/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_124: ux_new [4/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_124: vz_int_1 [4/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_124: vy_int_1 [4/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 125>: 7.26ns
ST_125: uz_new [3/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_125: ux_new [3/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_125: vz_int_1 [3/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_125: vy_int_1 [3/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 126>: 7.26ns
ST_126: uz_new [2/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_126: ux_new [2/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_126: vz_int_1 [2/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_126: vy_int_1 [2/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 127>: 7.26ns
ST_127: uz_new [1/5] 7.26ns
_ifconv:20  %uz_new = fadd float %tmp_i2, %tmp_3_i

ST_127: ux_new [1/5] 7.26ns
_ifconv:26  %ux_new = fadd float %tmp_i3, %tmp_3_i1

ST_127: vz_int_1 [1/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i2, %tmp_3_i2

ST_127: vy_int_1 [1/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i3, %tmp_3_i3


 <State 128>: 7.07ns
ST_128: vy_int_to_int [1/1] 0.00ns
_ifconv:37  %vy_int_to_int = bitcast float %vy_int_1 to i32

ST_128: vy_int_neg [1/1] 1.37ns
_ifconv:38  %vy_int_neg = xor i32 %vy_int_to_int, -2147483648

ST_128: vy_int [1/1] 0.00ns
_ifconv:39  %vy_int = bitcast i32 %vy_int_neg to float

ST_128: tmp_i4 [4/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_128: tmp_3_i4 [4/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_128: tmp_i5 [4/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_128: tmp_3_i5 [4/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_128: tmp_i7 [4/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_128: tmp_3_i7 [4/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_128: tmp_i8 [4/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_128: tmp_3_i8 [4/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 129>: 5.70ns
ST_129: tmp_i4 [3/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_129: tmp_3_i4 [3/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_129: tmp_i5 [3/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_129: tmp_3_i5 [3/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_129: tmp_i7 [3/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_129: tmp_3_i7 [3/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_129: tmp_i8 [3/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_129: tmp_3_i8 [3/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 130>: 5.70ns
ST_130: tmp_i4 [2/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_130: tmp_3_i4 [2/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_130: tmp_i5 [2/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_130: tmp_3_i5 [2/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_130: tmp_i7 [2/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_130: tmp_3_i7 [2/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_130: tmp_i8 [2/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_130: tmp_3_i8 [2/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 131>: 5.70ns
ST_131: tmp_i4 [1/4] 5.70ns
_ifconv:40  %tmp_i4 = fmul float %w_in, %vz_int_1

ST_131: tmp_3_i4 [1/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %x_in, %vy_int

ST_131: tmp_i5 [1/4] 5.70ns
_ifconv:43  %tmp_i5 = fmul float %y_in, %vz_int_1

ST_131: tmp_3_i5 [1/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %z_in, %vy_int

ST_131: tmp_i7 [1/4] 5.70ns
_ifconv:49  %tmp_i7 = fmul float %w_in, %vy_int_1

ST_131: tmp_3_i7 [1/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %x_in, %vz_int_1

ST_131: tmp_i8 [1/4] 5.70ns
_ifconv:52  %tmp_i8 = fmul float %y_in, %vy_int_1

ST_131: tmp_3_i8 [1/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %z_in, %vz_int_1


 <State 132>: 7.26ns
ST_132: w_out1 [5/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_132: w_out2 [5/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_132: z_out1 [5/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_132: z_out2 [5/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 133>: 7.26ns
ST_133: w_out1 [4/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_133: w_out2 [4/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_133: z_out1 [4/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_133: z_out2 [4/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 134>: 7.26ns
ST_134: w_out1 [3/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_134: w_out2 [3/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_134: z_out1 [3/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_134: z_out2 [3/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 135>: 7.26ns
ST_135: w_out1 [2/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_135: w_out2 [2/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_135: z_out1 [2/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_135: z_out2 [2/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8


 <State 136>: 7.26ns
ST_136: w_out1 [1/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i4, %tmp_3_i4

ST_136: w_out2 [1/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i5, %tmp_3_i5

ST_136: z_out1 [1/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i7, %tmp_3_i7

ST_136: z_out2 [1/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i8, %tmp_3_i8

ST_136: U_block_buffer_0_0_addr_2 [1/1] 0.00ns
_ifconv:95  %U_block_buffer_0_0_addr_2 = getelementptr [8 x float]* %U_block_buffer_0_0, i64 0, i64 %tmp_15

ST_136: uw_in [2/2] 2.39ns
_ifconv:96  %uw_in = load float* %U_block_buffer_0_0_addr_2, align 16

ST_136: U_block_buffer_0_1_addr_2 [1/1] 0.00ns
_ifconv:97  %U_block_buffer_0_1_addr_2 = getelementptr [8 x float]* %U_block_buffer_0_1, i64 0, i64 %tmp_15

ST_136: ux_in [2/2] 2.39ns
_ifconv:98  %ux_in = load float* %U_block_buffer_0_1_addr_2, align 4

ST_136: U_block_buffer_1_0_addr_2 [1/1] 0.00ns
_ifconv:99  %U_block_buffer_1_0_addr_2 = getelementptr [8 x float]* %U_block_buffer_1_0, i64 0, i64 %tmp_15

ST_136: uy_in [2/2] 2.39ns
_ifconv:100  %uy_in = load float* %U_block_buffer_1_0_addr_2, align 8

ST_136: U_block_buffer_1_1_addr_2 [1/1] 0.00ns
_ifconv:101  %U_block_buffer_1_1_addr_2 = getelementptr [8 x float]* %U_block_buffer_1_1, i64 0, i64 %tmp_15

ST_136: uz_in [2/2] 2.39ns
_ifconv:102  %uz_in = load float* %U_block_buffer_1_1_addr_2, align 4


 <State 137>: 8.09ns
ST_137: uy_int_to_int [1/1] 0.00ns
_ifconv:34  %uy_int_to_int = bitcast float %ux_new to i32

ST_137: uy_int_neg [1/1] 1.37ns
_ifconv:35  %uy_int_neg = xor i32 %uy_int_to_int, -2147483648

ST_137: uy_int [1/1] 0.00ns
_ifconv:36  %uy_int = bitcast i32 %uy_int_neg to float

ST_137: tmp_i6 [4/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_137: tmp_3_i6 [4/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_137: tmp_i9 [4/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_137: tmp_3_i9 [4/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_137: J2x2_0_0_addr [1/1] 0.00ns
_ifconv:79  %J2x2_0_0_addr = getelementptr [8 x float]* %J2x2_0_0, i64 0, i64 %tmp_15

ST_137: stg_809 [1/1] 2.39ns
_ifconv:80  store float %uz_new, float* %J2x2_0_0_addr, align 16

ST_137: J2x2_0_1_addr [1/1] 0.00ns
_ifconv:81  %J2x2_0_1_addr = getelementptr [8 x float]* %J2x2_0_1, i64 0, i64 %tmp_15

ST_137: stg_811 [1/1] 2.39ns
_ifconv:82  store float %ux_new, float* %J2x2_0_1_addr, align 4

ST_137: J2x2_1_0_addr [1/1] 0.00ns
_ifconv:83  %J2x2_1_0_addr = getelementptr [8 x float]* %J2x2_1_0, i64 0, i64 %tmp_15

ST_137: stg_813 [1/1] 2.39ns
_ifconv:84  store float %uy_int, float* %J2x2_1_0_addr, align 8

ST_137: J2x2_1_1_addr [1/1] 0.00ns
_ifconv:85  %J2x2_1_1_addr = getelementptr [8 x float]* %J2x2_1_1, i64 0, i64 %tmp_15

ST_137: stg_815 [1/1] 2.39ns
_ifconv:86  store float %uz_new, float* %J2x2_1_1_addr, align 4

ST_137: uw_in [1/2] 2.39ns
_ifconv:96  %uw_in = load float* %U_block_buffer_0_0_addr_2, align 16

ST_137: ux_in [1/2] 2.39ns
_ifconv:98  %ux_in = load float* %U_block_buffer_0_1_addr_2, align 4

ST_137: uy_in [1/2] 2.39ns
_ifconv:100  %uy_in = load float* %U_block_buffer_1_0_addr_2, align 8

ST_137: uz_in [1/2] 2.39ns
_ifconv:102  %uz_in = load float* %U_block_buffer_1_1_addr_2, align 4

ST_137: tmp_i_i [4/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_137: tmp_3_i_i [4/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_137: tmp_i1_i [4/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_137: tmp_3_i2_i [4/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_137: tmp_i4_i [4/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_137: tmp_3_i5_i [4/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_137: tmp_i7_i [4/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_137: tmp_3_i8_i [4/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 138>: 5.70ns
ST_138: tmp_i6 [3/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_138: tmp_3_i6 [3/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_138: tmp_i9 [3/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_138: tmp_3_i9 [3/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_138: tmp_i_i [3/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_138: tmp_3_i_i [3/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_138: tmp_i1_i [3/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_138: tmp_3_i2_i [3/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_138: tmp_i4_i [3/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_138: tmp_3_i5_i [3/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_138: tmp_i7_i [3/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_138: tmp_3_i8_i [3/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 139>: 5.70ns
ST_139: tmp_i6 [2/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_139: tmp_3_i6 [2/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_139: tmp_i9 [2/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_139: tmp_3_i9 [2/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_139: tmp_i_i [2/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_139: tmp_3_i_i [2/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_139: tmp_i1_i [2/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_139: tmp_3_i2_i [2/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_139: tmp_i4_i [2/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_139: tmp_3_i5_i [2/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_139: tmp_i7_i [2/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_139: tmp_3_i8_i [2/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 140>: 5.70ns
ST_140: tmp_i6 [1/4] 5.70ns
_ifconv:46  %tmp_i6 = fmul float %uz_new, %w_out1

ST_140: tmp_3_i6 [1/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_140: tmp_i9 [1/4] 5.70ns
_ifconv:55  %tmp_i9 = fmul float %ux_new, %z_out1

ST_140: tmp_3_i9 [1/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %uz_new, %z_out2

ST_140: tmp_i_i [1/4] 5.70ns
_ifconv:111  %tmp_i_i = fmul float %uw_in, %uz_new

ST_140: tmp_3_i_i [1/4] 5.70ns
_ifconv:112  %tmp_3_i_i = fmul float %ux_in, %uy_int

ST_140: tmp_i1_i [1/4] 5.70ns
_ifconv:114  %tmp_i1_i = fmul float %uw_in, %ux_new

ST_140: tmp_3_i2_i [1/4] 5.70ns
_ifconv:115  %tmp_3_i2_i = fmul float %ux_in, %uz_new

ST_140: tmp_i4_i [1/4] 5.70ns
_ifconv:117  %tmp_i4_i = fmul float %uy_in, %uz_new

ST_140: tmp_3_i5_i [1/4] 5.70ns
_ifconv:118  %tmp_3_i5_i = fmul float %uz_in, %uy_int

ST_140: tmp_i7_i [1/4] 5.70ns
_ifconv:120  %tmp_i7_i = fmul float %uy_in, %ux_new

ST_140: tmp_3_i8_i [1/4] 5.70ns
_ifconv:121  %tmp_3_i8_i = fmul float %uz_in, %uz_new


 <State 141>: 7.26ns
ST_141: w_out_int [5/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_141: z_out_int [5/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_141: uw_out [5/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_141: ux_out [5/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_141: uy_out [5/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_141: uz_out [5/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 142>: 7.26ns
ST_142: w_out_int [4/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_142: z_out_int [4/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_142: uw_out [4/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_142: ux_out [4/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_142: uy_out [4/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_142: uz_out [4/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 143>: 7.26ns
ST_143: w_out_int [3/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_143: z_out_int [3/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_143: uw_out [3/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_143: ux_out [3/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_143: uy_out [3/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_143: uz_out [3/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 144>: 7.26ns
ST_144: w_out_int [2/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_144: z_out_int [2/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_144: uw_out [2/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_144: ux_out [2/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_144: uy_out [2/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_144: uz_out [2/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 145>: 7.26ns
ST_145: w_out_int [1/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i6, %tmp_3_i6

ST_145: z_out_int [1/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i9, %tmp_3_i9

ST_145: V_block_buffer_0_0_addr_2 [1/1] 0.00ns
_ifconv:103  %V_block_buffer_0_0_addr_2 = getelementptr [8 x float]* %V_block_buffer_0_0, i64 0, i64 %tmp_15

ST_145: vw_in [2/2] 2.39ns
_ifconv:104  %vw_in = load float* %V_block_buffer_0_0_addr_2, align 16

ST_145: V_block_buffer_0_1_addr_2 [1/1] 0.00ns
_ifconv:105  %V_block_buffer_0_1_addr_2 = getelementptr [8 x float]* %V_block_buffer_0_1, i64 0, i64 %tmp_15

ST_145: vx_in [2/2] 2.39ns
_ifconv:106  %vx_in = load float* %V_block_buffer_0_1_addr_2, align 4

ST_145: V_block_buffer_1_0_addr_2 [1/1] 0.00ns
_ifconv:107  %V_block_buffer_1_0_addr_2 = getelementptr [8 x float]* %V_block_buffer_1_0, i64 0, i64 %tmp_15

ST_145: vy_in [2/2] 2.39ns
_ifconv:108  %vy_in = load float* %V_block_buffer_1_0_addr_2, align 8

ST_145: V_block_buffer_1_1_addr_2 [1/1] 0.00ns
_ifconv:109  %V_block_buffer_1_1_addr_2 = getelementptr [8 x float]* %V_block_buffer_1_1, i64 0, i64 %tmp_15

ST_145: vz_in [2/2] 2.39ns
_ifconv:110  %vz_in = load float* %V_block_buffer_1_1_addr_2, align 4

ST_145: uw_out [1/5] 7.26ns
_ifconv:113  %uw_out = fadd float %tmp_i_i, %tmp_3_i_i

ST_145: ux_out [1/5] 7.26ns
_ifconv:116  %ux_out = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_145: uy_out [1/5] 7.26ns
_ifconv:119  %uy_out = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_145: uz_out [1/5] 7.26ns
_ifconv:122  %uz_out = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 146>: 8.44ns
ST_146: p_Val2_s [1/1] 0.00ns
_ifconv:58  %p_Val2_s = bitcast float %w_out_int to i32

ST_146: p_Result_s [1/1] 0.00ns
_ifconv:59  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 31)

ST_146: w_out_1_neg [1/1] 0.00ns (grouped into LUT with out node w_out_2)
_ifconv:60  %w_out_1_neg = xor i32 %p_Val2_s, -2147483648

ST_146: w_out [1/1] 0.00ns (grouped into LUT with out node w_out_2)
_ifconv:61  %w_out = bitcast i32 %w_out_1_neg to float

ST_146: vw_int_to_int [1/1] 0.00ns
_ifconv:62  %vw_int_to_int = bitcast float %vz_int_1 to i32

ST_146: vw_int_neg [1/1] 1.37ns
_ifconv:63  %vw_int_neg = xor i32 %vw_int_to_int, -2147483648

ST_146: vw_int [1/1] 0.00ns
_ifconv:64  %vw_int = bitcast i32 %vw_int_neg to float

ST_146: w_out_2 [1/1] 1.37ns (out node of the LUT)
_ifconv:65  %w_out_2 = select i1 %p_Result_s, float %w_out, float %w_out_int

ST_146: vw_int_3 [1/1] 1.37ns
_ifconv:66  %vw_int_3 = select i1 %p_Result_s, float %vw_int, float %vz_int_1

ST_146: vx_int [1/1] 1.37ns
_ifconv:67  %vx_int = select i1 %p_Result_s, float %vy_int_1, float %vy_int

ST_146: p_Val2_1 [1/1] 0.00ns
_ifconv:68  %p_Val2_1 = bitcast float %z_out_int to i32

ST_146: p_Result_1 [1/1] 0.00ns
_ifconv:69  %p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_1, i32 31)

ST_146: z_out_1_neg [1/1] 0.00ns (grouped into LUT with out node z_out_2)
_ifconv:70  %z_out_1_neg = xor i32 %p_Val2_1, -2147483648

ST_146: z_out [1/1] 0.00ns (grouped into LUT with out node z_out_2)
_ifconv:71  %z_out = bitcast i32 %z_out_1_neg to float

ST_146: z_out_2 [1/1] 1.37ns (out node of the LUT)
_ifconv:72  %z_out_2 = select i1 %p_Result_1, float %z_out, float %z_out_int

ST_146: vy_int_2 [1/1] 1.37ns
_ifconv:73  %vy_int_2 = select i1 %p_Result_1, float %vy_int, float %vy_int_1

ST_146: vz_int [1/1] 1.37ns
_ifconv:74  %vz_int = select i1 %p_Result_1, float %vw_int, float %vz_int_1

ST_146: stg_919 [1/1] 2.39ns
_ifconv:75  store float %w_out_2, float* %S_block_buffer_0_0_addr_1, align 16

ST_146: stg_920 [1/1] 2.39ns
_ifconv:78  store float %z_out_2, float* %S_block_buffer_1_1_addr_1, align 4

ST_146: K2x2_0_0_addr [1/1] 0.00ns
_ifconv:87  %K2x2_0_0_addr = getelementptr [8 x float]* %K2x2_0_0, i64 0, i64 %tmp_15

ST_146: stg_922 [1/1] 2.39ns
_ifconv:88  store float %vw_int_3, float* %K2x2_0_0_addr, align 16

ST_146: K2x2_0_1_addr [1/1] 0.00ns
_ifconv:89  %K2x2_0_1_addr = getelementptr [8 x float]* %K2x2_0_1, i64 0, i64 %tmp_15

ST_146: stg_924 [1/1] 2.39ns
_ifconv:90  store float %vy_int_2, float* %K2x2_0_1_addr, align 4

ST_146: K2x2_1_0_addr [1/1] 0.00ns
_ifconv:91  %K2x2_1_0_addr = getelementptr [8 x float]* %K2x2_1_0, i64 0, i64 %tmp_15

ST_146: stg_926 [1/1] 2.39ns
_ifconv:92  store float %vx_int, float* %K2x2_1_0_addr, align 8

ST_146: K2x2_1_1_addr [1/1] 0.00ns
_ifconv:93  %K2x2_1_1_addr = getelementptr [8 x float]* %K2x2_1_1, i64 0, i64 %tmp_15

ST_146: stg_928 [1/1] 2.39ns
_ifconv:94  store float %vz_int, float* %K2x2_1_1_addr, align 4

ST_146: vw_in [1/2] 2.39ns
_ifconv:104  %vw_in = load float* %V_block_buffer_0_0_addr_2, align 16

ST_146: vx_in [1/2] 2.39ns
_ifconv:106  %vx_in = load float* %V_block_buffer_0_1_addr_2, align 4

ST_146: vy_in [1/2] 2.39ns
_ifconv:108  %vy_in = load float* %V_block_buffer_1_0_addr_2, align 8

ST_146: vz_in [1/2] 2.39ns
_ifconv:110  %vz_in = load float* %V_block_buffer_1_1_addr_2, align 4

ST_146: tmp_i_i1 [4/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_146: tmp_3_i_i1 [4/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_146: tmp_i1_i1 [4/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_146: tmp_3_i2_i1 [4/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_146: tmp_i4_i1 [4/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_146: tmp_3_i5_i1 [4/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_146: tmp_i7_i1 [4/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_146: tmp_3_i8_i1 [4/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int

ST_146: stg_941 [1/1] 2.39ns
_ifconv:135  store float %uw_out, float* %U_block_buffer_0_0_addr_2, align 16

ST_146: stg_942 [1/1] 2.39ns
_ifconv:136  store float %ux_out, float* %U_block_buffer_0_1_addr_2, align 4

ST_146: stg_943 [1/1] 2.39ns
_ifconv:137  store float %uy_out, float* %U_block_buffer_1_0_addr_2, align 8

ST_146: stg_944 [1/1] 2.39ns
_ifconv:138  store float %uz_out, float* %U_block_buffer_1_1_addr_2, align 4


 <State 147>: 5.70ns
ST_147: tmp_i_i1 [3/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_147: tmp_3_i_i1 [3/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_147: tmp_i1_i1 [3/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_147: tmp_3_i2_i1 [3/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_147: tmp_i4_i1 [3/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_147: tmp_3_i5_i1 [3/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_147: tmp_i7_i1 [3/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_147: tmp_3_i8_i1 [3/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int


 <State 148>: 5.70ns
ST_148: tmp_i_i1 [2/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_148: tmp_3_i_i1 [2/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_148: tmp_i1_i1 [2/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_148: tmp_3_i2_i1 [2/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_148: tmp_i4_i1 [2/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_148: tmp_3_i5_i1 [2/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_148: tmp_i7_i1 [2/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_148: tmp_3_i8_i1 [2/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int


 <State 149>: 5.70ns
ST_149: tmp_i_i1 [1/4] 5.70ns
_ifconv:123  %tmp_i_i1 = fmul float %vw_in, %vw_int_3

ST_149: tmp_3_i_i1 [1/4] 5.70ns
_ifconv:124  %tmp_3_i_i1 = fmul float %vx_in, %vx_int

ST_149: tmp_i1_i1 [1/4] 5.70ns
_ifconv:126  %tmp_i1_i1 = fmul float %vw_in, %vy_int_2

ST_149: tmp_3_i2_i1 [1/4] 5.70ns
_ifconv:127  %tmp_3_i2_i1 = fmul float %vx_in, %vz_int

ST_149: tmp_i4_i1 [1/4] 5.70ns
_ifconv:129  %tmp_i4_i1 = fmul float %vy_in, %vw_int_3

ST_149: tmp_3_i5_i1 [1/4] 5.70ns
_ifconv:130  %tmp_3_i5_i1 = fmul float %vz_in, %vx_int

ST_149: tmp_i7_i1 [1/4] 5.70ns
_ifconv:132  %tmp_i7_i1 = fmul float %vy_in, %vy_int_2

ST_149: tmp_3_i8_i1 [1/4] 5.70ns
_ifconv:133  %tmp_3_i8_i1 = fmul float %vz_in, %vz_int


 <State 150>: 7.26ns
ST_150: vw_out [5/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_150: vx_out [5/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_150: vy_out [5/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_150: vz_out [5/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 151>: 7.26ns
ST_151: vw_out [4/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_151: vx_out [4/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_151: vy_out [4/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_151: vz_out [4/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 152>: 7.26ns
ST_152: vw_out [3/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_152: vx_out [3/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_152: vy_out [3/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_152: vz_out [3/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 153>: 7.26ns
ST_153: vw_out [2/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_153: vx_out [2/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_153: vy_out [2/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_153: vz_out [2/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 154>: 7.26ns
ST_154: vw_out [1/5] 7.26ns
_ifconv:125  %vw_out = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_154: vx_out [1/5] 7.26ns
_ifconv:128  %vx_out = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_154: vy_out [1/5] 7.26ns
_ifconv:131  %vy_out = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_154: vz_out [1/5] 7.26ns
_ifconv:134  %vz_out = fadd float %tmp_i7_i1, %tmp_3_i8_i1


 <State 155>: 2.39ns
ST_155: stg_989 [1/1] 2.39ns
_ifconv:139  store float %vw_out, float* %V_block_buffer_0_0_addr_2, align 16

ST_155: stg_990 [1/1] 2.39ns
_ifconv:140  store float %vx_out, float* %V_block_buffer_0_1_addr_2, align 4

ST_155: stg_991 [1/1] 2.39ns
_ifconv:141  store float %vy_out, float* %V_block_buffer_1_0_addr_2, align 8

ST_155: stg_992 [1/1] 2.39ns
_ifconv:142  store float %vz_out, float* %V_block_buffer_1_1_addr_2, align 4

ST_155: empty_15 [1/1] 0.00ns
_ifconv:143  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str1809, i32 %tmp_23)

ST_155: stg_994 [1/1] 0.00ns
_ifconv:144  br label %._crit_edge38


 <State 156>: 3.45ns
ST_156: top_left_4 [1/1] 0.00ns
.preheader32:0  %top_left_4 = phi i32 [ %top_left_8, %._crit_edge40 ], [ %top_left_3, %.preheader33 ]

ST_156: bottom_right_4 [1/1] 0.00ns
.preheader32:1  %bottom_right_4 = phi i32 [ %bottom_right_8, %._crit_edge40 ], [ %bottom_right_3, %.preheader33 ]

ST_156: proc5 [1/1] 0.00ns
.preheader32:2  %proc5 = phi i4 [ %proc_5, %._crit_edge40 ], [ 0, %.preheader33 ]

ST_156: exitcond4 [1/1] 1.88ns
.preheader32:3  %exitcond4 = icmp eq i4 %proc5, -8

ST_156: proc_5 [1/1] 0.80ns
.preheader32:4  %proc_5 = add i4 %proc5, 1

ST_156: stg_1000 [1/1] 1.57ns
.preheader32:5  br i1 %exitcond4, label %.preheader30, label %15

ST_156: tmp_20 [1/1] 0.00ns
:4  %tmp_20 = zext i4 %proc5 to i64

ST_156: diag_1_addr_7 [1/1] 0.00ns
:5  %diag_1_addr_7 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_20

ST_156: diag_1_load_4 [2/2] 2.39ns
:6  %diag_1_load_4 = load i32* %diag_1_addr_7, align 4

ST_156: diag_2_addr_7 [1/1] 0.00ns
:7  %diag_2_addr_7 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_20

ST_156: diag_2_load_4 [2/2] 2.39ns
:8  %diag_2_load_4 = load i32* %diag_2_addr_7, align 4

ST_156: stg_1006 [1/1] 0.00ns
._crit_edge40:0  br label %.preheader32


 <State 157>: 2.39ns
ST_157: diag_1_load_4 [1/2] 2.39ns
:6  %diag_1_load_4 = load i32* %diag_1_addr_7, align 4

ST_157: diag_2_load_4 [1/2] 2.39ns
:8  %diag_2_load_4 = load i32* %diag_2_addr_7, align 4


 <State 158>: 7.78ns
ST_158: empty_16 [1/1] 0.00ns
:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_158: stg_1010 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1810) nounwind

ST_158: tmp_30 [1/1] 0.00ns
:2  %tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1810)

ST_158: stg_1012 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_158: tmp_i10 [1/1] 2.52ns
:9  %tmp_i10 = icmp sgt i32 %diag_1_load_4, %diag_2_load_4

ST_158: top_left_8 [1/1] 1.37ns
:10  %top_left_8 = select i1 %tmp_i10, i32 %diag_2_load_4, i32 %diag_1_load_4

ST_158: bottom_right_8 [1/1] 1.37ns
:11  %bottom_right_8 = select i1 %tmp_i10, i32 %diag_1_load_4, i32 %diag_2_load_4

ST_158: tmp_21 [1/1] 2.52ns
:12  %tmp_21 = icmp eq i32 %top_left_8, 16

ST_158: tmp_26 [1/1] 2.52ns
:13  %tmp_26 = icmp eq i32 %bottom_right_8, 16

ST_158: or_cond8 [1/1] 1.37ns
:14  %or_cond8 = or i1 %tmp_21, %tmp_26

ST_158: stg_1019 [1/1] 0.00ns
:15  br i1 %or_cond8, label %._crit_edge40, label %16

ST_158: S_block_buffer_0_0_addr_2 [1/1] 0.00ns
:0  %S_block_buffer_0_0_addr_2 = getelementptr [8 x float]* %S_block_buffer_0_0, i64 0, i64 %tmp_20

ST_158: S_block_buffer_0_0_load [2/2] 2.39ns
:1  %S_block_buffer_0_0_load = load float* %S_block_buffer_0_0_addr_2, align 16

ST_158: tmp_68 [1/1] 0.00ns
:2  %tmp_68 = trunc i32 %top_left_8 to i10

ST_158: tmp_69 [1/1] 0.00ns
:3  %tmp_69 = trunc i32 %top_left_8 to i6

ST_158: U_block_buffer_0_0_addr_1 [1/1] 0.00ns
:11  %U_block_buffer_0_0_addr_1 = getelementptr [8 x float]* %U_block_buffer_0_0, i64 0, i64 %tmp_20

ST_158: U_block_buffer_0_0_load [2/2] 2.39ns
:12  %U_block_buffer_0_0_load = load float* %U_block_buffer_0_0_addr_1, align 16

ST_158: V_block_buffer_0_0_addr_1 [1/1] 0.00ns
:14  %V_block_buffer_0_0_addr_1 = getelementptr [8 x float]* %V_block_buffer_0_0, i64 0, i64 %tmp_20

ST_158: V_block_buffer_0_0_load [2/2] 2.39ns
:15  %V_block_buffer_0_0_load = load float* %V_block_buffer_0_0_addr_1, align 16

ST_158: tmp_70 [1/1] 0.00ns
:19  %tmp_70 = trunc i32 %bottom_right_8 to i10

ST_158: tmp_75 [1/1] 0.00ns
:23  %tmp_75 = trunc i32 %bottom_right_8 to i6


 <State 159>: 5.10ns
ST_159: S_block_buffer_0_0_load [1/2] 2.39ns
:1  %S_block_buffer_0_0_load = load float* %S_block_buffer_0_0_addr_2, align 16

ST_159: tmp_94_cast [1/1] 0.00ns
:4  %tmp_94_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_69, i4 0)

ST_159: tmp_60 [1/1] 1.84ns
:5  %tmp_60 = add i10 %tmp_94_cast, %tmp_68

ST_159: tmp_95_cast [1/1] 0.00ns
:6  %tmp_95_cast = sext i10 %tmp_60 to i64

ST_159: S_addr_5 [1/1] 0.00ns
:7  %S_addr_5 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_95_cast

ST_159: U_addr_5 [1/1] 0.00ns
:8  %U_addr_5 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_95_cast

ST_159: V_addr_5 [1/1] 0.00ns
:9  %V_addr_5 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_95_cast

ST_159: stg_1037 [1/1] 2.71ns
:10  store float %S_block_buffer_0_0_load, float* %S_addr_5, align 4

ST_159: U_block_buffer_0_0_load [1/2] 2.39ns
:12  %U_block_buffer_0_0_load = load float* %U_block_buffer_0_0_addr_1, align 16

ST_159: stg_1039 [1/1] 2.71ns
:13  store float %U_block_buffer_0_0_load, float* %U_addr_5, align 4

ST_159: V_block_buffer_0_0_load [1/2] 2.39ns
:15  %V_block_buffer_0_0_load = load float* %V_block_buffer_0_0_addr_1, align 16

ST_159: stg_1041 [1/1] 2.71ns
:16  store float %V_block_buffer_0_0_load, float* %V_addr_5, align 4

ST_159: S_block_buffer_0_1_addr_2 [1/1] 0.00ns
:17  %S_block_buffer_0_1_addr_2 = getelementptr [8 x float]* %S_block_buffer_0_1, i64 0, i64 %tmp_20

ST_159: S_block_buffer_0_1_load [2/2] 2.39ns
:18  %S_block_buffer_0_1_load = load float* %S_block_buffer_0_1_addr_2, align 4

ST_159: tmp_61 [1/1] 1.84ns
:20  %tmp_61 = add i10 %tmp_94_cast, %tmp_70

ST_159: tmp_98_cast [1/1] 0.00ns
:24  %tmp_98_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_75, i4 0)

ST_159: tmp_82 [1/1] 1.84ns
:25  %tmp_82 = add i10 %tmp_98_cast, %tmp_68

ST_159: tmp_83 [1/1] 1.84ns
:28  %tmp_83 = add i10 %tmp_98_cast, %tmp_70

ST_159: U_block_buffer_0_1_addr_1 [1/1] 0.00ns
:38  %U_block_buffer_0_1_addr_1 = getelementptr [8 x float]* %U_block_buffer_0_1, i64 0, i64 %tmp_20

ST_159: U_block_buffer_0_1_load [2/2] 2.39ns
:39  %U_block_buffer_0_1_load = load float* %U_block_buffer_0_1_addr_1, align 4

ST_159: V_block_buffer_0_1_addr_1 [1/1] 0.00ns
:41  %V_block_buffer_0_1_addr_1 = getelementptr [8 x float]* %V_block_buffer_0_1, i64 0, i64 %tmp_20

ST_159: V_block_buffer_0_1_load [2/2] 2.39ns
:42  %V_block_buffer_0_1_load = load float* %V_block_buffer_0_1_addr_1, align 4


 <State 160>: 5.10ns
ST_160: S_block_buffer_0_1_load [1/2] 2.39ns
:18  %S_block_buffer_0_1_load = load float* %S_block_buffer_0_1_addr_2, align 4

ST_160: tmp_96_cast [1/1] 0.00ns
:21  %tmp_96_cast = sext i10 %tmp_61 to i64

ST_160: S_addr_6 [1/1] 0.00ns
:22  %S_addr_6 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_96_cast

ST_160: U_addr_6 [1/1] 0.00ns
:31  %U_addr_6 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_96_cast

ST_160: V_addr_6 [1/1] 0.00ns
:34  %V_addr_6 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_96_cast

ST_160: stg_1057 [1/1] 2.71ns
:37  store float %S_block_buffer_0_1_load, float* %S_addr_6, align 4

ST_160: U_block_buffer_0_1_load [1/2] 2.39ns
:39  %U_block_buffer_0_1_load = load float* %U_block_buffer_0_1_addr_1, align 4

ST_160: stg_1059 [1/1] 2.71ns
:40  store float %U_block_buffer_0_1_load, float* %U_addr_6, align 4

ST_160: V_block_buffer_0_1_load [1/2] 2.39ns
:42  %V_block_buffer_0_1_load = load float* %V_block_buffer_0_1_addr_1, align 4

ST_160: stg_1061 [1/1] 2.71ns
:43  store float %V_block_buffer_0_1_load, float* %V_addr_6, align 4

ST_160: S_block_buffer_1_0_addr_2 [1/1] 0.00ns
:44  %S_block_buffer_1_0_addr_2 = getelementptr [8 x float]* %S_block_buffer_1_0, i64 0, i64 %tmp_20

ST_160: S_block_buffer_1_0_load [2/2] 2.39ns
:45  %S_block_buffer_1_0_load = load float* %S_block_buffer_1_0_addr_2, align 8

ST_160: U_block_buffer_1_0_addr_1 [1/1] 0.00ns
:47  %U_block_buffer_1_0_addr_1 = getelementptr [8 x float]* %U_block_buffer_1_0, i64 0, i64 %tmp_20

ST_160: U_block_buffer_1_0_load [2/2] 2.39ns
:48  %U_block_buffer_1_0_load = load float* %U_block_buffer_1_0_addr_1, align 8

ST_160: V_block_buffer_1_0_addr_1 [1/1] 0.00ns
:50  %V_block_buffer_1_0_addr_1 = getelementptr [8 x float]* %V_block_buffer_1_0, i64 0, i64 %tmp_20

ST_160: V_block_buffer_1_0_load [2/2] 2.39ns
:51  %V_block_buffer_1_0_load = load float* %V_block_buffer_1_0_addr_1, align 8


 <State 161>: 5.10ns
ST_161: tmp_99_cast [1/1] 0.00ns
:26  %tmp_99_cast = sext i10 %tmp_82 to i64

ST_161: S_addr_7 [1/1] 0.00ns
:27  %S_addr_7 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_99_cast

ST_161: U_addr_7 [1/1] 0.00ns
:32  %U_addr_7 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_99_cast

ST_161: V_addr_7 [1/1] 0.00ns
:35  %V_addr_7 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_99_cast

ST_161: S_block_buffer_1_0_load [1/2] 2.39ns
:45  %S_block_buffer_1_0_load = load float* %S_block_buffer_1_0_addr_2, align 8

ST_161: stg_1073 [1/1] 2.71ns
:46  store float %S_block_buffer_1_0_load, float* %S_addr_7, align 4

ST_161: U_block_buffer_1_0_load [1/2] 2.39ns
:48  %U_block_buffer_1_0_load = load float* %U_block_buffer_1_0_addr_1, align 8

ST_161: stg_1075 [1/1] 2.71ns
:49  store float %U_block_buffer_1_0_load, float* %U_addr_7, align 4

ST_161: V_block_buffer_1_0_load [1/2] 2.39ns
:51  %V_block_buffer_1_0_load = load float* %V_block_buffer_1_0_addr_1, align 8

ST_161: stg_1077 [1/1] 2.71ns
:52  store float %V_block_buffer_1_0_load, float* %V_addr_7, align 4

ST_161: S_block_buffer_1_1_addr_2 [1/1] 0.00ns
:53  %S_block_buffer_1_1_addr_2 = getelementptr [8 x float]* %S_block_buffer_1_1, i64 0, i64 %tmp_20

ST_161: S_block_buffer_1_1_load [2/2] 2.39ns
:54  %S_block_buffer_1_1_load = load float* %S_block_buffer_1_1_addr_2, align 4

ST_161: U_block_buffer_1_1_addr_1 [1/1] 0.00ns
:56  %U_block_buffer_1_1_addr_1 = getelementptr [8 x float]* %U_block_buffer_1_1, i64 0, i64 %tmp_20

ST_161: U_block_buffer_1_1_load [2/2] 2.39ns
:57  %U_block_buffer_1_1_load = load float* %U_block_buffer_1_1_addr_1, align 4

ST_161: V_block_buffer_1_1_addr_1 [1/1] 0.00ns
:59  %V_block_buffer_1_1_addr_1 = getelementptr [8 x float]* %V_block_buffer_1_1, i64 0, i64 %tmp_20

ST_161: V_block_buffer_1_1_load [2/2] 2.39ns
:60  %V_block_buffer_1_1_load = load float* %V_block_buffer_1_1_addr_1, align 4


 <State 162>: 5.10ns
ST_162: tmp_100_cast [1/1] 0.00ns
:29  %tmp_100_cast = sext i10 %tmp_83 to i64

ST_162: S_addr_8 [1/1] 0.00ns
:30  %S_addr_8 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_100_cast

ST_162: U_addr_8 [1/1] 0.00ns
:33  %U_addr_8 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_100_cast

ST_162: V_addr_8 [1/1] 0.00ns
:36  %V_addr_8 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_100_cast

ST_162: S_block_buffer_1_1_load [1/2] 2.39ns
:54  %S_block_buffer_1_1_load = load float* %S_block_buffer_1_1_addr_2, align 4

ST_162: stg_1089 [1/1] 2.71ns
:55  store float %S_block_buffer_1_1_load, float* %S_addr_8, align 4

ST_162: U_block_buffer_1_1_load [1/2] 2.39ns
:57  %U_block_buffer_1_1_load = load float* %U_block_buffer_1_1_addr_1, align 4

ST_162: stg_1091 [1/1] 2.71ns
:58  store float %U_block_buffer_1_1_load, float* %U_addr_8, align 4

ST_162: V_block_buffer_1_1_load [1/2] 2.39ns
:60  %V_block_buffer_1_1_load = load float* %V_block_buffer_1_1_addr_1, align 4

ST_162: stg_1093 [1/1] 2.71ns
:61  store float %V_block_buffer_1_1_load, float* %V_addr_8, align 4

ST_162: empty_17 [1/1] 0.00ns
:62  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1810, i32 %tmp_30)

ST_162: stg_1095 [1/1] 0.00ns
:63  br label %._crit_edge40


 <State 163>: 5.00ns
ST_163: indvar_flatten8 [1/1] 0.00ns
.preheader30:0  %indvar_flatten8 = phi i8 [ %indvar_flatten_next9, %._crit_edge43 ], [ 0, %.preheader32 ]

ST_163: proc6 [1/1] 0.00ns
.preheader30:1  %proc6 = phi i4 [ %p_v, %._crit_edge43 ], [ 0, %.preheader32 ]

ST_163: i7 [1/1] 0.00ns
.preheader30:4  %i7 = phi i5 [ %i_2, %._crit_edge43 ], [ 0, %.preheader32 ]

ST_163: tmp_27 [1/1] 0.00ns
.preheader30:5  %tmp_27 = zext i4 %proc6 to i64

ST_163: diag_1_addr_8 [1/1] 0.00ns
.preheader30:6  %diag_1_addr_8 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_27

ST_163: diag_1_load_5 [2/2] 2.39ns
.preheader30:7  %diag_1_load_5 = load i32* %diag_1_addr_8, align 4

ST_163: diag_2_addr_8 [1/1] 0.00ns
.preheader30:8  %diag_2_addr_8 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_27

ST_163: diag_2_load_5 [2/2] 2.39ns
.preheader30:9  %diag_2_load_5 = load i32* %diag_2_addr_8, align 4

ST_163: exitcond_flatten1 [1/1] 2.00ns
.preheader30:13  %exitcond_flatten1 = icmp eq i8 %indvar_flatten8, -128

ST_163: indvar_flatten_next9 [1/1] 1.72ns
.preheader30:14  %indvar_flatten_next9 = add i8 %indvar_flatten8, 1

ST_163: proc_6 [1/1] 0.80ns
.preheader31:0  %proc_6 = add i4 %proc6, 1

ST_163: exitcond6 [1/1] 1.91ns
.preheader31:3  %exitcond6 = icmp eq i5 %i7, -16

ST_163: i7_mid2 [1/1] 1.37ns
.preheader31:4  %i7_mid2 = select i1 %exitcond6, i5 0, i5 %i7

ST_163: tmp_27_mid1 [1/1] 0.00ns
.preheader31:5  %tmp_27_mid1 = zext i4 %proc_6 to i64

ST_163: p_v [1/1] 1.37ns
.preheader31:6  %p_v = select i1 %exitcond6, i4 %proc_6, i4 %proc6

ST_163: diag_1_addr_9 [1/1] 0.00ns
.preheader31:9  %diag_1_addr_9 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_27_mid1

ST_163: diag_1_load_6 [2/2] 2.39ns
.preheader31:10  %diag_1_load_6 = load i32* %diag_1_addr_9, align 4

ST_163: diag_2_addr_9 [1/1] 0.00ns
.preheader31:11  %diag_2_addr_9 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_27_mid1

ST_163: diag_2_load_6 [2/2] 2.39ns
.preheader31:12  %diag_2_load_6 = load i32* %diag_2_addr_9, align 4

ST_163: i_2 [1/1] 1.72ns
._crit_edge43:0  %i_2 = add i5 %i7_mid2, 1

ST_163: stg_1116 [1/1] 0.00ns
._crit_edge43:1  br label %.preheader30


 <State 164>: 7.65ns
ST_164: diag_1_load_5 [1/2] 2.39ns
.preheader30:7  %diag_1_load_5 = load i32* %diag_1_addr_8, align 4

ST_164: diag_2_load_5 [1/2] 2.39ns
.preheader30:9  %diag_2_load_5 = load i32* %diag_2_addr_8, align 4

ST_164: tmp_i11 [1/1] 2.52ns
.preheader30:10  %tmp_i11 = icmp sgt i32 %diag_1_load_5, %diag_2_load_5

ST_164: top_left_7 [1/1] 1.37ns
.preheader30:11  %top_left_7 = select i1 %tmp_i11, i32 %diag_2_load_5, i32 %diag_1_load_5

ST_164: bottom_right_7 [1/1] 1.37ns
.preheader30:12  %bottom_right_7 = select i1 %tmp_i11, i32 %diag_1_load_5, i32 %diag_2_load_5

ST_164: diag_1_load_6 [1/2] 2.39ns
.preheader31:10  %diag_1_load_6 = load i32* %diag_1_addr_9, align 4

ST_164: diag_2_load_6 [1/2] 2.39ns
.preheader31:12  %diag_2_load_6 = load i32* %diag_2_addr_9, align 4

ST_164: tmp_i11_mid1 [1/1] 2.52ns
.preheader31:13  %tmp_i11_mid1 = icmp sgt i32 %diag_1_load_6, %diag_2_load_6

ST_164: top_left_16_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_16_mid2)
.preheader31:14  %top_left_16_mid1 = select i1 %tmp_i11_mid1, i32 %diag_2_load_6, i32 %diag_1_load_6

ST_164: top_left_16_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader31:15  %top_left_16_mid2 = select i1 %exitcond6, i32 %top_left_16_mid1, i32 %top_left_7

ST_164: bottom_right_25_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_25_mid2)
.preheader31:16  %bottom_right_25_mid1 = select i1 %tmp_i11_mid1, i32 %diag_1_load_6, i32 %diag_2_load_6

ST_164: bottom_right_25_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader31:17  %bottom_right_25_mid2 = select i1 %exitcond6, i32 %bottom_right_25_mid1, i32 %bottom_right_7


 <State 165>: 7.83ns
ST_165: top_left_6 [1/1] 0.00ns
.preheader30:2  %top_left_6 = phi i32 [ %idx2_idx1_i461_top_left_6, %._crit_edge43 ], [ %top_left_4, %.preheader32 ]

ST_165: bottom_right_6 [1/1] 0.00ns
.preheader30:3  %bottom_right_6 = phi i32 [ %bottom_right_write_assign_i, %._crit_edge43 ], [ %bottom_right_4, %.preheader32 ]

ST_165: stg_1131 [1/1] 1.57ns
.preheader30:15  br i1 %exitcond_flatten1, label %.preheader28, label %.preheader31

ST_165: stg_1132 [1/1] 0.00ns
.preheader31:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_rd_off_r_str)

ST_165: empty_19 [1/1] 0.00ns
.preheader31:2  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_165: tmp_62 [1/1] 0.00ns
.preheader31:7  %tmp_62 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %p_v, i4 0)

ST_165: tmp_102_cast [1/1] 0.00ns
.preheader31:8  %tmp_102_cast = zext i8 %tmp_62 to i9

ST_165: i7_cast [1/1] 0.00ns
.preheader31:18  %i7_cast = zext i5 %i7_mid2 to i32

ST_165: stg_1137 [1/1] 0.00ns
.preheader31:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1811) nounwind

ST_165: tmp_32 [1/1] 0.00ns
.preheader31:20  %tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1811)

ST_165: stg_1139 [1/1] 0.00ns
.preheader31:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_165: tmp_33 [1/1] 1.91ns
.preheader31:22  %tmp_33 = icmp eq i5 %i7_mid2, 0

ST_165: idx2_idx1_i461_top_left_6 [1/1] 1.37ns (out node of the LUT)
.preheader31:23  %idx2_idx1_i461_top_left_6 = select i1 %tmp_33, i32 %top_left_16_mid2, i32 %top_left_6

ST_165: bottom_right_write_assign_i [1/1] 1.37ns (out node of the LUT)
.preheader31:24  %bottom_right_write_assign_i = select i1 %tmp_33, i32 %bottom_right_25_mid2, i32 %bottom_right_6

ST_165: tmp_34 [1/1] 2.52ns
.preheader31:25  %tmp_34 = icmp eq i32 %idx2_idx1_i461_top_left_6, 16

ST_165: tmp_37 [1/1] 2.52ns
.preheader31:26  %tmp_37 = icmp eq i32 %bottom_right_write_assign_i, 16

ST_165: or_cond9 [1/1] 1.37ns
.preheader31:27  %or_cond9 = or i1 %tmp_34, %tmp_37

ST_165: stg_1146 [1/1] 0.00ns
.preheader31:28  br i1 %or_cond9, label %._crit_edge43, label %17

ST_165: tmp_39 [1/1] 2.52ns
:0  %tmp_39 = icmp eq i32 %i7_cast, %bottom_right_write_assign_i

ST_165: tmp_40 [1/1] 2.52ns
:1  %tmp_40 = icmp eq i32 %i7_cast, %idx2_idx1_i461_top_left_6

ST_165: or_cond [1/1] 1.37ns
:2  %or_cond = or i1 %tmp_39, %tmp_40

ST_165: stg_1150 [1/1] 0.00ns
:3  br i1 %or_cond, label %._crit_edge45, label %18

ST_165: tmp_87 [1/1] 0.00ns
:0  %tmp_87 = trunc i32 %idx2_idx1_i461_top_left_6 to i10

ST_165: tmp_45_cast [1/1] 0.00ns
:1  %tmp_45_cast = zext i5 %i7_mid2 to i9

ST_165: tmp_88 [1/1] 0.00ns
:2  %tmp_88 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i7_mid2, i4 0)

ST_165: tmp_106_cast [1/1] 0.00ns
:3  %tmp_106_cast = zext i9 %tmp_88 to i10

ST_165: tmp_89 [1/1] 1.84ns
:4  %tmp_89 = add i10 %tmp_106_cast, %tmp_87

ST_165: tmp_107_cast [1/1] 0.00ns
:5  %tmp_107_cast = sext i10 %tmp_89 to i64

ST_165: S_addr_9 [1/1] 0.00ns
:6  %S_addr_9 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_107_cast

ST_165: U_addr_9 [1/1] 0.00ns
:7  %U_addr_9 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_107_cast

ST_165: V_addr_9 [1/1] 0.00ns
:8  %V_addr_9 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_107_cast

ST_165: tmp_90 [1/1] 1.72ns
:9  %tmp_90 = add i9 %tmp_102_cast, %tmp_45_cast

ST_165: S_load_4 [2/2] 2.71ns
:17  %S_load_4 = load float* %S_addr_9, align 4

ST_165: U_load_4 [2/2] 2.71ns
:19  %U_load_4 = load float* %U_addr_9, align 4

ST_165: V_load_4 [2/2] 2.71ns
:21  %V_load_4 = load float* %V_addr_9, align 4

ST_165: tmp_91 [1/1] 0.00ns
:23  %tmp_91 = trunc i32 %bottom_right_write_assign_i to i10

ST_165: tmp_92 [1/1] 1.84ns
:24  %tmp_92 = add i10 %tmp_106_cast, %tmp_91

ST_165: tmp_109_cast [1/1] 0.00ns
:25  %tmp_109_cast = sext i10 %tmp_92 to i64

ST_165: S_addr_10 [1/1] 0.00ns
:26  %S_addr_10 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_109_cast

ST_165: U_addr_10 [1/1] 0.00ns
:27  %U_addr_10 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_109_cast

ST_165: V_addr_10 [1/1] 0.00ns
:28  %V_addr_10 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_109_cast

ST_165: S_load_5 [2/2] 2.71ns
:29  %S_load_5 = load float* %S_addr_10, align 4

ST_165: U_load_5 [2/2] 2.71ns
:31  %U_load_5 = load float* %U_addr_10, align 4

ST_165: V_load_5 [2/2] 2.71ns
:33  %V_load_5 = load float* %V_addr_10, align 4

ST_165: empty_18 [1/1] 0.00ns
._crit_edge45:0  %empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1811, i32 %tmp_32)

ST_165: stg_1174 [1/1] 0.00ns
._crit_edge45:1  br label %._crit_edge43


 <State 166>: 5.42ns
ST_166: tmp_108_cast [1/1] 0.00ns
:10  %tmp_108_cast = zext i9 %tmp_90 to i64

ST_166: V_c_buffer_1_addr [1/1] 0.00ns
:11  %V_c_buffer_1_addr = getelementptr [128 x float]* %V_c_buffer_1, i64 0, i64 %tmp_108_cast

ST_166: V_c_buffer_0_addr [1/1] 0.00ns
:12  %V_c_buffer_0_addr = getelementptr [128 x float]* %V_c_buffer_0, i64 0, i64 %tmp_108_cast

ST_166: U_c_buffer_1_addr [1/1] 0.00ns
:13  %U_c_buffer_1_addr = getelementptr [128 x float]* %U_c_buffer_1, i64 0, i64 %tmp_108_cast

ST_166: S_c_buffer_0_addr [1/1] 0.00ns
:14  %S_c_buffer_0_addr = getelementptr [128 x float]* %S_c_buffer_0, i64 0, i64 %tmp_108_cast

ST_166: S_c_buffer_1_addr [1/1] 0.00ns
:15  %S_c_buffer_1_addr = getelementptr [128 x float]* %S_c_buffer_1, i64 0, i64 %tmp_108_cast

ST_166: U_c_buffer_0_addr [1/1] 0.00ns
:16  %U_c_buffer_0_addr = getelementptr [128 x float]* %U_c_buffer_0, i64 0, i64 %tmp_108_cast

ST_166: S_load_4 [1/2] 2.71ns
:17  %S_load_4 = load float* %S_addr_9, align 4

ST_166: stg_1183 [1/1] 2.71ns
:18  store float %S_load_4, float* %S_c_buffer_0_addr, align 8

ST_166: U_load_4 [1/2] 2.71ns
:19  %U_load_4 = load float* %U_addr_9, align 4

ST_166: stg_1185 [1/1] 2.71ns
:20  store float %U_load_4, float* %U_c_buffer_0_addr, align 8

ST_166: V_load_4 [1/2] 2.71ns
:21  %V_load_4 = load float* %V_addr_9, align 4

ST_166: stg_1187 [1/1] 2.71ns
:22  store float %V_load_4, float* %V_c_buffer_0_addr, align 8

ST_166: S_load_5 [1/2] 2.71ns
:29  %S_load_5 = load float* %S_addr_10, align 4

ST_166: stg_1189 [1/1] 2.71ns
:30  store float %S_load_5, float* %S_c_buffer_1_addr, align 4

ST_166: U_load_5 [1/2] 2.71ns
:31  %U_load_5 = load float* %U_addr_10, align 4

ST_166: stg_1191 [1/1] 2.71ns
:32  store float %U_load_5, float* %U_c_buffer_1_addr, align 4

ST_166: V_load_5 [1/2] 2.71ns
:33  %V_load_5 = load float* %V_addr_10, align 4

ST_166: stg_1193 [1/1] 2.71ns
:34  store float %V_load_5, float* %V_c_buffer_1_addr, align 4

ST_166: stg_1194 [1/1] 0.00ns
:35  br label %._crit_edge45


 <State 167>: 5.00ns
ST_167: indvar_flatten1 [1/1] 0.00ns
.preheader28:0  %indvar_flatten1 = phi i8 [ %indvar_flatten_next1, %._crit_edge48 ], [ 0, %.preheader30 ]

ST_167: proc8 [1/1] 0.00ns
.preheader28:1  %proc8 = phi i4 [ %p_v1, %._crit_edge48 ], [ 0, %.preheader30 ]

ST_167: off_row [1/1] 0.00ns
.preheader28:4  %off_row = phi i5 [ %off_row_1, %._crit_edge48 ], [ 0, %.preheader30 ]

ST_167: tmp_31 [1/1] 0.00ns
.preheader28:5  %tmp_31 = zext i4 %proc8 to i64

ST_167: diag_1_addr_10 [1/1] 0.00ns
.preheader28:6  %diag_1_addr_10 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_31

ST_167: diag_1_load_7 [2/2] 2.39ns
.preheader28:7  %diag_1_load_7 = load i32* %diag_1_addr_10, align 4

ST_167: diag_2_addr_10 [1/1] 0.00ns
.preheader28:8  %diag_2_addr_10 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_31

ST_167: diag_2_load_7 [2/2] 2.39ns
.preheader28:9  %diag_2_load_7 = load i32* %diag_2_addr_10, align 4

ST_167: exitcond_flatten2 [1/1] 2.00ns
.preheader28:13  %exitcond_flatten2 = icmp eq i8 %indvar_flatten1, -128

ST_167: indvar_flatten_next1 [1/1] 1.72ns
.preheader28:14  %indvar_flatten_next1 = add i8 %indvar_flatten1, 1

ST_167: proc_8 [1/1] 0.80ns
.preheader29:0  %proc_8 = add i4 %proc8, 1

ST_167: exitcond8 [1/1] 1.91ns
.preheader29:3  %exitcond8 = icmp eq i5 %off_row, -16

ST_167: off_row_mid2 [1/1] 1.37ns
.preheader29:4  %off_row_mid2 = select i1 %exitcond8, i5 0, i5 %off_row

ST_167: tmp_31_mid1 [1/1] 0.00ns
.preheader29:5  %tmp_31_mid1 = zext i4 %proc_8 to i64

ST_167: p_v1 [1/1] 1.37ns
.preheader29:6  %p_v1 = select i1 %exitcond8, i4 %proc_8, i4 %proc8

ST_167: diag_1_addr_11 [1/1] 0.00ns
.preheader29:9  %diag_1_addr_11 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_31_mid1

ST_167: diag_1_load_8 [2/2] 2.39ns
.preheader29:10  %diag_1_load_8 = load i32* %diag_1_addr_11, align 4

ST_167: diag_2_addr_11 [1/1] 0.00ns
.preheader29:11  %diag_2_addr_11 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_31_mid1

ST_167: diag_2_load_8 [2/2] 2.39ns
.preheader29:12  %diag_2_load_8 = load i32* %diag_2_addr_11, align 4

ST_167: off_row_1 [1/1] 1.72ns
._crit_edge48:0  %off_row_1 = add i5 %off_row_mid2, 1

ST_167: stg_1215 [1/1] 0.00ns
._crit_edge48:1  br label %.preheader28


 <State 168>: 7.65ns
ST_168: diag_1_load_7 [1/2] 2.39ns
.preheader28:7  %diag_1_load_7 = load i32* %diag_1_addr_10, align 4

ST_168: diag_2_load_7 [1/2] 2.39ns
.preheader28:9  %diag_2_load_7 = load i32* %diag_2_addr_10, align 4

ST_168: tmp_i12 [1/1] 2.52ns
.preheader28:10  %tmp_i12 = icmp sgt i32 %diag_1_load_7, %diag_2_load_7

ST_168: top_left_10 [1/1] 1.37ns
.preheader28:11  %top_left_10 = select i1 %tmp_i12, i32 %diag_2_load_7, i32 %diag_1_load_7

ST_168: bottom_right_10 [1/1] 1.37ns
.preheader28:12  %bottom_right_10 = select i1 %tmp_i12, i32 %diag_1_load_7, i32 %diag_2_load_7

ST_168: diag_1_load_8 [1/2] 2.39ns
.preheader29:10  %diag_1_load_8 = load i32* %diag_1_addr_11, align 4

ST_168: diag_2_load_8 [1/2] 2.39ns
.preheader29:12  %diag_2_load_8 = load i32* %diag_2_addr_11, align 4

ST_168: tmp_i12_mid1 [1/1] 2.52ns
.preheader29:30  %tmp_i12_mid1 = icmp sgt i32 %diag_1_load_8, %diag_2_load_8

ST_168: top_left_19_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_19_mid2)
.preheader29:31  %top_left_19_mid1 = select i1 %tmp_i12_mid1, i32 %diag_2_load_8, i32 %diag_1_load_8

ST_168: top_left_19_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader29:32  %top_left_19_mid2 = select i1 %exitcond8, i32 %top_left_19_mid1, i32 %top_left_10

ST_168: bottom_right_26_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_26_mid2)
.preheader29:33  %bottom_right_26_mid1 = select i1 %tmp_i12_mid1, i32 %diag_1_load_8, i32 %diag_2_load_8

ST_168: bottom_right_26_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader29:34  %bottom_right_26_mid2 = select i1 %exitcond8, i32 %bottom_right_26_mid1, i32 %bottom_right_10


 <State 169>: 7.17ns
ST_169: top_left_9 [1/1] 0.00ns
.preheader28:2  %top_left_9 = phi i32 [ %idx2_idx1_i466_top_left_9, %._crit_edge48 ], [ %top_left_6, %.preheader30 ]

ST_169: bottom_right_9 [1/1] 0.00ns
.preheader28:3  %bottom_right_9 = phi i32 [ %bottom_right_write_assign_i1, %._crit_edge48 ], [ %bottom_right_6, %.preheader30 ]

ST_169: stg_1230 [1/1] 1.57ns
.preheader28:15  br i1 %exitcond_flatten2, label %.preheader26, label %.preheader29

ST_169: tmp_84 [1/1] 0.00ns
.preheader29:7  %tmp_84 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %p_v1, i4 0)

ST_169: tmp_104_cast [1/1] 0.00ns
.preheader29:8  %tmp_104_cast = zext i8 %tmp_84 to i9

ST_169: vw_new_mid2_cast [1/1] 0.00ns
.preheader29:13  %vw_new_mid2_cast = zext i4 %p_v1 to i64

ST_169: K2x2_0_0_addr_1 [1/1] 0.00ns
.preheader29:14  %K2x2_0_0_addr_1 = getelementptr [8 x float]* %K2x2_0_0, i64 0, i64 %vw_new_mid2_cast

ST_169: K2x2_0_0_load [2/2] 2.39ns
.preheader29:15  %K2x2_0_0_load = load float* %K2x2_0_0_addr_1, align 4

ST_169: K2x2_0_1_addr_1 [1/1] 0.00ns
.preheader29:16  %K2x2_0_1_addr_1 = getelementptr [8 x float]* %K2x2_0_1, i64 0, i64 %vw_new_mid2_cast

ST_169: K2x2_0_1_load [2/2] 2.39ns
.preheader29:17  %K2x2_0_1_load = load float* %K2x2_0_1_addr_1, align 4

ST_169: K2x2_1_0_addr_1 [1/1] 0.00ns
.preheader29:18  %K2x2_1_0_addr_1 = getelementptr [8 x float]* %K2x2_1_0, i64 0, i64 %vw_new_mid2_cast

ST_169: K2x2_1_0_load [2/2] 2.39ns
.preheader29:19  %K2x2_1_0_load = load float* %K2x2_1_0_addr_1, align 4

ST_169: K2x2_1_1_addr_1 [1/1] 0.00ns
.preheader29:20  %K2x2_1_1_addr_1 = getelementptr [8 x float]* %K2x2_1_1, i64 0, i64 %vw_new_mid2_cast

ST_169: K2x2_1_1_load [2/2] 2.39ns
.preheader29:21  %K2x2_1_1_load = load float* %K2x2_1_1_addr_1, align 4

ST_169: J2x2_0_0_addr_1 [1/1] 0.00ns
.preheader29:22  %J2x2_0_0_addr_1 = getelementptr [8 x float]* %J2x2_0_0, i64 0, i64 %vw_new_mid2_cast

ST_169: J2x2_0_0_load [2/2] 2.39ns
.preheader29:23  %J2x2_0_0_load = load float* %J2x2_0_0_addr_1, align 4

ST_169: J2x2_0_1_addr_1 [1/1] 0.00ns
.preheader29:24  %J2x2_0_1_addr_1 = getelementptr [8 x float]* %J2x2_0_1, i64 0, i64 %vw_new_mid2_cast

ST_169: J2x2_0_1_load [2/2] 2.39ns
.preheader29:25  %J2x2_0_1_load = load float* %J2x2_0_1_addr_1, align 4

ST_169: J2x2_1_0_addr_1 [1/1] 0.00ns
.preheader29:26  %J2x2_1_0_addr_1 = getelementptr [8 x float]* %J2x2_1_0, i64 0, i64 %vw_new_mid2_cast

ST_169: J2x2_1_0_load [2/2] 2.39ns
.preheader29:27  %J2x2_1_0_load = load float* %J2x2_1_0_addr_1, align 4

ST_169: J2x2_1_1_addr_1 [1/1] 0.00ns
.preheader29:28  %J2x2_1_1_addr_1 = getelementptr [8 x float]* %J2x2_1_1, i64 0, i64 %vw_new_mid2_cast

ST_169: J2x2_1_1_load [2/2] 2.39ns
.preheader29:29  %J2x2_1_1_load = load float* %J2x2_1_1_addr_1, align 4

ST_169: off_row_cast9 [1/1] 0.00ns
.preheader29:35  %off_row_cast9 = zext i5 %off_row_mid2 to i32

ST_169: tmp_76 [1/1] 0.00ns
.preheader29:37  %tmp_76 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str1812)

ST_169: tmp_36 [1/1] 1.91ns
.preheader29:39  %tmp_36 = icmp eq i5 %off_row_mid2, 0

ST_169: idx2_idx1_i466_top_left_9 [1/1] 1.37ns (out node of the LUT)
.preheader29:40  %idx2_idx1_i466_top_left_9 = select i1 %tmp_36, i32 %top_left_19_mid2, i32 %top_left_9

ST_169: bottom_right_write_assign_i1 [1/1] 1.37ns (out node of the LUT)
.preheader29:41  %bottom_right_write_assign_i1 = select i1 %tmp_36, i32 %bottom_right_26_mid2, i32 %bottom_right_9

ST_169: tmp_38 [1/1] 2.52ns
.preheader29:42  %tmp_38 = icmp eq i32 %idx2_idx1_i466_top_left_9, 16

ST_169: tmp_43 [1/1] 2.52ns
.preheader29:43  %tmp_43 = icmp eq i32 %bottom_right_write_assign_i1, 16

ST_169: or_cond10 [1/1] 1.37ns
.preheader29:44  %or_cond10 = or i1 %tmp_38, %tmp_43

ST_169: stg_1258 [1/1] 0.00ns
.preheader29:45  br i1 %or_cond10, label %._crit_edge48, label %19

ST_169: tmp_48 [1/1] 2.52ns
:0  %tmp_48 = icmp eq i32 %off_row_cast9, %bottom_right_write_assign_i1

ST_169: tmp_49 [1/1] 2.52ns
:1  %tmp_49 = icmp eq i32 %off_row_cast9, %idx2_idx1_i466_top_left_9

ST_169: or_cond1 [1/1] 1.37ns
:2  %or_cond1 = or i1 %tmp_48, %tmp_49

ST_169: stg_1262 [1/1] 0.00ns
:3  br i1 %or_cond1, label %._crit_edge50, label %20

ST_169: tmp_53_cast [1/1] 0.00ns
:0  %tmp_53_cast = zext i5 %off_row_mid2 to i9

ST_169: tmp_94 [1/1] 1.72ns
:1  %tmp_94 = add i9 %tmp_104_cast, %tmp_53_cast

ST_169: tmp_112_cast [1/1] 0.00ns
:2  %tmp_112_cast = zext i9 %tmp_94 to i64

ST_169: V_c_buffer_1_addr_1 [1/1] 0.00ns
:3  %V_c_buffer_1_addr_1 = getelementptr [128 x float]* %V_c_buffer_1, i64 0, i64 %tmp_112_cast

ST_169: V_c_buffer_0_addr_1 [1/1] 0.00ns
:4  %V_c_buffer_0_addr_1 = getelementptr [128 x float]* %V_c_buffer_0, i64 0, i64 %tmp_112_cast

ST_169: U_c_buffer_1_addr_1 [1/1] 0.00ns
:5  %U_c_buffer_1_addr_1 = getelementptr [128 x float]* %U_c_buffer_1, i64 0, i64 %tmp_112_cast

ST_169: S_c_buffer_0_addr_1 [1/1] 0.00ns
:6  %S_c_buffer_0_addr_1 = getelementptr [128 x float]* %S_c_buffer_0, i64 0, i64 %tmp_112_cast

ST_169: S_c_buffer_1_addr_1 [1/1] 0.00ns
:7  %S_c_buffer_1_addr_1 = getelementptr [128 x float]* %S_c_buffer_1, i64 0, i64 %tmp_112_cast

ST_169: U_c_buffer_0_addr_1 [1/1] 0.00ns
:8  %U_c_buffer_0_addr_1 = getelementptr [128 x float]* %U_c_buffer_0, i64 0, i64 %tmp_112_cast

ST_169: w_in_1 [2/2] 2.71ns
:9  %w_in_1 = load float* %S_c_buffer_0_addr_1, align 8

ST_169: vw_in_1 [2/2] 2.71ns
:10  %vw_in_1 = load float* %V_c_buffer_0_addr_1, align 8

ST_169: uw_in_1 [2/2] 2.71ns
:11  %uw_in_1 = load float* %U_c_buffer_0_addr_1, align 8

ST_169: x_in_1 [2/2] 2.71ns
:12  %x_in_1 = load float* %S_c_buffer_1_addr_1, align 4

ST_169: vx_in_1 [2/2] 2.71ns
:13  %vx_in_1 = load float* %V_c_buffer_1_addr_1, align 4

ST_169: ux_in_1 [2/2] 2.71ns
:14  %ux_in_1 = load float* %U_c_buffer_1_addr_1, align 4

ST_169: empty_20 [1/1] 0.00ns
._crit_edge50:0  %empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str1812, i32 %tmp_76)

ST_169: stg_1279 [1/1] 0.00ns
._crit_edge50:1  br label %._crit_edge48


 <State 170>: 8.41ns
ST_170: stg_1280 [1/1] 0.00ns
.preheader29:1  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @L_svd_calc_off_r_str)

ST_170: empty_21 [1/1] 0.00ns
.preheader29:2  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_170: K2x2_0_0_load [1/2] 2.39ns
.preheader29:15  %K2x2_0_0_load = load float* %K2x2_0_0_addr_1, align 4

ST_170: K2x2_0_1_load [1/2] 2.39ns
.preheader29:17  %K2x2_0_1_load = load float* %K2x2_0_1_addr_1, align 4

ST_170: K2x2_1_0_load [1/2] 2.39ns
.preheader29:19  %K2x2_1_0_load = load float* %K2x2_1_0_addr_1, align 4

ST_170: K2x2_1_1_load [1/2] 2.39ns
.preheader29:21  %K2x2_1_1_load = load float* %K2x2_1_1_addr_1, align 4

ST_170: J2x2_0_0_load [1/2] 2.39ns
.preheader29:23  %J2x2_0_0_load = load float* %J2x2_0_0_addr_1, align 4

ST_170: J2x2_0_1_load [1/2] 2.39ns
.preheader29:25  %J2x2_0_1_load = load float* %J2x2_0_1_addr_1, align 4

ST_170: J2x2_1_0_load [1/2] 2.39ns
.preheader29:27  %J2x2_1_0_load = load float* %J2x2_1_0_addr_1, align 4

ST_170: J2x2_1_1_load [1/2] 2.39ns
.preheader29:29  %J2x2_1_1_load = load float* %J2x2_1_1_addr_1, align 4

ST_170: stg_1290 [1/1] 0.00ns
.preheader29:36  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str1812) nounwind

ST_170: stg_1291 [1/1] 0.00ns
.preheader29:38  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_170: w_in_1 [1/2] 2.71ns
:9  %w_in_1 = load float* %S_c_buffer_0_addr_1, align 8

ST_170: vw_in_1 [1/2] 2.71ns
:10  %vw_in_1 = load float* %V_c_buffer_0_addr_1, align 8

ST_170: uw_in_1 [1/2] 2.71ns
:11  %uw_in_1 = load float* %U_c_buffer_0_addr_1, align 8

ST_170: x_in_1 [1/2] 2.71ns
:12  %x_in_1 = load float* %S_c_buffer_1_addr_1, align 4

ST_170: vx_in_1 [1/2] 2.71ns
:13  %vx_in_1 = load float* %V_c_buffer_1_addr_1, align 4

ST_170: ux_in_1 [1/2] 2.71ns
:14  %ux_in_1 = load float* %U_c_buffer_1_addr_1, align 4

ST_170: tmp_i15 [4/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_170: tmp_3_i10 [4/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_170: tmp_i16 [4/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_170: tmp_3_i11 [4/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_170: tmp_i17 [4/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_170: tmp_3_i12 [4/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_170: tmp_i18 [4/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_170: tmp_3_i13 [4/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_170: tmp_i19 [4/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_170: tmp_3_i14 [4/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_170: tmp_i20 [4/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_170: tmp_3_i15 [4/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 171>: 5.70ns
ST_171: tmp_i15 [3/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_171: tmp_3_i10 [3/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_171: tmp_i16 [3/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_171: tmp_3_i11 [3/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_171: tmp_i17 [3/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_171: tmp_3_i12 [3/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_171: tmp_i18 [3/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_171: tmp_3_i13 [3/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_171: tmp_i19 [3/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_171: tmp_3_i14 [3/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_171: tmp_i20 [3/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_171: tmp_3_i15 [3/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 172>: 5.70ns
ST_172: tmp_i15 [2/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_172: tmp_3_i10 [2/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_172: tmp_i16 [2/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_172: tmp_3_i11 [2/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_172: tmp_i17 [2/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_172: tmp_3_i12 [2/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_172: tmp_i18 [2/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_172: tmp_3_i13 [2/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_172: tmp_i19 [2/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_172: tmp_3_i14 [2/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_172: tmp_i20 [2/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_172: tmp_3_i15 [2/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 173>: 5.70ns
ST_173: tmp_i15 [1/4] 5.70ns
:15  %tmp_i15 = fmul float %w_in_1, %K2x2_0_0_load

ST_173: tmp_3_i10 [1/4] 5.70ns
:16  %tmp_3_i10 = fmul float %x_in_1, %K2x2_1_0_load

ST_173: tmp_i16 [1/4] 5.70ns
:18  %tmp_i16 = fmul float %w_in_1, %K2x2_0_1_load

ST_173: tmp_3_i11 [1/4] 5.70ns
:19  %tmp_3_i11 = fmul float %x_in_1, %K2x2_1_1_load

ST_173: tmp_i17 [1/4] 5.70ns
:21  %tmp_i17 = fmul float %vw_in_1, %K2x2_0_0_load

ST_173: tmp_3_i12 [1/4] 5.70ns
:22  %tmp_3_i12 = fmul float %vx_in_1, %K2x2_1_0_load

ST_173: tmp_i18 [1/4] 5.70ns
:24  %tmp_i18 = fmul float %vw_in_1, %K2x2_0_1_load

ST_173: tmp_3_i13 [1/4] 5.70ns
:25  %tmp_3_i13 = fmul float %vx_in_1, %K2x2_1_1_load

ST_173: tmp_i19 [1/4] 5.70ns
:27  %tmp_i19 = fmul float %uw_in_1, %J2x2_0_0_load

ST_173: tmp_3_i14 [1/4] 5.70ns
:28  %tmp_3_i14 = fmul float %ux_in_1, %J2x2_1_0_load

ST_173: tmp_i20 [1/4] 5.70ns
:30  %tmp_i20 = fmul float %uw_in_1, %J2x2_0_1_load

ST_173: tmp_3_i15 [1/4] 5.70ns
:31  %tmp_3_i15 = fmul float %ux_in_1, %J2x2_1_1_load


 <State 174>: 7.26ns
ST_174: w_out_3 [5/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_174: x_out [5/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_174: vw_out_1 [5/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_174: vx_out_1 [5/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_174: uw_out_1 [5/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_174: ux_out_1 [5/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 175>: 7.26ns
ST_175: w_out_3 [4/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_175: x_out [4/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_175: vw_out_1 [4/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_175: vx_out_1 [4/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_175: uw_out_1 [4/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_175: ux_out_1 [4/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 176>: 7.26ns
ST_176: w_out_3 [3/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_176: x_out [3/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_176: vw_out_1 [3/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_176: vx_out_1 [3/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_176: uw_out_1 [3/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_176: ux_out_1 [3/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 177>: 7.26ns
ST_177: w_out_3 [2/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_177: x_out [2/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_177: vw_out_1 [2/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_177: vx_out_1 [2/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_177: uw_out_1 [2/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_177: ux_out_1 [2/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 178>: 7.26ns
ST_178: w_out_3 [1/5] 7.26ns
:17  %w_out_3 = fadd float %tmp_i15, %tmp_3_i10

ST_178: x_out [1/5] 7.26ns
:20  %x_out = fadd float %tmp_i16, %tmp_3_i11

ST_178: vw_out_1 [1/5] 7.26ns
:23  %vw_out_1 = fadd float %tmp_i17, %tmp_3_i12

ST_178: vx_out_1 [1/5] 7.26ns
:26  %vx_out_1 = fadd float %tmp_i18, %tmp_3_i13

ST_178: uw_out_1 [1/5] 7.26ns
:29  %uw_out_1 = fadd float %tmp_i19, %tmp_3_i14

ST_178: ux_out_1 [1/5] 7.26ns
:32  %ux_out_1 = fadd float %tmp_i20, %tmp_3_i15


 <State 179>: 2.71ns
ST_179: stg_1376 [1/1] 2.71ns
:33  store float %w_out_3, float* %S_c_buffer_0_addr_1, align 8

ST_179: stg_1377 [1/1] 2.71ns
:34  store float %x_out, float* %S_c_buffer_1_addr_1, align 4

ST_179: stg_1378 [1/1] 2.71ns
:35  store float %vw_out_1, float* %V_c_buffer_0_addr_1, align 8

ST_179: stg_1379 [1/1] 2.71ns
:36  store float %vx_out_1, float* %V_c_buffer_1_addr_1, align 4

ST_179: stg_1380 [1/1] 2.71ns
:37  store float %uw_out_1, float* %U_c_buffer_0_addr_1, align 8

ST_179: stg_1381 [1/1] 2.71ns
:38  store float %ux_out_1, float* %U_c_buffer_1_addr_1, align 4

ST_179: stg_1382 [1/1] 0.00ns
:39  br label %._crit_edge50


 <State 180>: 5.00ns
ST_180: indvar_flatten2 [1/1] 0.00ns
.preheader26:0  %indvar_flatten2 = phi i8 [ %indvar_flatten_next2, %._crit_edge53 ], [ 0, %.preheader28 ]

ST_180: proc9 [1/1] 0.00ns
.preheader26:1  %proc9 = phi i4 [ %p_v2, %._crit_edge53 ], [ 0, %.preheader28 ]

ST_180: i2 [1/1] 0.00ns
.preheader26:4  %i2 = phi i5 [ %i_3, %._crit_edge53 ], [ 0, %.preheader28 ]

ST_180: tmp_35 [1/1] 0.00ns
.preheader26:5  %tmp_35 = zext i4 %proc9 to i64

ST_180: diag_1_addr_12 [1/1] 0.00ns
.preheader26:6  %diag_1_addr_12 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_35

ST_180: diag_1_load_9 [2/2] 2.39ns
.preheader26:7  %diag_1_load_9 = load i32* %diag_1_addr_12, align 4

ST_180: diag_2_addr_12 [1/1] 0.00ns
.preheader26:8  %diag_2_addr_12 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_35

ST_180: diag_2_load_9 [2/2] 2.39ns
.preheader26:9  %diag_2_load_9 = load i32* %diag_2_addr_12, align 4

ST_180: exitcond_flatten3 [1/1] 2.00ns
.preheader26:13  %exitcond_flatten3 = icmp eq i8 %indvar_flatten2, -128

ST_180: indvar_flatten_next2 [1/1] 1.72ns
.preheader26:14  %indvar_flatten_next2 = add i8 %indvar_flatten2, 1

ST_180: proc_9 [1/1] 0.80ns
.preheader27:0  %proc_9 = add i4 %proc9, 1

ST_180: exitcond10 [1/1] 1.91ns
.preheader27:3  %exitcond10 = icmp eq i5 %i2, -16

ST_180: i2_mid2 [1/1] 1.37ns
.preheader27:4  %i2_mid2 = select i1 %exitcond10, i5 0, i5 %i2

ST_180: tmp_35_mid1 [1/1] 0.00ns
.preheader27:5  %tmp_35_mid1 = zext i4 %proc_9 to i64

ST_180: p_v2 [1/1] 1.37ns
.preheader27:6  %p_v2 = select i1 %exitcond10, i4 %proc_9, i4 %proc9

ST_180: diag_1_addr_13 [1/1] 0.00ns
.preheader27:9  %diag_1_addr_13 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_35_mid1

ST_180: diag_1_load_10 [2/2] 2.39ns
.preheader27:10  %diag_1_load_10 = load i32* %diag_1_addr_13, align 4

ST_180: diag_2_addr_13 [1/1] 0.00ns
.preheader27:11  %diag_2_addr_13 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_35_mid1

ST_180: diag_2_load_10 [2/2] 2.39ns
.preheader27:12  %diag_2_load_10 = load i32* %diag_2_addr_13, align 4

ST_180: i_3 [1/1] 1.72ns
._crit_edge53:0  %i_3 = add i5 %i2_mid2, 1

ST_180: stg_1403 [1/1] 0.00ns
._crit_edge53:1  br label %.preheader26


 <State 181>: 7.65ns
ST_181: diag_1_load_9 [1/2] 2.39ns
.preheader26:7  %diag_1_load_9 = load i32* %diag_1_addr_12, align 4

ST_181: diag_2_load_9 [1/2] 2.39ns
.preheader26:9  %diag_2_load_9 = load i32* %diag_2_addr_12, align 4

ST_181: tmp_i13 [1/1] 2.52ns
.preheader26:10  %tmp_i13 = icmp sgt i32 %diag_1_load_9, %diag_2_load_9

ST_181: top_left_11 [1/1] 1.37ns
.preheader26:11  %top_left_11 = select i1 %tmp_i13, i32 %diag_2_load_9, i32 %diag_1_load_9

ST_181: bottom_right_11 [1/1] 1.37ns
.preheader26:12  %bottom_right_11 = select i1 %tmp_i13, i32 %diag_1_load_9, i32 %diag_2_load_9

ST_181: diag_1_load_10 [1/2] 2.39ns
.preheader27:10  %diag_1_load_10 = load i32* %diag_1_addr_13, align 4

ST_181: diag_2_load_10 [1/2] 2.39ns
.preheader27:12  %diag_2_load_10 = load i32* %diag_2_addr_13, align 4

ST_181: tmp_i13_mid1 [1/1] 2.52ns
.preheader27:13  %tmp_i13_mid1 = icmp sgt i32 %diag_1_load_10, %diag_2_load_10

ST_181: top_left_21_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_21_mid2)
.preheader27:14  %top_left_21_mid1 = select i1 %tmp_i13_mid1, i32 %diag_2_load_10, i32 %diag_1_load_10

ST_181: top_left_21_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader27:15  %top_left_21_mid2 = select i1 %exitcond10, i32 %top_left_21_mid1, i32 %top_left_11

ST_181: bottom_right_27_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_27_mid2)
.preheader27:16  %bottom_right_27_mid1 = select i1 %tmp_i13_mid1, i32 %diag_1_load_10, i32 %diag_2_load_10

ST_181: bottom_right_27_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader27:17  %bottom_right_27_mid2 = select i1 %exitcond10, i32 %bottom_right_27_mid1, i32 %bottom_right_11


 <State 182>: 7.17ns
ST_182: top_left_s [1/1] 0.00ns
.preheader26:2  %top_left_s = phi i32 [ %idx2_idx1_i489_top_left_s, %._crit_edge53 ], [ %top_left_9, %.preheader28 ]

ST_182: bottom_right_s [1/1] 0.00ns
.preheader26:3  %bottom_right_s = phi i32 [ %bottom_right_write_assign_i2, %._crit_edge53 ], [ %bottom_right_9, %.preheader28 ]

ST_182: stg_1418 [1/1] 1.57ns
.preheader26:15  br i1 %exitcond_flatten3, label %.preheader24, label %.preheader27

ST_182: stg_1419 [1/1] 0.00ns
.preheader27:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_wb_off_r_str)

ST_182: empty_23 [1/1] 0.00ns
.preheader27:2  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_182: tmp_86 [1/1] 0.00ns
.preheader27:7  %tmp_86 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %p_v2, i4 0)

ST_182: tmp_111_cast [1/1] 0.00ns
.preheader27:8  %tmp_111_cast = zext i8 %tmp_86 to i9

ST_182: i2_cast7 [1/1] 0.00ns
.preheader27:18  %i2_cast7 = zext i5 %i2_mid2 to i32

ST_182: stg_1424 [1/1] 0.00ns
.preheader27:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1813) nounwind

ST_182: tmp_77 [1/1] 0.00ns
.preheader27:20  %tmp_77 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1813)

ST_182: stg_1426 [1/1] 0.00ns
.preheader27:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_182: tmp_42 [1/1] 1.91ns
.preheader27:22  %tmp_42 = icmp eq i5 %i2_mid2, 0

ST_182: idx2_idx1_i489_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader27:23  %idx2_idx1_i489_top_left_s = select i1 %tmp_42, i32 %top_left_21_mid2, i32 %top_left_s

ST_182: bottom_right_write_assign_i2 [1/1] 1.37ns (out node of the LUT)
.preheader27:24  %bottom_right_write_assign_i2 = select i1 %tmp_42, i32 %bottom_right_27_mid2, i32 %bottom_right_s

ST_182: tmp_47 [1/1] 2.52ns
.preheader27:25  %tmp_47 = icmp eq i32 %idx2_idx1_i489_top_left_s, 16

ST_182: tmp_52 [1/1] 2.52ns
.preheader27:26  %tmp_52 = icmp eq i32 %bottom_right_write_assign_i2, 16

ST_182: or_cond11 [1/1] 1.37ns
.preheader27:27  %or_cond11 = or i1 %tmp_47, %tmp_52

ST_182: stg_1433 [1/1] 0.00ns
.preheader27:28  br i1 %or_cond11, label %._crit_edge53, label %21

ST_182: tmp_55 [1/1] 2.52ns
:0  %tmp_55 = icmp eq i32 %i2_cast7, %bottom_right_write_assign_i2

ST_182: tmp_56 [1/1] 2.52ns
:1  %tmp_56 = icmp eq i32 %i2_cast7, %idx2_idx1_i489_top_left_s

ST_182: or_cond2 [1/1] 1.37ns
:2  %or_cond2 = or i1 %tmp_55, %tmp_56

ST_182: stg_1437 [1/1] 0.00ns
:3  br i1 %or_cond2, label %._crit_edge55, label %22

ST_182: tmp_60_cast [1/1] 0.00ns
:0  %tmp_60_cast = zext i5 %i2_mid2 to i9

ST_182: tmp_96 [1/1] 0.00ns
:1  %tmp_96 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i2_mid2, i4 0)

ST_182: tmp_116_cast [1/1] 0.00ns
:2  %tmp_116_cast = zext i9 %tmp_96 to i10

ST_182: tmp_97 [1/1] 1.72ns
:3  %tmp_97 = add i9 %tmp_111_cast, %tmp_60_cast

ST_182: tmp_117_cast [1/1] 0.00ns
:4  %tmp_117_cast = zext i9 %tmp_97 to i64

ST_182: V_c_buffer_0_addr_2 [1/1] 0.00ns
:6  %V_c_buffer_0_addr_2 = getelementptr [128 x float]* %V_c_buffer_0, i64 0, i64 %tmp_117_cast

ST_182: S_c_buffer_0_addr_2 [1/1] 0.00ns
:8  %S_c_buffer_0_addr_2 = getelementptr [128 x float]* %S_c_buffer_0, i64 0, i64 %tmp_117_cast

ST_182: U_c_buffer_0_addr_2 [1/1] 0.00ns
:10  %U_c_buffer_0_addr_2 = getelementptr [128 x float]* %U_c_buffer_0, i64 0, i64 %tmp_117_cast

ST_182: S_c_buffer_0_load [2/2] 2.71ns
:11  %S_c_buffer_0_load = load float* %S_c_buffer_0_addr_2, align 8

ST_182: tmp_98 [1/1] 0.00ns
:12  %tmp_98 = trunc i32 %idx2_idx1_i489_top_left_s to i10

ST_182: tmp_99 [1/1] 1.84ns
:13  %tmp_99 = add i10 %tmp_116_cast, %tmp_98

ST_182: U_c_buffer_0_load [2/2] 2.71ns
:19  %U_c_buffer_0_load = load float* %U_c_buffer_0_addr_2, align 8

ST_182: V_c_buffer_0_load [2/2] 2.71ns
:21  %V_c_buffer_0_load = load float* %V_c_buffer_0_addr_2, align 8

ST_182: tmp_100 [1/1] 0.00ns
:24  %tmp_100 = trunc i32 %bottom_right_write_assign_i2 to i10

ST_182: tmp_101 [1/1] 1.84ns
:25  %tmp_101 = add i10 %tmp_116_cast, %tmp_100

ST_182: empty_22 [1/1] 0.00ns
._crit_edge55:0  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1813, i32 %tmp_77)

ST_182: stg_1454 [1/1] 0.00ns
._crit_edge55:1  br label %._crit_edge53


 <State 183>: 5.42ns
ST_183: V_c_buffer_1_addr_2 [1/1] 0.00ns
:5  %V_c_buffer_1_addr_2 = getelementptr [128 x float]* %V_c_buffer_1, i64 0, i64 %tmp_117_cast

ST_183: U_c_buffer_1_addr_2 [1/1] 0.00ns
:7  %U_c_buffer_1_addr_2 = getelementptr [128 x float]* %U_c_buffer_1, i64 0, i64 %tmp_117_cast

ST_183: S_c_buffer_1_addr_2 [1/1] 0.00ns
:9  %S_c_buffer_1_addr_2 = getelementptr [128 x float]* %S_c_buffer_1, i64 0, i64 %tmp_117_cast

ST_183: S_c_buffer_0_load [1/2] 2.71ns
:11  %S_c_buffer_0_load = load float* %S_c_buffer_0_addr_2, align 8

ST_183: tmp_118_cast [1/1] 0.00ns
:14  %tmp_118_cast = sext i10 %tmp_99 to i64

ST_183: S_addr_11 [1/1] 0.00ns
:15  %S_addr_11 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_118_cast

ST_183: U_addr_11 [1/1] 0.00ns
:16  %U_addr_11 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_118_cast

ST_183: V_addr_11 [1/1] 0.00ns
:17  %V_addr_11 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_118_cast

ST_183: stg_1463 [1/1] 2.71ns
:18  store float %S_c_buffer_0_load, float* %S_addr_11, align 4

ST_183: U_c_buffer_0_load [1/2] 2.71ns
:19  %U_c_buffer_0_load = load float* %U_c_buffer_0_addr_2, align 8

ST_183: stg_1465 [1/1] 2.71ns
:20  store float %U_c_buffer_0_load, float* %U_addr_11, align 4

ST_183: V_c_buffer_0_load [1/2] 2.71ns
:21  %V_c_buffer_0_load = load float* %V_c_buffer_0_addr_2, align 8

ST_183: stg_1467 [1/1] 2.71ns
:22  store float %V_c_buffer_0_load, float* %V_addr_11, align 4

ST_183: S_c_buffer_1_load [2/2] 2.71ns
:23  %S_c_buffer_1_load = load float* %S_c_buffer_1_addr_2, align 4

ST_183: U_c_buffer_1_load [2/2] 2.71ns
:31  %U_c_buffer_1_load = load float* %U_c_buffer_1_addr_2, align 4

ST_183: V_c_buffer_1_load [2/2] 2.71ns
:33  %V_c_buffer_1_load = load float* %V_c_buffer_1_addr_2, align 4


 <State 184>: 5.42ns
ST_184: S_c_buffer_1_load [1/2] 2.71ns
:23  %S_c_buffer_1_load = load float* %S_c_buffer_1_addr_2, align 4

ST_184: tmp_119_cast [1/1] 0.00ns
:26  %tmp_119_cast = sext i10 %tmp_101 to i64

ST_184: S_addr_12 [1/1] 0.00ns
:27  %S_addr_12 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_119_cast

ST_184: U_addr_12 [1/1] 0.00ns
:28  %U_addr_12 = getelementptr [256 x float]* %U, i64 0, i64 %tmp_119_cast

ST_184: V_addr_12 [1/1] 0.00ns
:29  %V_addr_12 = getelementptr [256 x float]* %V, i64 0, i64 %tmp_119_cast

ST_184: stg_1476 [1/1] 2.71ns
:30  store float %S_c_buffer_1_load, float* %S_addr_12, align 4

ST_184: U_c_buffer_1_load [1/2] 2.71ns
:31  %U_c_buffer_1_load = load float* %U_c_buffer_1_addr_2, align 4

ST_184: stg_1478 [1/1] 2.71ns
:32  store float %U_c_buffer_1_load, float* %U_addr_12, align 4

ST_184: V_c_buffer_1_load [1/2] 2.71ns
:33  %V_c_buffer_1_load = load float* %V_c_buffer_1_addr_2, align 4

ST_184: stg_1480 [1/1] 2.71ns
:34  store float %V_c_buffer_1_load, float* %V_addr_12, align 4

ST_184: stg_1481 [1/1] 0.00ns
:35  br label %._crit_edge55


 <State 185>: 5.00ns
ST_185: indvar_flatten3 [1/1] 0.00ns
.preheader24:0  %indvar_flatten3 = phi i8 [ %indvar_flatten_next3, %._crit_edge58 ], [ 0, %.preheader26 ]

ST_185: proc7 [1/1] 0.00ns
.preheader24:1  %proc7 = phi i4 [ %p_v3, %._crit_edge58 ], [ 0, %.preheader26 ]

ST_185: i3 [1/1] 0.00ns
.preheader24:4  %i3 = phi i5 [ %i_4, %._crit_edge58 ], [ 0, %.preheader26 ]

ST_185: tmp_41 [1/1] 0.00ns
.preheader24:5  %tmp_41 = zext i4 %proc7 to i64

ST_185: diag_1_addr_14 [1/1] 0.00ns
.preheader24:6  %diag_1_addr_14 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_41

ST_185: diag_1_load_11 [2/2] 2.39ns
.preheader24:7  %diag_1_load_11 = load i32* %diag_1_addr_14, align 4

ST_185: diag_2_addr_14 [1/1] 0.00ns
.preheader24:8  %diag_2_addr_14 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_41

ST_185: diag_2_load_11 [2/2] 2.39ns
.preheader24:9  %diag_2_load_11 = load i32* %diag_2_addr_14, align 4

ST_185: exitcond_flatten4 [1/1] 2.00ns
.preheader24:13  %exitcond_flatten4 = icmp eq i8 %indvar_flatten3, -128

ST_185: indvar_flatten_next3 [1/1] 1.72ns
.preheader24:14  %indvar_flatten_next3 = add i8 %indvar_flatten3, 1

ST_185: proc_12 [1/1] 0.80ns
.preheader25:0  %proc_12 = add i4 %proc7, 1

ST_185: exitcond11 [1/1] 1.91ns
.preheader25:3  %exitcond11 = icmp eq i5 %i3, -16

ST_185: i3_mid2 [1/1] 1.37ns
.preheader25:4  %i3_mid2 = select i1 %exitcond11, i5 0, i5 %i3

ST_185: tmp_41_mid1 [1/1] 0.00ns
.preheader25:5  %tmp_41_mid1 = zext i4 %proc_12 to i64

ST_185: p_v3 [1/1] 1.37ns
.preheader25:6  %p_v3 = select i1 %exitcond11, i4 %proc_12, i4 %proc7

ST_185: diag_1_addr_15 [1/1] 0.00ns
.preheader25:9  %diag_1_addr_15 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_41_mid1

ST_185: diag_1_load_12 [2/2] 2.39ns
.preheader25:10  %diag_1_load_12 = load i32* %diag_1_addr_15, align 4

ST_185: diag_2_addr_15 [1/1] 0.00ns
.preheader25:11  %diag_2_addr_15 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_41_mid1

ST_185: diag_2_load_12 [2/2] 2.39ns
.preheader25:12  %diag_2_load_12 = load i32* %diag_2_addr_15, align 4

ST_185: i_4 [1/1] 1.72ns
._crit_edge58:0  %i_4 = add i5 %i3_mid2, 1

ST_185: stg_1502 [1/1] 0.00ns
._crit_edge58:1  br label %.preheader24


 <State 186>: 7.65ns
ST_186: diag_1_load_11 [1/2] 2.39ns
.preheader24:7  %diag_1_load_11 = load i32* %diag_1_addr_14, align 4

ST_186: diag_2_load_11 [1/2] 2.39ns
.preheader24:9  %diag_2_load_11 = load i32* %diag_2_addr_14, align 4

ST_186: tmp_i14 [1/1] 2.52ns
.preheader24:10  %tmp_i14 = icmp sgt i32 %diag_1_load_11, %diag_2_load_11

ST_186: top_left_13 [1/1] 1.37ns
.preheader24:11  %top_left_13 = select i1 %tmp_i14, i32 %diag_2_load_11, i32 %diag_1_load_11

ST_186: bottom_right_13 [1/1] 1.37ns
.preheader24:12  %bottom_right_13 = select i1 %tmp_i14, i32 %diag_1_load_11, i32 %diag_2_load_11

ST_186: diag_1_load_12 [1/2] 2.39ns
.preheader25:10  %diag_1_load_12 = load i32* %diag_1_addr_15, align 4

ST_186: diag_2_load_12 [1/2] 2.39ns
.preheader25:12  %diag_2_load_12 = load i32* %diag_2_addr_15, align 4

ST_186: tmp_i14_mid1 [1/1] 2.52ns
.preheader25:13  %tmp_i14_mid1 = icmp sgt i32 %diag_1_load_12, %diag_2_load_12

ST_186: top_left_22_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_22_mid2)
.preheader25:14  %top_left_22_mid1 = select i1 %tmp_i14_mid1, i32 %diag_2_load_12, i32 %diag_1_load_12

ST_186: top_left_22_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader25:15  %top_left_22_mid2 = select i1 %exitcond11, i32 %top_left_22_mid1, i32 %top_left_13

ST_186: bottom_right_28_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_28_mid2)
.preheader25:16  %bottom_right_28_mid1 = select i1 %tmp_i14_mid1, i32 %diag_1_load_12, i32 %diag_2_load_12

ST_186: bottom_right_28_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader25:17  %bottom_right_28_mid2 = select i1 %exitcond11, i32 %bottom_right_28_mid1, i32 %bottom_right_13


 <State 187>: 7.83ns
ST_187: top_left_12 [1/1] 0.00ns
.preheader24:2  %top_left_12 = phi i32 [ %idx2_idx1_i494_top_left_s, %._crit_edge58 ], [ %top_left_s, %.preheader26 ]

ST_187: bottom_right_12 [1/1] 0.00ns
.preheader24:3  %bottom_right_12 = phi i32 [ %bottom_right_write_assign_i3, %._crit_edge58 ], [ %bottom_right_s, %.preheader26 ]

ST_187: stg_1517 [1/1] 1.57ns
.preheader24:15  br i1 %exitcond_flatten4, label %.preheader22, label %.preheader25

ST_187: stg_1518 [1/1] 0.00ns
.preheader25:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_rd_off_c_str)

ST_187: empty_25 [1/1] 0.00ns
.preheader25:2  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_187: tmp_93 [1/1] 0.00ns
.preheader25:7  %tmp_93 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %p_v3, i4 0)

ST_187: tmp_114_cast [1/1] 0.00ns
.preheader25:8  %tmp_114_cast = zext i8 %tmp_93 to i9

ST_187: i3_cast5 [1/1] 0.00ns
.preheader25:18  %i3_cast5 = zext i5 %i3_mid2 to i32

ST_187: stg_1523 [1/1] 0.00ns
.preheader25:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1814) nounwind

ST_187: tmp_78 [1/1] 0.00ns
.preheader25:20  %tmp_78 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1814)

ST_187: stg_1525 [1/1] 0.00ns
.preheader25:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_187: tmp_51 [1/1] 1.91ns
.preheader25:22  %tmp_51 = icmp eq i5 %i3_mid2, 0

ST_187: idx2_idx1_i494_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader25:23  %idx2_idx1_i494_top_left_s = select i1 %tmp_51, i32 %top_left_22_mid2, i32 %top_left_12

ST_187: bottom_right_write_assign_i3 [1/1] 1.37ns (out node of the LUT)
.preheader25:24  %bottom_right_write_assign_i3 = select i1 %tmp_51, i32 %bottom_right_28_mid2, i32 %bottom_right_12

ST_187: tmp_54 [1/1] 2.52ns
.preheader25:25  %tmp_54 = icmp eq i32 %idx2_idx1_i494_top_left_s, 16

ST_187: tmp_59 [1/1] 2.52ns
.preheader25:26  %tmp_59 = icmp eq i32 %bottom_right_write_assign_i3, 16

ST_187: or_cond12 [1/1] 1.37ns
.preheader25:27  %or_cond12 = or i1 %tmp_54, %tmp_59

ST_187: stg_1532 [1/1] 0.00ns
.preheader25:28  br i1 %or_cond12, label %._crit_edge58, label %23

ST_187: tmp_64 [1/1] 2.52ns
:0  %tmp_64 = icmp eq i32 %i3_cast5, %bottom_right_write_assign_i3

ST_187: tmp_65 [1/1] 2.52ns
:1  %tmp_65 = icmp eq i32 %i3_cast5, %idx2_idx1_i494_top_left_s

ST_187: or_cond3 [1/1] 1.37ns
:2  %or_cond3 = or i1 %tmp_64, %tmp_65

ST_187: stg_1536 [1/1] 0.00ns
:3  br i1 %or_cond3, label %._crit_edge60, label %24

ST_187: tmp_68_cast1 [1/1] 0.00ns
:0  %tmp_68_cast1 = zext i5 %i3_mid2 to i10

ST_187: tmp_68_cast [1/1] 0.00ns
:1  %tmp_68_cast = zext i5 %i3_mid2 to i9

ST_187: tmp_103 [1/1] 1.72ns
:2  %tmp_103 = add i9 %tmp_114_cast, %tmp_68_cast

ST_187: tmp_104 [1/1] 0.00ns
:6  %tmp_104 = trunc i32 %idx2_idx1_i494_top_left_s to i6

ST_187: tmp_124_cast [1/1] 0.00ns
:7  %tmp_124_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_104, i4 0)

ST_187: tmp_105 [1/1] 1.84ns
:8  %tmp_105 = add i10 %tmp_124_cast, %tmp_68_cast1

ST_187: tmp_125_cast [1/1] 0.00ns
:9  %tmp_125_cast = sext i10 %tmp_105 to i64

ST_187: S_addr_13 [1/1] 0.00ns
:10  %S_addr_13 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_125_cast

ST_187: S_load_6 [2/2] 2.71ns
:11  %S_load_6 = load float* %S_addr_13, align 4

ST_187: tmp_106 [1/1] 0.00ns
:13  %tmp_106 = trunc i32 %bottom_right_write_assign_i3 to i6

ST_187: tmp_127_cast [1/1] 0.00ns
:14  %tmp_127_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_106, i4 0)

ST_187: tmp_107 [1/1] 1.84ns
:15  %tmp_107 = add i10 %tmp_127_cast, %tmp_68_cast1

ST_187: tmp_128_cast [1/1] 0.00ns
:16  %tmp_128_cast = sext i10 %tmp_107 to i64

ST_187: S_addr_14 [1/1] 0.00ns
:17  %S_addr_14 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_128_cast

ST_187: S_load_7 [2/2] 2.71ns
:18  %S_load_7 = load float* %S_addr_14, align 4

ST_187: empty_24 [1/1] 0.00ns
._crit_edge60:0  %empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1814, i32 %tmp_78)

ST_187: stg_1553 [1/1] 0.00ns
._crit_edge60:1  br label %._crit_edge58


 <State 188>: 5.42ns
ST_188: tmp_122_cast [1/1] 0.00ns
:3  %tmp_122_cast = zext i9 %tmp_103 to i64

ST_188: S_r_buffer_0_addr [1/1] 0.00ns
:4  %S_r_buffer_0_addr = getelementptr [128 x float]* %S_r_buffer_0, i64 0, i64 %tmp_122_cast

ST_188: S_r_buffer_1_addr [1/1] 0.00ns
:5  %S_r_buffer_1_addr = getelementptr [128 x float]* %S_r_buffer_1, i64 0, i64 %tmp_122_cast

ST_188: S_load_6 [1/2] 2.71ns
:11  %S_load_6 = load float* %S_addr_13, align 4

ST_188: stg_1558 [1/1] 2.71ns
:12  store float %S_load_6, float* %S_r_buffer_0_addr, align 4

ST_188: S_load_7 [1/2] 2.71ns
:18  %S_load_7 = load float* %S_addr_14, align 4

ST_188: stg_1560 [1/1] 2.71ns
:19  store float %S_load_7, float* %S_r_buffer_1_addr, align 4

ST_188: stg_1561 [1/1] 0.00ns
:20  br label %._crit_edge60


 <State 189>: 5.00ns
ST_189: indvar_flatten4 [1/1] 0.00ns
.preheader22:0  %indvar_flatten4 = phi i8 [ %indvar_flatten_next4, %._crit_edge63 ], [ 0, %.preheader24 ]

ST_189: proc10 [1/1] 0.00ns
.preheader22:1  %proc10 = phi i4 [ %p_v4, %._crit_edge63 ], [ 0, %.preheader24 ]

ST_189: off_col [1/1] 0.00ns
.preheader22:4  %off_col = phi i5 [ %off_col_1, %._crit_edge63 ], [ 0, %.preheader24 ]

ST_189: tmp_50 [1/1] 0.00ns
.preheader22:5  %tmp_50 = zext i4 %proc10 to i64

ST_189: diag_1_addr_16 [1/1] 0.00ns
.preheader22:6  %diag_1_addr_16 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_50

ST_189: diag_1_load_13 [2/2] 2.39ns
.preheader22:7  %diag_1_load_13 = load i32* %diag_1_addr_16, align 4

ST_189: diag_2_addr_16 [1/1] 0.00ns
.preheader22:8  %diag_2_addr_16 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_50

ST_189: diag_2_load_13 [2/2] 2.39ns
.preheader22:9  %diag_2_load_13 = load i32* %diag_2_addr_16, align 4

ST_189: exitcond_flatten5 [1/1] 2.00ns
.preheader22:13  %exitcond_flatten5 = icmp eq i8 %indvar_flatten4, -128

ST_189: indvar_flatten_next4 [1/1] 1.72ns
.preheader22:14  %indvar_flatten_next4 = add i8 %indvar_flatten4, 1

ST_189: proc_14 [1/1] 0.80ns
.preheader23:0  %proc_14 = add i4 %proc10, 1

ST_189: exitcond12 [1/1] 1.91ns
.preheader23:3  %exitcond12 = icmp eq i5 %off_col, -16

ST_189: off_col_mid2 [1/1] 1.37ns
.preheader23:4  %off_col_mid2 = select i1 %exitcond12, i5 0, i5 %off_col

ST_189: tmp_50_mid1 [1/1] 0.00ns
.preheader23:5  %tmp_50_mid1 = zext i4 %proc_14 to i64

ST_189: p_v4 [1/1] 1.37ns
.preheader23:6  %p_v4 = select i1 %exitcond12, i4 %proc_14, i4 %proc10

ST_189: diag_1_addr_17 [1/1] 0.00ns
.preheader23:9  %diag_1_addr_17 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_50_mid1

ST_189: diag_1_load_14 [2/2] 2.39ns
.preheader23:10  %diag_1_load_14 = load i32* %diag_1_addr_17, align 4

ST_189: diag_2_addr_17 [1/1] 0.00ns
.preheader23:11  %diag_2_addr_17 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_50_mid1

ST_189: diag_2_load_14 [2/2] 2.39ns
.preheader23:12  %diag_2_load_14 = load i32* %diag_2_addr_17, align 4

ST_189: off_col_1 [1/1] 1.72ns
._crit_edge63:0  %off_col_1 = add i5 %off_col_mid2, 1

ST_189: stg_1582 [1/1] 0.00ns
._crit_edge63:1  br label %.preheader22


 <State 190>: 7.65ns
ST_190: diag_1_load_13 [1/2] 2.39ns
.preheader22:7  %diag_1_load_13 = load i32* %diag_1_addr_16, align 4

ST_190: diag_2_load_13 [1/2] 2.39ns
.preheader22:9  %diag_2_load_13 = load i32* %diag_2_addr_16, align 4

ST_190: tmp_i21 [1/1] 2.52ns
.preheader22:10  %tmp_i21 = icmp sgt i32 %diag_1_load_13, %diag_2_load_13

ST_190: top_left_15 [1/1] 1.37ns
.preheader22:11  %top_left_15 = select i1 %tmp_i21, i32 %diag_2_load_13, i32 %diag_1_load_13

ST_190: bottom_right_15 [1/1] 1.37ns
.preheader22:12  %bottom_right_15 = select i1 %tmp_i21, i32 %diag_1_load_13, i32 %diag_2_load_13

ST_190: diag_1_load_14 [1/2] 2.39ns
.preheader23:10  %diag_1_load_14 = load i32* %diag_1_addr_17, align 4

ST_190: diag_2_load_14 [1/2] 2.39ns
.preheader23:12  %diag_2_load_14 = load i32* %diag_2_addr_17, align 4

ST_190: tmp_i21_mid1 [1/1] 2.52ns
.preheader23:22  %tmp_i21_mid1 = icmp sgt i32 %diag_1_load_14, %diag_2_load_14

ST_190: top_left_23_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_23_mid2)
.preheader23:23  %top_left_23_mid1 = select i1 %tmp_i21_mid1, i32 %diag_2_load_14, i32 %diag_1_load_14

ST_190: top_left_23_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader23:24  %top_left_23_mid2 = select i1 %exitcond12, i32 %top_left_23_mid1, i32 %top_left_15

ST_190: bottom_right_29_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_29_mid2)
.preheader23:25  %bottom_right_29_mid1 = select i1 %tmp_i21_mid1, i32 %diag_1_load_14, i32 %diag_2_load_14

ST_190: bottom_right_29_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader23:26  %bottom_right_29_mid2 = select i1 %exitcond12, i32 %bottom_right_29_mid1, i32 %bottom_right_15


 <State 191>: 7.17ns
ST_191: top_left_14 [1/1] 0.00ns
.preheader22:2  %top_left_14 = phi i32 [ %idx2_idx1_i499_top_left_s, %._crit_edge63 ], [ %top_left_12, %.preheader24 ]

ST_191: bottom_right_14 [1/1] 0.00ns
.preheader22:3  %bottom_right_14 = phi i32 [ %bottom_right_write_assign_i4, %._crit_edge63 ], [ %bottom_right_12, %.preheader24 ]

ST_191: stg_1597 [1/1] 1.57ns
.preheader22:15  br i1 %exitcond_flatten5, label %.preheader, label %.preheader23

ST_191: tmp_95 [1/1] 0.00ns
.preheader23:7  %tmp_95 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %p_v4, i4 0)

ST_191: tmp_121_cast [1/1] 0.00ns
.preheader23:8  %tmp_121_cast = zext i8 %tmp_95 to i9

ST_191: uw_new_2_mid2_cast [1/1] 0.00ns
.preheader23:13  %uw_new_2_mid2_cast = zext i4 %p_v4 to i64

ST_191: J2x2_0_0_addr_2 [1/1] 0.00ns
.preheader23:14  %J2x2_0_0_addr_2 = getelementptr [8 x float]* %J2x2_0_0, i64 0, i64 %uw_new_2_mid2_cast

ST_191: J2x2_0_0_load_1 [2/2] 2.39ns
.preheader23:15  %J2x2_0_0_load_1 = load float* %J2x2_0_0_addr_2, align 4

ST_191: J2x2_0_1_addr_2 [1/1] 0.00ns
.preheader23:16  %J2x2_0_1_addr_2 = getelementptr [8 x float]* %J2x2_0_1, i64 0, i64 %uw_new_2_mid2_cast

ST_191: J2x2_0_1_load_1 [2/2] 2.39ns
.preheader23:17  %J2x2_0_1_load_1 = load float* %J2x2_0_1_addr_2, align 4

ST_191: J2x2_1_0_addr_2 [1/1] 0.00ns
.preheader23:18  %J2x2_1_0_addr_2 = getelementptr [8 x float]* %J2x2_1_0, i64 0, i64 %uw_new_2_mid2_cast

ST_191: J2x2_1_0_load_1 [2/2] 2.39ns
.preheader23:19  %J2x2_1_0_load_1 = load float* %J2x2_1_0_addr_2, align 4

ST_191: J2x2_1_1_addr_2 [1/1] 0.00ns
.preheader23:20  %J2x2_1_1_addr_2 = getelementptr [8 x float]* %J2x2_1_1, i64 0, i64 %uw_new_2_mid2_cast

ST_191: J2x2_1_1_load_1 [2/2] 2.39ns
.preheader23:21  %J2x2_1_1_load_1 = load float* %J2x2_1_1_addr_2, align 4

ST_191: off_col_cast3 [1/1] 0.00ns
.preheader23:27  %off_col_cast3 = zext i5 %off_col_mid2 to i32

ST_191: tmp_79 [1/1] 0.00ns
.preheader23:29  %tmp_79 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str1815)

ST_191: tmp_58 [1/1] 1.91ns
.preheader23:31  %tmp_58 = icmp eq i5 %off_col_mid2, 0

ST_191: idx2_idx1_i499_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader23:32  %idx2_idx1_i499_top_left_s = select i1 %tmp_58, i32 %top_left_23_mid2, i32 %top_left_14

ST_191: bottom_right_write_assign_i4 [1/1] 1.37ns (out node of the LUT)
.preheader23:33  %bottom_right_write_assign_i4 = select i1 %tmp_58, i32 %bottom_right_29_mid2, i32 %bottom_right_14

ST_191: tmp_63 [1/1] 2.52ns
.preheader23:34  %tmp_63 = icmp eq i32 %idx2_idx1_i499_top_left_s, 16

ST_191: tmp_67 [1/1] 2.52ns
.preheader23:35  %tmp_67 = icmp eq i32 %bottom_right_write_assign_i4, 16

ST_191: or_cond13 [1/1] 1.37ns
.preheader23:36  %or_cond13 = or i1 %tmp_63, %tmp_67

ST_191: stg_1617 [1/1] 0.00ns
.preheader23:37  br i1 %or_cond13, label %._crit_edge63, label %25

ST_191: tmp_72 [1/1] 2.52ns
:0  %tmp_72 = icmp eq i32 %off_col_cast3, %bottom_right_write_assign_i4

ST_191: tmp_73 [1/1] 2.52ns
:1  %tmp_73 = icmp eq i32 %off_col_cast3, %idx2_idx1_i499_top_left_s

ST_191: or_cond4 [1/1] 1.37ns
:2  %or_cond4 = or i1 %tmp_72, %tmp_73

ST_191: stg_1621 [1/1] 0.00ns
:3  br i1 %or_cond4, label %._crit_edge65, label %26

ST_191: tmp_75_cast [1/1] 0.00ns
:0  %tmp_75_cast = zext i5 %off_col_mid2 to i9

ST_191: tmp_108 [1/1] 1.72ns
:1  %tmp_108 = add i9 %tmp_121_cast, %tmp_75_cast

ST_191: tmp_131_cast [1/1] 0.00ns
:2  %tmp_131_cast = zext i9 %tmp_108 to i64

ST_191: S_r_buffer_0_addr_1 [1/1] 0.00ns
:3  %S_r_buffer_0_addr_1 = getelementptr [128 x float]* %S_r_buffer_0, i64 0, i64 %tmp_131_cast

ST_191: S_r_buffer_1_addr_1 [1/1] 0.00ns
:4  %S_r_buffer_1_addr_1 = getelementptr [128 x float]* %S_r_buffer_1, i64 0, i64 %tmp_131_cast

ST_191: w_in_2 [2/2] 2.71ns
:5  %w_in_2 = load float* %S_r_buffer_0_addr_1, align 4

ST_191: y_in_1 [2/2] 2.71ns
:6  %y_in_1 = load float* %S_r_buffer_1_addr_1, align 4

ST_191: empty_26 [1/1] 0.00ns
._crit_edge65:0  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str1815, i32 %tmp_79)

ST_191: stg_1630 [1/1] 0.00ns
._crit_edge65:1  br label %._crit_edge63


 <State 192>: 8.41ns
ST_192: stg_1631 [1/1] 0.00ns
.preheader23:1  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @L_svd_calc_off_c_str)

ST_192: empty_27 [1/1] 0.00ns
.preheader23:2  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_192: J2x2_0_0_load_1 [1/2] 2.39ns
.preheader23:15  %J2x2_0_0_load_1 = load float* %J2x2_0_0_addr_2, align 4

ST_192: J2x2_0_1_load_1 [1/2] 2.39ns
.preheader23:17  %J2x2_0_1_load_1 = load float* %J2x2_0_1_addr_2, align 4

ST_192: J2x2_1_0_load_1 [1/2] 2.39ns
.preheader23:19  %J2x2_1_0_load_1 = load float* %J2x2_1_0_addr_2, align 4

ST_192: J2x2_1_1_load_1 [1/2] 2.39ns
.preheader23:21  %J2x2_1_1_load_1 = load float* %J2x2_1_1_addr_2, align 4

ST_192: stg_1637 [1/1] 0.00ns
.preheader23:28  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str1815) nounwind

ST_192: stg_1638 [1/1] 0.00ns
.preheader23:30  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_192: w_in_2 [1/2] 2.71ns
:5  %w_in_2 = load float* %S_r_buffer_0_addr_1, align 4

ST_192: y_in_1 [1/2] 2.71ns
:6  %y_in_1 = load float* %S_r_buffer_1_addr_1, align 4

ST_192: tmp_i23 [4/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_192: tmp_3_i16 [4/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_192: tmp_i24 [4/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_192: tmp_3_i17 [4/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 193>: 5.70ns
ST_193: tmp_i23 [3/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_193: tmp_3_i16 [3/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_193: tmp_i24 [3/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_193: tmp_3_i17 [3/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 194>: 5.70ns
ST_194: tmp_i23 [2/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_194: tmp_3_i16 [2/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_194: tmp_i24 [2/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_194: tmp_3_i17 [2/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 195>: 5.70ns
ST_195: tmp_i23 [1/4] 5.70ns
:7  %tmp_i23 = fmul float %J2x2_0_0_load_1, %w_in_2

ST_195: tmp_3_i16 [1/4] 5.70ns
:8  %tmp_3_i16 = fmul float %J2x2_1_0_load_1, %y_in_1

ST_195: tmp_i24 [1/4] 5.70ns
:10  %tmp_i24 = fmul float %J2x2_0_1_load_1, %w_in_2

ST_195: tmp_3_i17 [1/4] 5.70ns
:11  %tmp_3_i17 = fmul float %J2x2_1_1_load_1, %y_in_1


 <State 196>: 7.26ns
ST_196: w_out_4 [5/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_196: y_out [5/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 197>: 7.26ns
ST_197: w_out_4 [4/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_197: y_out [4/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 198>: 7.26ns
ST_198: w_out_4 [3/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_198: y_out [3/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 199>: 7.26ns
ST_199: w_out_4 [2/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_199: y_out [2/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 200>: 7.26ns
ST_200: w_out_4 [1/5] 7.26ns
:9  %w_out_4 = fadd float %tmp_i23, %tmp_3_i16

ST_200: y_out [1/5] 7.26ns
:12  %y_out = fadd float %tmp_i24, %tmp_3_i17


 <State 201>: 2.71ns
ST_201: stg_1667 [1/1] 2.71ns
:13  store float %w_out_4, float* %S_r_buffer_0_addr_1, align 4

ST_201: stg_1668 [1/1] 2.71ns
:14  store float %y_out, float* %S_r_buffer_1_addr_1, align 4

ST_201: stg_1669 [1/1] 0.00ns
:15  br label %._crit_edge65


 <State 202>: 5.00ns
ST_202: indvar_flatten5 [1/1] 0.00ns
.preheader:0  %indvar_flatten5 = phi i8 [ %indvar_flatten_next5, %._crit_edge68 ], [ 0, %.preheader22 ]

ST_202: proc11 [1/1] 0.00ns
.preheader:1  %proc11 = phi i4 [ %p_v5, %._crit_edge68 ], [ 0, %.preheader22 ]

ST_202: i4 [1/1] 0.00ns
.preheader:4  %i4 = phi i5 [ %i_5, %._crit_edge68 ], [ 0, %.preheader22 ]

ST_202: tmp_57 [1/1] 0.00ns
.preheader:5  %tmp_57 = zext i4 %proc11 to i64

ST_202: diag_1_addr_18 [1/1] 0.00ns
.preheader:6  %diag_1_addr_18 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_57

ST_202: diag_1_load_15 [2/2] 2.39ns
.preheader:7  %diag_1_load_15 = load i32* %diag_1_addr_18, align 4

ST_202: diag_2_addr_18 [1/1] 0.00ns
.preheader:8  %diag_2_addr_18 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_57

ST_202: diag_2_load_15 [2/2] 2.39ns
.preheader:9  %diag_2_load_15 = load i32* %diag_2_addr_18, align 4

ST_202: exitcond_flatten6 [1/1] 2.00ns
.preheader:13  %exitcond_flatten6 = icmp eq i8 %indvar_flatten5, -128

ST_202: indvar_flatten_next5 [1/1] 1.72ns
.preheader:14  %indvar_flatten_next5 = add i8 %indvar_flatten5, 1

ST_202: stg_1680 [1/1] 0.00ns
.preheader:15  br i1 %exitcond_flatten6, label %.preheader34.loopexit, label %.preheader21

ST_202: proc_15 [1/1] 0.80ns
.preheader21:0  %proc_15 = add i4 %proc11, 1

ST_202: exitcond13 [1/1] 1.91ns
.preheader21:3  %exitcond13 = icmp eq i5 %i4, -16

ST_202: i4_mid2 [1/1] 1.37ns
.preheader21:4  %i4_mid2 = select i1 %exitcond13, i5 0, i5 %i4

ST_202: tmp_57_mid1 [1/1] 0.00ns
.preheader21:5  %tmp_57_mid1 = zext i4 %proc_15 to i64

ST_202: p_v5 [1/1] 1.37ns
.preheader21:6  %p_v5 = select i1 %exitcond13, i4 %proc_15, i4 %proc11

ST_202: diag_1_addr_19 [1/1] 0.00ns
.preheader21:9  %diag_1_addr_19 = getelementptr inbounds [8 x i32]* %diag_1, i64 0, i64 %tmp_57_mid1

ST_202: diag_1_load_16 [2/2] 2.39ns
.preheader21:10  %diag_1_load_16 = load i32* %diag_1_addr_19, align 4

ST_202: diag_2_addr_19 [1/1] 0.00ns
.preheader21:11  %diag_2_addr_19 = getelementptr inbounds [8 x i32]* %diag_2, i64 0, i64 %tmp_57_mid1

ST_202: diag_2_load_16 [2/2] 2.39ns
.preheader21:12  %diag_2_load_16 = load i32* %diag_2_addr_19, align 4

ST_202: i_5 [1/1] 1.72ns
._crit_edge68:0  %i_5 = add i5 %i4_mid2, 1

ST_202: stg_1691 [1/1] 0.00ns
._crit_edge68:1  br label %.preheader


 <State 203>: 7.65ns
ST_203: top_left_16 [1/1] 0.00ns
.preheader:2  %top_left_16 = phi i32 [ %idx2_idx1_i510_top_left_s, %._crit_edge68 ], [ %top_left_14, %.preheader22 ]

ST_203: bottom_right_16 [1/1] 0.00ns
.preheader:3  %bottom_right_16 = phi i32 [ %bottom_right_write_assign_i5, %._crit_edge68 ], [ %bottom_right_14, %.preheader22 ]

ST_203: diag_1_load_15 [1/2] 2.39ns
.preheader:7  %diag_1_load_15 = load i32* %diag_1_addr_18, align 4

ST_203: diag_2_load_15 [1/2] 2.39ns
.preheader:9  %diag_2_load_15 = load i32* %diag_2_addr_18, align 4

ST_203: tmp_i22 [1/1] 2.52ns
.preheader:10  %tmp_i22 = icmp sgt i32 %diag_1_load_15, %diag_2_load_15

ST_203: top_left_17 [1/1] 1.37ns
.preheader:11  %top_left_17 = select i1 %tmp_i22, i32 %diag_2_load_15, i32 %diag_1_load_15

ST_203: bottom_right_17 [1/1] 1.37ns
.preheader:12  %bottom_right_17 = select i1 %tmp_i22, i32 %diag_1_load_15, i32 %diag_2_load_15

ST_203: diag_1_load_16 [1/2] 2.39ns
.preheader21:10  %diag_1_load_16 = load i32* %diag_1_addr_19, align 4

ST_203: diag_2_load_16 [1/2] 2.39ns
.preheader21:12  %diag_2_load_16 = load i32* %diag_2_addr_19, align 4

ST_203: tmp_i22_mid1 [1/1] 2.52ns
.preheader21:13  %tmp_i22_mid1 = icmp sgt i32 %diag_1_load_16, %diag_2_load_16

ST_203: top_left_24_mid1 [1/1] 0.00ns (grouped into LUT with out node top_left_24_mid2)
.preheader21:14  %top_left_24_mid1 = select i1 %tmp_i22_mid1, i32 %diag_2_load_16, i32 %diag_1_load_16

ST_203: top_left_24_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader21:15  %top_left_24_mid2 = select i1 %exitcond13, i32 %top_left_24_mid1, i32 %top_left_17

ST_203: bottom_right_30_mid1 [1/1] 0.00ns (grouped into LUT with out node bottom_right_30_mid2)
.preheader21:16  %bottom_right_30_mid1 = select i1 %tmp_i22_mid1, i32 %diag_1_load_16, i32 %diag_2_load_16

ST_203: bottom_right_30_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader21:17  %bottom_right_30_mid2 = select i1 %exitcond13, i32 %bottom_right_30_mid1, i32 %bottom_right_17


 <State 204>: 7.17ns
ST_204: stg_1706 [1/1] 0.00ns
.preheader21:1  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @L_svd_wb_off_c_str)

ST_204: empty_29 [1/1] 0.00ns
.preheader21:2  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)

ST_204: tmp_102 [1/1] 0.00ns
.preheader21:7  %tmp_102 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %p_v5, i4 0)

ST_204: tmp_130_cast [1/1] 0.00ns
.preheader21:8  %tmp_130_cast = zext i8 %tmp_102 to i9

ST_204: i4_cast1 [1/1] 0.00ns
.preheader21:18  %i4_cast1 = zext i5 %i4_mid2 to i32

ST_204: stg_1711 [1/1] 0.00ns
.preheader21:19  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1816) nounwind

ST_204: tmp_85 [1/1] 0.00ns
.preheader21:20  %tmp_85 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1816)

ST_204: stg_1713 [1/1] 0.00ns
.preheader21:21  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_204: tmp_66 [1/1] 1.91ns
.preheader21:22  %tmp_66 = icmp eq i5 %i4_mid2, 0

ST_204: idx2_idx1_i510_top_left_s [1/1] 1.37ns (out node of the LUT)
.preheader21:23  %idx2_idx1_i510_top_left_s = select i1 %tmp_66, i32 %top_left_24_mid2, i32 %top_left_16

ST_204: bottom_right_write_assign_i5 [1/1] 1.37ns (out node of the LUT)
.preheader21:24  %bottom_right_write_assign_i5 = select i1 %tmp_66, i32 %bottom_right_30_mid2, i32 %bottom_right_16

ST_204: tmp_71 [1/1] 2.52ns
.preheader21:25  %tmp_71 = icmp eq i32 %idx2_idx1_i510_top_left_s, 16

ST_204: tmp_74 [1/1] 2.52ns
.preheader21:26  %tmp_74 = icmp eq i32 %bottom_right_write_assign_i5, 16

ST_204: or_cond14 [1/1] 1.37ns
.preheader21:27  %or_cond14 = or i1 %tmp_71, %tmp_74

ST_204: stg_1720 [1/1] 0.00ns
.preheader21:28  br i1 %or_cond14, label %._crit_edge68, label %27

ST_204: tmp_80 [1/1] 2.52ns
:0  %tmp_80 = icmp eq i32 %i4_cast1, %bottom_right_write_assign_i5

ST_204: tmp_81 [1/1] 2.52ns
:1  %tmp_81 = icmp eq i32 %i4_cast1, %idx2_idx1_i510_top_left_s

ST_204: or_cond5 [1/1] 1.37ns
:2  %or_cond5 = or i1 %tmp_80, %tmp_81

ST_204: stg_1724 [1/1] 0.00ns
:3  br i1 %or_cond5, label %._crit_edge70, label %28

ST_204: tmp_82_cast [1/1] 0.00ns
:1  %tmp_82_cast = zext i5 %i4_mid2 to i9

ST_204: tmp_109 [1/1] 1.72ns
:2  %tmp_109 = add i9 %tmp_130_cast, %tmp_82_cast

ST_204: tmp_132_cast [1/1] 0.00ns
:3  %tmp_132_cast = zext i9 %tmp_109 to i64

ST_204: S_r_buffer_0_addr_2 [1/1] 0.00ns
:4  %S_r_buffer_0_addr_2 = getelementptr [128 x float]* %S_r_buffer_0, i64 0, i64 %tmp_132_cast

ST_204: S_r_buffer_1_addr_2 [1/1] 0.00ns
:5  %S_r_buffer_1_addr_2 = getelementptr [128 x float]* %S_r_buffer_1, i64 0, i64 %tmp_132_cast

ST_204: S_r_buffer_0_load [2/2] 2.71ns
:6  %S_r_buffer_0_load = load float* %S_r_buffer_0_addr_2, align 4

ST_204: tmp_110 [1/1] 0.00ns
:7  %tmp_110 = trunc i32 %idx2_idx1_i510_top_left_s to i6

ST_204: S_r_buffer_1_load [2/2] 2.71ns
:13  %S_r_buffer_1_load = load float* %S_r_buffer_1_addr_2, align 4

ST_204: tmp_112 [1/1] 0.00ns
:14  %tmp_112 = trunc i32 %bottom_right_write_assign_i5 to i6

ST_204: empty_28 [1/1] 0.00ns
._crit_edge70:0  %empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1816, i32 %tmp_85)

ST_204: stg_1735 [1/1] 0.00ns
._crit_edge70:1  br label %._crit_edge68


 <State 205>: 5.42ns
ST_205: tmp_82_cast1 [1/1] 0.00ns
:0  %tmp_82_cast1 = zext i5 %i4_mid2 to i10

ST_205: S_r_buffer_0_load [1/2] 2.71ns
:6  %S_r_buffer_0_load = load float* %S_r_buffer_0_addr_2, align 4

ST_205: tmp_134_cast [1/1] 0.00ns
:8  %tmp_134_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_110, i4 0)

ST_205: tmp_111 [1/1] 1.84ns
:9  %tmp_111 = add i10 %tmp_134_cast, %tmp_82_cast1

ST_205: tmp_135_cast [1/1] 0.00ns
:10  %tmp_135_cast = sext i10 %tmp_111 to i64

ST_205: S_addr_15 [1/1] 0.00ns
:11  %S_addr_15 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_135_cast

ST_205: stg_1742 [1/1] 2.71ns
:12  store float %S_r_buffer_0_load, float* %S_addr_15, align 4

ST_205: S_r_buffer_1_load [1/2] 2.71ns
:13  %S_r_buffer_1_load = load float* %S_r_buffer_1_addr_2, align 4

ST_205: tmp_137_cast [1/1] 0.00ns
:15  %tmp_137_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %tmp_112, i4 0)

ST_205: tmp_113 [1/1] 1.84ns
:16  %tmp_113 = add i10 %tmp_137_cast, %tmp_82_cast1


 <State 206>: 2.71ns
ST_206: tmp_138_cast [1/1] 0.00ns
:17  %tmp_138_cast = sext i10 %tmp_113 to i64

ST_206: S_addr_16 [1/1] 0.00ns
:18  %S_addr_16 = getelementptr [256 x float]* %S, i64 0, i64 %tmp_138_cast

ST_206: stg_1748 [1/1] 2.71ns
:19  store float %S_r_buffer_1_load, float* %S_addr_16, align 4

ST_206: stg_1749 [1/1] 0.00ns
:20  br label %._crit_edge70


 <State 207>: 0.00ns
ST_207: stg_1750 [1/1] 0.00ns
.preheader34.loopexit:0  store i32 %top_left_16, i32* %top_left

ST_207: stg_1751 [1/1] 0.00ns
.preheader34.loopexit:1  store i32 %bottom_right_16, i32* %bottom_right

ST_207: stg_1752 [1/1] 0.00ns
.preheader34.loopexit:2  br label %.preheader34



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173
	State 174
	State 175
	State 176
	State 177
	State 178
	State 179
	State 180
	State 181
	State 182
	State 183
	State 184
	State 185
	State 186
	State 187
	State 188
	State 189
	State 190
	State 191
	State 192
	State 193
	State 194
	State 195
	State 196
	State 197
	State 198
	State 199
	State 200
	State 201
	State 202
	State 203
	State 204
	State 205
	State 206
	State 207


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
