

================================================================
== Vivado HLS Report for 'dut_calc_svd'
================================================================
* Date:           Sun Dec  4 03:43:11 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        pca.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.44|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  7975|  7975|  7975|  7975|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |                 |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |- svd_calc_diag  |  7973|  7973|       154|         20|          1|   392|    yes   |
        +-----------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 20, depth = 154


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 156
* Pipeline: 1
  Pipeline-0: II = 20, D = 154, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	156  / (exitcond)
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	2  / true
156 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_in_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_1: empty_14 [1/1] 0.00ns
:1  %empty_14 = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_out_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_1: stg_159 [1/1] 1.57ns
:2  br label %1


 <State 2>: 2.03ns
ST_2: proc [1/1] 0.00ns
:0  %proc = phi i9 [ 0, %0 ], [ %proc_1, %_ifconv ]

ST_2: exitcond [1/1] 2.03ns
:1  %exitcond = icmp eq i9 %proc, -120

ST_2: proc_1 [1/1] 1.84ns
:2  %proc_1 = add i9 %proc, 1

ST_2: stg_163 [1/1] 0.00ns
:3  br i1 %exitcond, label %2, label %_ifconv


 <State 3>: 4.38ns
ST_3: tmp_59 [1/1] 4.38ns
_ifconv:4  %tmp_59 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 4>: 4.38ns
ST_4: tmp_60 [1/1] 4.38ns
_ifconv:5  %tmp_60 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 5>: 4.38ns
ST_5: tmp_61 [1/1] 4.38ns
_ifconv:6  %tmp_61 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 6>: 7.26ns
ST_6: tmp_62 [1/1] 4.38ns
_ifconv:7  %tmp_62 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)

ST_6: u2 [5/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_61, %tmp_60

ST_6: u2_1 [5/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_61, %tmp_60


 <State 7>: 7.26ns
ST_7: u1 [5/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_62, %tmp_59

ST_7: u2 [4/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_61, %tmp_60

ST_7: u1_1 [5/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_62, %tmp_59

ST_7: u2_1 [4/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_61, %tmp_60


 <State 8>: 7.26ns
ST_8: u1 [4/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_62, %tmp_59

ST_8: u2 [3/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_61, %tmp_60

ST_8: u1_1 [4/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_62, %tmp_59

ST_8: u2_1 [3/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_61, %tmp_60


 <State 9>: 7.26ns
ST_9: u1 [3/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_62, %tmp_59

ST_9: u2 [2/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_61, %tmp_60

ST_9: u1_1 [3/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_62, %tmp_59

ST_9: u2_1 [2/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_61, %tmp_60


 <State 10>: 7.26ns
ST_10: u1 [2/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_62, %tmp_59

ST_10: u2 [1/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_61, %tmp_60

ST_10: u1_1 [2/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_62, %tmp_59

ST_10: u2_1 [1/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_61, %tmp_60


 <State 11>: 7.26ns
ST_11: u1 [1/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_62, %tmp_59

ST_11: u1_1 [1/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_62, %tmp_59


 <State 12>: 6.16ns
ST_12: call_ret [85/85] 6.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)


 <State 13>: 7.65ns
ST_13: call_ret [84/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_13: call_ret1 [85/85] 6.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 14>: 7.65ns
ST_14: call_ret [83/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_14: call_ret1 [84/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 15>: 7.65ns
ST_15: call_ret [82/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_15: call_ret1 [83/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_15: tmp [1/1] 4.38ns
_ifconv:87  %tmp = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 16>: 7.65ns
ST_16: call_ret [81/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_16: call_ret1 [82/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_16: tmp_63 [1/1] 4.38ns
_ifconv:88  %tmp_63 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 17>: 7.65ns
ST_17: call_ret [80/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_17: call_ret1 [81/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_17: tmp_64 [1/1] 4.38ns
_ifconv:89  %tmp_64 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 18>: 7.65ns
ST_18: call_ret [79/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_18: call_ret1 [80/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_18: tmp_65 [1/1] 4.38ns
_ifconv:90  %tmp_65 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 19>: 7.65ns
ST_19: call_ret [78/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_19: call_ret1 [79/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_19: tmp_66 [1/1] 4.38ns
_ifconv:91  %tmp_66 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 20>: 7.65ns
ST_20: call_ret [77/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_20: call_ret1 [78/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_20: tmp_67 [1/1] 4.38ns
_ifconv:92  %tmp_67 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 21>: 7.65ns
ST_21: call_ret [76/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_21: call_ret1 [77/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_21: tmp_68 [1/1] 4.38ns
_ifconv:93  %tmp_68 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 22>: 7.65ns
ST_22: call_ret [75/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_22: call_ret1 [76/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_22: tmp_69 [1/1] 4.38ns
_ifconv:94  %tmp_69 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 23>: 7.65ns
ST_23: call_ret [74/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_23: call_ret1 [75/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 24>: 7.65ns
ST_24: call_ret [73/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_24: call_ret1 [74/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 25>: 7.65ns
ST_25: call_ret [72/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_25: call_ret1 [73/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 26>: 7.65ns
ST_26: call_ret [71/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_26: call_ret1 [72/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 27>: 7.65ns
ST_27: call_ret [70/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_27: call_ret1 [71/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 28>: 7.65ns
ST_28: call_ret [69/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_28: call_ret1 [70/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 29>: 7.65ns
ST_29: call_ret [68/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_29: call_ret1 [69/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 30>: 7.65ns
ST_30: call_ret [67/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_30: call_ret1 [68/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 31>: 7.65ns
ST_31: call_ret [66/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_31: call_ret1 [67/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 32>: 7.65ns
ST_32: call_ret [65/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_32: call_ret1 [66/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 33>: 7.65ns
ST_33: call_ret [64/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_33: call_ret1 [65/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 34>: 7.65ns
ST_34: call_ret [63/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_34: call_ret1 [64/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 35>: 7.65ns
ST_35: call_ret [62/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_35: call_ret1 [63/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 36>: 7.65ns
ST_36: call_ret [61/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_36: call_ret1 [62/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 37>: 7.65ns
ST_37: call_ret [60/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_37: call_ret1 [61/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 38>: 7.65ns
ST_38: call_ret [59/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_38: call_ret1 [60/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 39>: 7.65ns
ST_39: call_ret [58/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_39: call_ret1 [59/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 40>: 7.65ns
ST_40: call_ret [57/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_40: call_ret1 [58/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 41>: 7.65ns
ST_41: call_ret [56/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_41: call_ret1 [57/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 42>: 7.65ns
ST_42: call_ret [55/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_42: call_ret1 [56/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 43>: 7.65ns
ST_43: call_ret [54/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_43: call_ret1 [55/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 44>: 7.65ns
ST_44: call_ret [53/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_44: call_ret1 [54/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 45>: 7.65ns
ST_45: call_ret [52/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_45: call_ret1 [53/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 46>: 7.65ns
ST_46: call_ret [51/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_46: call_ret1 [52/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 47>: 7.65ns
ST_47: call_ret [50/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_47: call_ret1 [51/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 48>: 7.65ns
ST_48: call_ret [49/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_48: call_ret1 [50/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 49>: 7.65ns
ST_49: call_ret [48/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_49: call_ret1 [49/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 50>: 7.65ns
ST_50: call_ret [47/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_50: call_ret1 [48/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 51>: 7.65ns
ST_51: call_ret [46/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_51: call_ret1 [47/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 52>: 7.65ns
ST_52: call_ret [45/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_52: call_ret1 [46/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 53>: 7.65ns
ST_53: call_ret [44/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_53: call_ret1 [45/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 54>: 7.65ns
ST_54: call_ret [43/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_54: call_ret1 [44/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 55>: 7.65ns
ST_55: call_ret [42/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_55: call_ret1 [43/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 56>: 7.65ns
ST_56: call_ret [41/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_56: call_ret1 [42/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 57>: 7.65ns
ST_57: call_ret [40/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_57: call_ret1 [41/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 58>: 7.65ns
ST_58: call_ret [39/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_58: call_ret1 [40/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 59>: 7.65ns
ST_59: call_ret [38/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_59: call_ret1 [39/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 60>: 7.65ns
ST_60: call_ret [37/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_60: call_ret1 [38/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 61>: 7.65ns
ST_61: call_ret [36/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_61: call_ret1 [37/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 62>: 7.65ns
ST_62: call_ret [35/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_62: call_ret1 [36/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 63>: 7.65ns
ST_63: call_ret [34/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_63: call_ret1 [35/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 64>: 7.65ns
ST_64: call_ret [33/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_64: call_ret1 [34/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 65>: 7.65ns
ST_65: call_ret [32/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_65: call_ret1 [33/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 66>: 7.65ns
ST_66: call_ret [31/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_66: call_ret1 [32/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 67>: 7.65ns
ST_67: call_ret [30/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_67: call_ret1 [31/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 68>: 7.65ns
ST_68: call_ret [29/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_68: call_ret1 [30/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 69>: 7.65ns
ST_69: call_ret [28/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_69: call_ret1 [29/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 70>: 7.65ns
ST_70: call_ret [27/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_70: call_ret1 [28/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 71>: 7.65ns
ST_71: call_ret [26/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_71: call_ret1 [27/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 72>: 7.65ns
ST_72: call_ret [25/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_72: call_ret1 [26/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 73>: 7.65ns
ST_73: call_ret [24/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_73: call_ret1 [25/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 74>: 7.65ns
ST_74: call_ret [23/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_74: call_ret1 [24/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 75>: 7.65ns
ST_75: call_ret [22/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_75: call_ret1 [23/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 76>: 7.65ns
ST_76: call_ret [21/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_76: call_ret1 [22/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 77>: 7.65ns
ST_77: call_ret [20/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_77: call_ret1 [21/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 78>: 7.65ns
ST_78: call_ret [19/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_78: call_ret1 [20/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 79>: 7.65ns
ST_79: call_ret [18/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_79: call_ret1 [19/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 80>: 7.65ns
ST_80: call_ret [17/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_80: call_ret1 [18/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 81>: 7.65ns
ST_81: call_ret [16/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_81: call_ret1 [17/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 82>: 7.65ns
ST_82: call_ret [15/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_82: call_ret1 [16/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 83>: 7.65ns
ST_83: call_ret [14/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_83: call_ret1 [15/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 84>: 7.65ns
ST_84: call_ret [13/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_84: call_ret1 [14/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 85>: 7.65ns
ST_85: call_ret [12/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_85: call_ret1 [13/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 86>: 7.65ns
ST_86: call_ret [11/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_86: call_ret1 [12/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 87>: 7.65ns
ST_87: call_ret [10/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_87: call_ret1 [11/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 88>: 7.65ns
ST_88: call_ret [9/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_88: call_ret1 [10/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 89>: 7.65ns
ST_89: call_ret [8/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_89: call_ret1 [9/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 90>: 7.65ns
ST_90: call_ret [7/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_90: call_ret1 [8/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 91>: 7.65ns
ST_91: call_ret [6/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_91: call_ret1 [7/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 92>: 7.65ns
ST_92: call_ret [5/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_92: call_ret1 [6/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 93>: 7.65ns
ST_93: call_ret [4/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_93: call_ret1 [5/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 94>: 7.65ns
ST_94: call_ret [3/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_94: call_ret1 [4/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 95>: 7.65ns
ST_95: call_ret [2/85] 7.65ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_95: call_ret1 [3/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 96>: 7.65ns
ST_96: call_ret [1/85] 7.27ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_96: cosA_half [1/1] 0.00ns
_ifconv:11  %cosA_half = extractvalue { float, float } %call_ret, 0

ST_96: sinA_half [1/1] 0.00ns
_ifconv:12  %sinA_half = extractvalue { float, float } %call_ret, 1

ST_96: call_ret1 [2/85] 7.65ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 97>: 7.27ns
ST_97: call_ret1 [1/85] 7.27ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_97: cosB_half [1/1] 0.00ns
_ifconv:16  %cosB_half = extractvalue { float, float } %call_ret1, 0

ST_97: sinB_half [1/1] 0.00ns
_ifconv:17  %sinB_half = extractvalue { float, float } %call_ret1, 1


 <State 98>: 5.70ns
ST_98: tmp_i [4/4] 5.70ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_98: tmp_i6 [4/4] 5.70ns
_ifconv:24  %tmp_i6 = fmul float %sinA_half, %cosB_half


 <State 99>: 7.07ns
ST_99: tmp_i [3/4] 5.70ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_99: tmp_i6 [3/4] 5.70ns
_ifconv:24  %tmp_i6 = fmul float %sinA_half, %cosB_half

ST_99: tmp_4_to_int [1/1] 0.00ns
_ifconv:27  %tmp_4_to_int = bitcast float %sinA_half to i32

ST_99: tmp_4_neg [1/1] 1.37ns
_ifconv:28  %tmp_4_neg = xor i32 %tmp_4_to_int, -2147483648

ST_99: a2_assign_3 [1/1] 0.00ns
_ifconv:29  %a2_assign_3 = bitcast i32 %tmp_4_neg to float

ST_99: tmp_3_i7 [4/4] 5.70ns
_ifconv:30  %tmp_3_i7 = fmul float %a2_assign_3, %sinB_half

ST_99: tmp_3_i8 [4/4] 5.70ns
_ifconv:32  %tmp_3_i8 = fmul float %cosA_half, %sinB_half


 <State 100>: 7.07ns
ST_100: tmp_i [2/4] 5.70ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_100: tmp_3_i [4/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_100: tmp_to_int [1/1] 0.00ns
_ifconv:21  %tmp_to_int = bitcast float %cosA_half to i32

ST_100: tmp_neg [1/1] 1.37ns
_ifconv:22  %tmp_neg = xor i32 %tmp_to_int, -2147483648

ST_100: a2_assign [1/1] 0.00ns
_ifconv:23  %a2_assign = bitcast i32 %tmp_neg to float

ST_100: tmp_i6 [2/4] 5.70ns
_ifconv:24  %tmp_i6 = fmul float %sinA_half, %cosB_half

ST_100: tmp_3_i6 [4/4] 5.70ns
_ifconv:25  %tmp_3_i6 = fmul float %a2_assign, %sinB_half

ST_100: tmp_3_i7 [3/4] 5.70ns
_ifconv:30  %tmp_3_i7 = fmul float %a2_assign_3, %sinB_half

ST_100: tmp_3_i8 [3/4] 5.70ns
_ifconv:32  %tmp_3_i8 = fmul float %cosA_half, %sinB_half


 <State 101>: 5.70ns
ST_101: tmp_i [1/4] 5.70ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_101: tmp_3_i [3/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_101: tmp_i6 [1/4] 5.70ns
_ifconv:24  %tmp_i6 = fmul float %sinA_half, %cosB_half

ST_101: tmp_3_i6 [3/4] 5.70ns
_ifconv:25  %tmp_3_i6 = fmul float %a2_assign, %sinB_half

ST_101: tmp_3_i7 [2/4] 5.70ns
_ifconv:30  %tmp_3_i7 = fmul float %a2_assign_3, %sinB_half

ST_101: tmp_3_i8 [2/4] 5.70ns
_ifconv:32  %tmp_3_i8 = fmul float %cosA_half, %sinB_half


 <State 102>: 5.70ns
ST_102: tmp_3_i [2/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_102: tmp_3_i6 [2/4] 5.70ns
_ifconv:25  %tmp_3_i6 = fmul float %a2_assign, %sinB_half

ST_102: tmp_3_i7 [1/4] 5.70ns
_ifconv:30  %tmp_3_i7 = fmul float %a2_assign_3, %sinB_half

ST_102: tmp_3_i8 [1/4] 5.70ns
_ifconv:32  %tmp_3_i8 = fmul float %cosA_half, %sinB_half


 <State 103>: 7.26ns
ST_103: tmp_3_i [1/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_103: tmp_3_i6 [1/4] 5.70ns
_ifconv:25  %tmp_3_i6 = fmul float %a2_assign, %sinB_half

ST_103: vz_int_1 [5/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i7

ST_103: vy_int_1 [5/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i6, %tmp_3_i8


 <State 104>: 7.26ns
ST_104: tmp_36 [5/5] 7.26ns
_ifconv:20  %tmp_36 = fadd float %tmp_i, %tmp_3_i

ST_104: tmp_37 [5/5] 7.26ns
_ifconv:26  %tmp_37 = fadd float %tmp_i6, %tmp_3_i6

ST_104: vz_int_1 [4/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i7

ST_104: vy_int_1 [4/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i6, %tmp_3_i8


 <State 105>: 7.26ns
ST_105: tmp_36 [4/5] 7.26ns
_ifconv:20  %tmp_36 = fadd float %tmp_i, %tmp_3_i

ST_105: tmp_37 [4/5] 7.26ns
_ifconv:26  %tmp_37 = fadd float %tmp_i6, %tmp_3_i6

ST_105: vz_int_1 [3/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i7

ST_105: vy_int_1 [3/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i6, %tmp_3_i8


 <State 106>: 7.26ns
ST_106: tmp_36 [3/5] 7.26ns
_ifconv:20  %tmp_36 = fadd float %tmp_i, %tmp_3_i

ST_106: tmp_37 [3/5] 7.26ns
_ifconv:26  %tmp_37 = fadd float %tmp_i6, %tmp_3_i6

ST_106: vz_int_1 [2/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i7

ST_106: vy_int_1 [2/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i6, %tmp_3_i8


 <State 107>: 7.26ns
ST_107: tmp_36 [2/5] 7.26ns
_ifconv:20  %tmp_36 = fadd float %tmp_i, %tmp_3_i

ST_107: tmp_37 [2/5] 7.26ns
_ifconv:26  %tmp_37 = fadd float %tmp_i6, %tmp_3_i6

ST_107: vz_int_1 [1/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i7

ST_107: vy_int_1 [1/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i6, %tmp_3_i8


 <State 108>: 7.26ns
ST_108: tmp_36 [1/5] 7.26ns
_ifconv:20  %tmp_36 = fadd float %tmp_i, %tmp_3_i

ST_108: tmp_37 [1/5] 7.26ns
_ifconv:26  %tmp_37 = fadd float %tmp_i6, %tmp_3_i6

ST_108: vy_int_to_int [1/1] 0.00ns
_ifconv:37  %vy_int_to_int = bitcast float %vy_int_1 to i32

ST_108: vy_int_neg [1/1] 1.37ns
_ifconv:38  %vy_int_neg = xor i32 %vy_int_to_int, -2147483648

ST_108: vy_int [1/1] 0.00ns
_ifconv:39  %vy_int = bitcast i32 %vy_int_neg to float

ST_108: tmp_i7 [4/4] 5.70ns
_ifconv:40  %tmp_i7 = fmul float %tmp_59, %vz_int_1

ST_108: tmp_3_i9 [4/4] 5.70ns
_ifconv:41  %tmp_3_i9 = fmul float %tmp_60, %vy_int


 <State 109>: 5.70ns
ST_109: tmp_i7 [3/4] 5.70ns
_ifconv:40  %tmp_i7 = fmul float %tmp_59, %vz_int_1

ST_109: tmp_3_i9 [3/4] 5.70ns
_ifconv:41  %tmp_3_i9 = fmul float %tmp_60, %vy_int

ST_109: tmp_i8 [4/4] 5.70ns
_ifconv:43  %tmp_i8 = fmul float %tmp_61, %vz_int_1

ST_109: tmp_3_i1 [4/4] 5.70ns
_ifconv:44  %tmp_3_i1 = fmul float %tmp_62, %vy_int


 <State 110>: 5.70ns
ST_110: tmp_i7 [2/4] 5.70ns
_ifconv:40  %tmp_i7 = fmul float %tmp_59, %vz_int_1

ST_110: tmp_3_i9 [2/4] 5.70ns
_ifconv:41  %tmp_3_i9 = fmul float %tmp_60, %vy_int

ST_110: tmp_i8 [3/4] 5.70ns
_ifconv:43  %tmp_i8 = fmul float %tmp_61, %vz_int_1

ST_110: tmp_3_i1 [3/4] 5.70ns
_ifconv:44  %tmp_3_i1 = fmul float %tmp_62, %vy_int

ST_110: tmp_i1 [4/4] 5.70ns
_ifconv:49  %tmp_i1 = fmul float %tmp_59, %vy_int_1

ST_110: tmp_3_i3 [4/4] 5.70ns
_ifconv:50  %tmp_3_i3 = fmul float %tmp_60, %vz_int_1


 <State 111>: 5.70ns
ST_111: tmp_i7 [1/4] 5.70ns
_ifconv:40  %tmp_i7 = fmul float %tmp_59, %vz_int_1

ST_111: tmp_3_i9 [1/4] 5.70ns
_ifconv:41  %tmp_3_i9 = fmul float %tmp_60, %vy_int

ST_111: tmp_i8 [2/4] 5.70ns
_ifconv:43  %tmp_i8 = fmul float %tmp_61, %vz_int_1

ST_111: tmp_3_i1 [2/4] 5.70ns
_ifconv:44  %tmp_3_i1 = fmul float %tmp_62, %vy_int

ST_111: tmp_i1 [3/4] 5.70ns
_ifconv:49  %tmp_i1 = fmul float %tmp_59, %vy_int_1

ST_111: tmp_3_i3 [3/4] 5.70ns
_ifconv:50  %tmp_3_i3 = fmul float %tmp_60, %vz_int_1

ST_111: tmp_i2 [4/4] 5.70ns
_ifconv:52  %tmp_i2 = fmul float %tmp_61, %vy_int_1

ST_111: tmp_3_i4 [4/4] 5.70ns
_ifconv:53  %tmp_3_i4 = fmul float %tmp_62, %vz_int_1


 <State 112>: 7.26ns
ST_112: uy_int_to_int [1/1] 0.00ns
_ifconv:34  %uy_int_to_int = bitcast float %tmp_37 to i32

ST_112: uy_int_neg [1/1] 1.37ns
_ifconv:35  %uy_int_neg = xor i32 %uy_int_to_int, -2147483648

ST_112: uy_int [1/1] 0.00ns
_ifconv:36  %uy_int = bitcast i32 %uy_int_neg to float

ST_112: w_out1 [5/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_112: tmp_i8 [1/4] 5.70ns
_ifconv:43  %tmp_i8 = fmul float %tmp_61, %vz_int_1

ST_112: tmp_3_i1 [1/4] 5.70ns
_ifconv:44  %tmp_3_i1 = fmul float %tmp_62, %vy_int

ST_112: tmp_i1 [2/4] 5.70ns
_ifconv:49  %tmp_i1 = fmul float %tmp_59, %vy_int_1

ST_112: tmp_3_i3 [2/4] 5.70ns
_ifconv:50  %tmp_3_i3 = fmul float %tmp_60, %vz_int_1

ST_112: tmp_i2 [3/4] 5.70ns
_ifconv:52  %tmp_i2 = fmul float %tmp_61, %vy_int_1

ST_112: tmp_3_i4 [3/4] 5.70ns
_ifconv:53  %tmp_3_i4 = fmul float %tmp_62, %vz_int_1

ST_112: tmp_i_i [4/4] 5.70ns
_ifconv:95  %tmp_i_i = fmul float %tmp, %tmp_36

ST_112: tmp_3_i_i [4/4] 5.70ns
_ifconv:96  %tmp_3_i_i = fmul float %tmp_63, %uy_int


 <State 113>: 7.26ns
ST_113: w_out1 [4/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_113: w_out2 [5/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i8, %tmp_3_i1

ST_113: tmp_i1 [1/4] 5.70ns
_ifconv:49  %tmp_i1 = fmul float %tmp_59, %vy_int_1

ST_113: tmp_3_i3 [1/4] 5.70ns
_ifconv:50  %tmp_3_i3 = fmul float %tmp_60, %vz_int_1

ST_113: tmp_i2 [2/4] 5.70ns
_ifconv:52  %tmp_i2 = fmul float %tmp_61, %vy_int_1

ST_113: tmp_3_i4 [2/4] 5.70ns
_ifconv:53  %tmp_3_i4 = fmul float %tmp_62, %vz_int_1

ST_113: tmp_i_i [3/4] 5.70ns
_ifconv:95  %tmp_i_i = fmul float %tmp, %tmp_36

ST_113: tmp_3_i_i [3/4] 5.70ns
_ifconv:96  %tmp_3_i_i = fmul float %tmp_63, %uy_int

ST_113: tmp_i1_i [4/4] 5.70ns
_ifconv:98  %tmp_i1_i = fmul float %tmp, %tmp_37

ST_113: tmp_3_i2_i [4/4] 5.70ns
_ifconv:99  %tmp_3_i2_i = fmul float %tmp_63, %tmp_36


 <State 114>: 7.26ns
ST_114: w_out1 [3/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_114: w_out2 [4/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i8, %tmp_3_i1

ST_114: z_out1 [5/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i1, %tmp_3_i3

ST_114: tmp_i2 [1/4] 5.70ns
_ifconv:52  %tmp_i2 = fmul float %tmp_61, %vy_int_1

ST_114: tmp_3_i4 [1/4] 5.70ns
_ifconv:53  %tmp_3_i4 = fmul float %tmp_62, %vz_int_1

ST_114: tmp_i_i [2/4] 5.70ns
_ifconv:95  %tmp_i_i = fmul float %tmp, %tmp_36

ST_114: tmp_3_i_i [2/4] 5.70ns
_ifconv:96  %tmp_3_i_i = fmul float %tmp_63, %uy_int

ST_114: tmp_i1_i [3/4] 5.70ns
_ifconv:98  %tmp_i1_i = fmul float %tmp, %tmp_37

ST_114: tmp_3_i2_i [3/4] 5.70ns
_ifconv:99  %tmp_3_i2_i = fmul float %tmp_63, %tmp_36

ST_114: tmp_i4_i [4/4] 5.70ns
_ifconv:101  %tmp_i4_i = fmul float %tmp_64, %tmp_36

ST_114: tmp_3_i5_i [4/4] 5.70ns
_ifconv:102  %tmp_3_i5_i = fmul float %tmp_65, %uy_int


 <State 115>: 7.26ns
ST_115: w_out1 [2/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_115: w_out2 [3/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i8, %tmp_3_i1

ST_115: z_out1 [4/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i1, %tmp_3_i3

ST_115: z_out2 [5/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i2, %tmp_3_i4

ST_115: tmp_i_i [1/4] 5.70ns
_ifconv:95  %tmp_i_i = fmul float %tmp, %tmp_36

ST_115: tmp_3_i_i [1/4] 5.70ns
_ifconv:96  %tmp_3_i_i = fmul float %tmp_63, %uy_int

ST_115: tmp_i1_i [2/4] 5.70ns
_ifconv:98  %tmp_i1_i = fmul float %tmp, %tmp_37

ST_115: tmp_3_i2_i [2/4] 5.70ns
_ifconv:99  %tmp_3_i2_i = fmul float %tmp_63, %tmp_36

ST_115: tmp_i4_i [3/4] 5.70ns
_ifconv:101  %tmp_i4_i = fmul float %tmp_64, %tmp_36

ST_115: tmp_3_i5_i [3/4] 5.70ns
_ifconv:102  %tmp_3_i5_i = fmul float %tmp_65, %uy_int

ST_115: tmp_i7_i [4/4] 5.70ns
_ifconv:104  %tmp_i7_i = fmul float %tmp_64, %tmp_37

ST_115: tmp_3_i8_i [4/4] 5.70ns
_ifconv:105  %tmp_3_i8_i = fmul float %tmp_65, %tmp_36


 <State 116>: 7.26ns
ST_116: w_out1 [1/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i7, %tmp_3_i9

ST_116: w_out2 [2/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i8, %tmp_3_i1

ST_116: z_out1 [3/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i1, %tmp_3_i3

ST_116: z_out2 [4/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i2, %tmp_3_i4

ST_116: tmp_51 [5/5] 7.26ns
_ifconv:97  %tmp_51 = fadd float %tmp_i_i, %tmp_3_i_i

ST_116: tmp_i1_i [1/4] 5.70ns
_ifconv:98  %tmp_i1_i = fmul float %tmp, %tmp_37

ST_116: tmp_3_i2_i [1/4] 5.70ns
_ifconv:99  %tmp_3_i2_i = fmul float %tmp_63, %tmp_36

ST_116: tmp_i4_i [2/4] 5.70ns
_ifconv:101  %tmp_i4_i = fmul float %tmp_64, %tmp_36

ST_116: tmp_3_i5_i [2/4] 5.70ns
_ifconv:102  %tmp_3_i5_i = fmul float %tmp_65, %uy_int

ST_116: tmp_i7_i [3/4] 5.70ns
_ifconv:104  %tmp_i7_i = fmul float %tmp_64, %tmp_37

ST_116: tmp_3_i8_i [3/4] 5.70ns
_ifconv:105  %tmp_3_i8_i = fmul float %tmp_65, %tmp_36


 <State 117>: 7.26ns
ST_117: w_out2 [1/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i8, %tmp_3_i1

ST_117: tmp_i9 [4/4] 5.70ns
_ifconv:46  %tmp_i9 = fmul float %tmp_36, %w_out1

ST_117: z_out1 [2/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i1, %tmp_3_i3

ST_117: z_out2 [3/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i2, %tmp_3_i4

ST_117: tmp_51 [4/5] 7.26ns
_ifconv:97  %tmp_51 = fadd float %tmp_i_i, %tmp_3_i_i

ST_117: tmp_52 [5/5] 7.26ns
_ifconv:100  %tmp_52 = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_117: tmp_i4_i [1/4] 5.70ns
_ifconv:101  %tmp_i4_i = fmul float %tmp_64, %tmp_36

ST_117: tmp_3_i5_i [1/4] 5.70ns
_ifconv:102  %tmp_3_i5_i = fmul float %tmp_65, %uy_int

ST_117: tmp_i7_i [2/4] 5.70ns
_ifconv:104  %tmp_i7_i = fmul float %tmp_64, %tmp_37

ST_117: tmp_3_i8_i [2/4] 5.70ns
_ifconv:105  %tmp_3_i8_i = fmul float %tmp_65, %tmp_36


 <State 118>: 7.26ns
ST_118: tmp_i9 [3/4] 5.70ns
_ifconv:46  %tmp_i9 = fmul float %tmp_36, %w_out1

ST_118: z_out1 [1/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i1, %tmp_3_i3

ST_118: z_out2 [2/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i2, %tmp_3_i4

ST_118: tmp_51 [3/5] 7.26ns
_ifconv:97  %tmp_51 = fadd float %tmp_i_i, %tmp_3_i_i

ST_118: tmp_52 [4/5] 7.26ns
_ifconv:100  %tmp_52 = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_118: tmp_53 [5/5] 7.26ns
_ifconv:103  %tmp_53 = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_118: tmp_i7_i [1/4] 5.70ns
_ifconv:104  %tmp_i7_i = fmul float %tmp_64, %tmp_37

ST_118: tmp_3_i8_i [1/4] 5.70ns
_ifconv:105  %tmp_3_i8_i = fmul float %tmp_65, %tmp_36


 <State 119>: 7.26ns
ST_119: tmp_i9 [2/4] 5.70ns
_ifconv:46  %tmp_i9 = fmul float %tmp_36, %w_out1

ST_119: z_out2 [1/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i2, %tmp_3_i4

ST_119: tmp_51 [2/5] 7.26ns
_ifconv:97  %tmp_51 = fadd float %tmp_i_i, %tmp_3_i_i

ST_119: tmp_52 [3/5] 7.26ns
_ifconv:100  %tmp_52 = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_119: tmp_53 [4/5] 7.26ns
_ifconv:103  %tmp_53 = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_119: tmp_54 [5/5] 7.26ns
_ifconv:106  %tmp_54 = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 120>: 7.26ns
ST_120: tmp_i9 [1/4] 5.70ns
_ifconv:46  %tmp_i9 = fmul float %tmp_36, %w_out1

ST_120: tmp_51 [1/5] 7.26ns
_ifconv:97  %tmp_51 = fadd float %tmp_i_i, %tmp_3_i_i

ST_120: tmp_52 [2/5] 7.26ns
_ifconv:100  %tmp_52 = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_120: tmp_53 [3/5] 7.26ns
_ifconv:103  %tmp_53 = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_120: tmp_54 [4/5] 7.26ns
_ifconv:106  %tmp_54 = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 121>: 7.26ns
ST_121: tmp_3_i2 [4/4] 5.70ns
_ifconv:47  %tmp_3_i2 = fmul float %uy_int, %w_out2

ST_121: tmp_i3 [4/4] 5.70ns
_ifconv:55  %tmp_i3 = fmul float %tmp_37, %z_out1

ST_121: tmp_52 [1/5] 7.26ns
_ifconv:100  %tmp_52 = fadd float %tmp_i1_i, %tmp_3_i2_i

ST_121: tmp_53 [2/5] 7.26ns
_ifconv:103  %tmp_53 = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_121: tmp_54 [3/5] 7.26ns
_ifconv:106  %tmp_54 = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 122>: 7.26ns
ST_122: tmp_3_i2 [3/4] 5.70ns
_ifconv:47  %tmp_3_i2 = fmul float %uy_int, %w_out2

ST_122: tmp_i3 [3/4] 5.70ns
_ifconv:55  %tmp_i3 = fmul float %tmp_37, %z_out1

ST_122: tmp_3_i5 [4/4] 5.70ns
_ifconv:56  %tmp_3_i5 = fmul float %tmp_36, %z_out2

ST_122: tmp_53 [1/5] 7.26ns
_ifconv:103  %tmp_53 = fadd float %tmp_i4_i, %tmp_3_i5_i

ST_122: tmp_54 [2/5] 7.26ns
_ifconv:106  %tmp_54 = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 123>: 7.26ns
ST_123: tmp_3_i2 [2/4] 5.70ns
_ifconv:47  %tmp_3_i2 = fmul float %uy_int, %w_out2

ST_123: tmp_i3 [2/4] 5.70ns
_ifconv:55  %tmp_i3 = fmul float %tmp_37, %z_out1

ST_123: tmp_3_i5 [3/4] 5.70ns
_ifconv:56  %tmp_3_i5 = fmul float %tmp_36, %z_out2

ST_123: tmp_54 [1/5] 7.26ns
_ifconv:106  %tmp_54 = fadd float %tmp_i7_i, %tmp_3_i8_i


 <State 124>: 5.70ns
ST_124: tmp_3_i2 [1/4] 5.70ns
_ifconv:47  %tmp_3_i2 = fmul float %uy_int, %w_out2

ST_124: tmp_i3 [1/4] 5.70ns
_ifconv:55  %tmp_i3 = fmul float %tmp_37, %z_out1

ST_124: tmp_3_i5 [2/4] 5.70ns
_ifconv:56  %tmp_3_i5 = fmul float %tmp_36, %z_out2


 <State 125>: 7.26ns
ST_125: w_out_int [5/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i9, %tmp_3_i2

ST_125: tmp_3_i5 [1/4] 5.70ns
_ifconv:56  %tmp_3_i5 = fmul float %tmp_36, %z_out2


 <State 126>: 7.26ns
ST_126: w_out_int [4/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i9, %tmp_3_i2


 <State 127>: 7.26ns
ST_127: w_out_int [3/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i9, %tmp_3_i2


 <State 128>: 7.26ns
ST_128: w_out_int [2/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i9, %tmp_3_i2

ST_128: z_out_int [5/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i3, %tmp_3_i5


 <State 129>: 7.26ns
ST_129: w_out_int [1/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i9, %tmp_3_i2

ST_129: z_out_int [4/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i3, %tmp_3_i5


 <State 130>: 7.26ns
ST_130: z_out_int [3/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i3, %tmp_3_i5


 <State 131>: 7.26ns
ST_131: z_out_int [2/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i3, %tmp_3_i5


 <State 132>: 7.26ns
ST_132: z_out_int [1/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i3, %tmp_3_i5


 <State 133>: 0.00ns

 <State 134>: 0.00ns

 <State 135>: 0.00ns

 <State 136>: 8.44ns
ST_136: p_Val2_s [1/1] 0.00ns
_ifconv:58  %p_Val2_s = bitcast float %w_out_int to i32

ST_136: p_Result_s [1/1] 0.00ns
_ifconv:59  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 31)

ST_136: w_out_1_neg [1/1] 0.00ns (grouped into LUT with out node w_out_3)
_ifconv:60  %w_out_1_neg = xor i32 %p_Val2_s, -2147483648

ST_136: w_out [1/1] 0.00ns (grouped into LUT with out node w_out_3)
_ifconv:61  %w_out = bitcast i32 %w_out_1_neg to float

ST_136: vw_int_to_int [1/1] 0.00ns
_ifconv:62  %vw_int_to_int = bitcast float %vz_int_1 to i32

ST_136: vw_int_neg [1/1] 1.37ns
_ifconv:63  %vw_int_neg = xor i32 %vw_int_to_int, -2147483648

ST_136: vw_int [1/1] 0.00ns
_ifconv:64  %vw_int = bitcast i32 %vw_int_neg to float

ST_136: w_out_3 [1/1] 1.37ns (out node of the LUT)
_ifconv:65  %w_out_3 = select i1 %p_Result_s, float %w_out, float %w_out_int

ST_136: vw_int_3 [1/1] 1.37ns
_ifconv:66  %vw_int_3 = select i1 %p_Result_s, float %vw_int, float %vz_int_1

ST_136: vx_int [1/1] 1.37ns
_ifconv:67  %vx_int = select i1 %p_Result_s, float %vy_int_1, float %vy_int

ST_136: p_Val2_6 [1/1] 0.00ns
_ifconv:68  %p_Val2_6 = bitcast float %z_out_int to i32

ST_136: p_Result_2 [1/1] 0.00ns
_ifconv:69  %p_Result_2 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_6, i32 31)

ST_136: z_out_1_neg [1/1] 0.00ns (grouped into LUT with out node z_out_3)
_ifconv:70  %z_out_1_neg = xor i32 %p_Val2_6, -2147483648

ST_136: z_out [1/1] 0.00ns (grouped into LUT with out node z_out_3)
_ifconv:71  %z_out = bitcast i32 %z_out_1_neg to float

ST_136: z_out_3 [1/1] 1.37ns (out node of the LUT)
_ifconv:72  %z_out_3 = select i1 %p_Result_2, float %z_out, float %z_out_int

ST_136: vy_int_2 [1/1] 1.37ns
_ifconv:73  %vy_int_2 = select i1 %p_Result_2, float %vy_int, float %vy_int_1

ST_136: vz_int [1/1] 1.37ns
_ifconv:74  %vz_int = select i1 %p_Result_2, float %vw_int, float %vz_int_1

ST_136: stg_573 [1/1] 4.38ns
_ifconv:75  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %w_out_3)

ST_136: tmp_i_i1 [4/4] 5.70ns
_ifconv:107  %tmp_i_i1 = fmul float %tmp_66, %vw_int_3

ST_136: tmp_3_i_i1 [4/4] 5.70ns
_ifconv:108  %tmp_3_i_i1 = fmul float %tmp_67, %vx_int


 <State 137>: 5.70ns
ST_137: stg_576 [1/1] 4.38ns
_ifconv:76  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float 0.000000e+00)

ST_137: tmp_i_i1 [3/4] 5.70ns
_ifconv:107  %tmp_i_i1 = fmul float %tmp_66, %vw_int_3

ST_137: tmp_3_i_i1 [3/4] 5.70ns
_ifconv:108  %tmp_3_i_i1 = fmul float %tmp_67, %vx_int

ST_137: tmp_i1_i1 [4/4] 5.70ns
_ifconv:110  %tmp_i1_i1 = fmul float %tmp_66, %vy_int_2


 <State 138>: 5.70ns
ST_138: stg_580 [1/1] 4.38ns
_ifconv:77  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float 0.000000e+00)

ST_138: tmp_i_i1 [2/4] 5.70ns
_ifconv:107  %tmp_i_i1 = fmul float %tmp_66, %vw_int_3

ST_138: tmp_3_i_i1 [2/4] 5.70ns
_ifconv:108  %tmp_3_i_i1 = fmul float %tmp_67, %vx_int

ST_138: tmp_i1_i1 [3/4] 5.70ns
_ifconv:110  %tmp_i1_i1 = fmul float %tmp_66, %vy_int_2


 <State 139>: 5.70ns
ST_139: stg_584 [1/1] 4.38ns
_ifconv:78  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %z_out_3)

ST_139: tmp_i_i1 [1/4] 5.70ns
_ifconv:107  %tmp_i_i1 = fmul float %tmp_66, %vw_int_3

ST_139: tmp_3_i_i1 [1/4] 5.70ns
_ifconv:108  %tmp_3_i_i1 = fmul float %tmp_67, %vx_int

ST_139: tmp_i1_i1 [2/4] 5.70ns
_ifconv:110  %tmp_i1_i1 = fmul float %tmp_66, %vy_int_2


 <State 140>: 7.26ns
ST_140: stg_588 [1/1] 4.38ns
_ifconv:79  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_36)

ST_140: tmp_55 [5/5] 7.26ns
_ifconv:109  %tmp_55 = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_140: tmp_i1_i1 [1/4] 5.70ns
_ifconv:110  %tmp_i1_i1 = fmul float %tmp_66, %vy_int_2


 <State 141>: 7.26ns
ST_141: stg_591 [1/1] 4.38ns
_ifconv:80  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_37)

ST_141: tmp_55 [4/5] 7.26ns
_ifconv:109  %tmp_55 = fadd float %tmp_i_i1, %tmp_3_i_i1


 <State 142>: 7.26ns
ST_142: stg_593 [1/1] 4.38ns
_ifconv:81  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %uy_int)

ST_142: tmp_55 [3/5] 7.26ns
_ifconv:109  %tmp_55 = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_142: tmp_3_i2_i1 [4/4] 5.70ns
_ifconv:111  %tmp_3_i2_i1 = fmul float %tmp_67, %vz_int


 <State 143>: 7.26ns
ST_143: stg_596 [1/1] 4.38ns
_ifconv:82  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_36)

ST_143: tmp_55 [2/5] 7.26ns
_ifconv:109  %tmp_55 = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_143: tmp_3_i2_i1 [3/4] 5.70ns
_ifconv:111  %tmp_3_i2_i1 = fmul float %tmp_67, %vz_int

ST_143: tmp_i4_i1 [4/4] 5.70ns
_ifconv:113  %tmp_i4_i1 = fmul float %tmp_68, %vw_int_3

ST_143: tmp_3_i5_i1 [4/4] 5.70ns
_ifconv:114  %tmp_3_i5_i1 = fmul float %tmp_69, %vx_int


 <State 144>: 7.26ns
ST_144: stg_601 [1/1] 4.38ns
_ifconv:83  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vw_int_3)

ST_144: tmp_55 [1/5] 7.26ns
_ifconv:109  %tmp_55 = fadd float %tmp_i_i1, %tmp_3_i_i1

ST_144: tmp_3_i2_i1 [2/4] 5.70ns
_ifconv:111  %tmp_3_i2_i1 = fmul float %tmp_67, %vz_int

ST_144: tmp_i4_i1 [3/4] 5.70ns
_ifconv:113  %tmp_i4_i1 = fmul float %tmp_68, %vw_int_3

ST_144: tmp_3_i5_i1 [3/4] 5.70ns
_ifconv:114  %tmp_3_i5_i1 = fmul float %tmp_69, %vx_int

ST_144: tmp_i7_i1 [4/4] 5.70ns
_ifconv:116  %tmp_i7_i1 = fmul float %tmp_68, %vy_int_2

ST_144: tmp_3_i8_i1 [4/4] 5.70ns
_ifconv:117  %tmp_3_i8_i1 = fmul float %tmp_69, %vz_int


 <State 145>: 5.70ns
ST_145: stg_608 [1/1] 4.38ns
_ifconv:84  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vy_int_2)

ST_145: tmp_3_i2_i1 [1/4] 5.70ns
_ifconv:111  %tmp_3_i2_i1 = fmul float %tmp_67, %vz_int

ST_145: tmp_i4_i1 [2/4] 5.70ns
_ifconv:113  %tmp_i4_i1 = fmul float %tmp_68, %vw_int_3

ST_145: tmp_3_i5_i1 [2/4] 5.70ns
_ifconv:114  %tmp_3_i5_i1 = fmul float %tmp_69, %vx_int

ST_145: tmp_i7_i1 [3/4] 5.70ns
_ifconv:116  %tmp_i7_i1 = fmul float %tmp_68, %vy_int_2

ST_145: tmp_3_i8_i1 [3/4] 5.70ns
_ifconv:117  %tmp_3_i8_i1 = fmul float %tmp_69, %vz_int


 <State 146>: 5.70ns
ST_146: stg_614 [1/1] 4.38ns
_ifconv:85  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vx_int)

ST_146: tmp_i4_i1 [1/4] 5.70ns
_ifconv:113  %tmp_i4_i1 = fmul float %tmp_68, %vw_int_3

ST_146: tmp_3_i5_i1 [1/4] 5.70ns
_ifconv:114  %tmp_3_i5_i1 = fmul float %tmp_69, %vx_int

ST_146: tmp_i7_i1 [2/4] 5.70ns
_ifconv:116  %tmp_i7_i1 = fmul float %tmp_68, %vy_int_2

ST_146: tmp_3_i8_i1 [2/4] 5.70ns
_ifconv:117  %tmp_3_i8_i1 = fmul float %tmp_69, %vz_int


 <State 147>: 5.70ns
ST_147: stg_619 [1/1] 4.38ns
_ifconv:86  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vz_int)

ST_147: tmp_i7_i1 [1/4] 5.70ns
_ifconv:116  %tmp_i7_i1 = fmul float %tmp_68, %vy_int_2

ST_147: tmp_3_i8_i1 [1/4] 5.70ns
_ifconv:117  %tmp_3_i8_i1 = fmul float %tmp_69, %vz_int


 <State 148>: 7.26ns
ST_148: tmp_56 [5/5] 7.26ns
_ifconv:112  %tmp_56 = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_148: stg_623 [1/1] 4.38ns
_ifconv:119  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_51)


 <State 149>: 7.26ns
ST_149: tmp_56 [4/5] 7.26ns
_ifconv:112  %tmp_56 = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_149: tmp_57 [5/5] 7.26ns
_ifconv:115  %tmp_57 = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_149: tmp_58 [5/5] 7.26ns
_ifconv:118  %tmp_58 = fadd float %tmp_i7_i1, %tmp_3_i8_i1

ST_149: stg_627 [1/1] 4.38ns
_ifconv:120  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_52)


 <State 150>: 7.26ns
ST_150: tmp_56 [3/5] 7.26ns
_ifconv:112  %tmp_56 = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_150: tmp_57 [4/5] 7.26ns
_ifconv:115  %tmp_57 = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_150: tmp_58 [4/5] 7.26ns
_ifconv:118  %tmp_58 = fadd float %tmp_i7_i1, %tmp_3_i8_i1

ST_150: stg_631 [1/1] 4.38ns
_ifconv:121  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_53)


 <State 151>: 7.26ns
ST_151: tmp_56 [2/5] 7.26ns
_ifconv:112  %tmp_56 = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_151: tmp_57 [3/5] 7.26ns
_ifconv:115  %tmp_57 = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_151: tmp_58 [3/5] 7.26ns
_ifconv:118  %tmp_58 = fadd float %tmp_i7_i1, %tmp_3_i8_i1

ST_151: stg_635 [1/1] 4.38ns
_ifconv:122  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_54)


 <State 152>: 7.26ns
ST_152: tmp_56 [1/5] 7.26ns
_ifconv:112  %tmp_56 = fadd float %tmp_i1_i1, %tmp_3_i2_i1

ST_152: tmp_57 [2/5] 7.26ns
_ifconv:115  %tmp_57 = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_152: tmp_58 [2/5] 7.26ns
_ifconv:118  %tmp_58 = fadd float %tmp_i7_i1, %tmp_3_i8_i1

ST_152: stg_639 [1/1] 4.38ns
_ifconv:123  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_55)


 <State 153>: 7.26ns
ST_153: tmp_57 [1/5] 7.26ns
_ifconv:115  %tmp_57 = fadd float %tmp_i4_i1, %tmp_3_i5_i1

ST_153: tmp_58 [1/5] 7.26ns
_ifconv:118  %tmp_58 = fadd float %tmp_i7_i1, %tmp_3_i8_i1

ST_153: stg_642 [1/1] 4.38ns
_ifconv:124  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_56)


 <State 154>: 4.38ns
ST_154: stg_643 [1/1] 4.38ns
_ifconv:125  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_57)


 <State 155>: 4.38ns
ST_155: empty_15 [1/1] 0.00ns
_ifconv:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 392, i64 392, i64 392)

ST_155: stg_645 [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str1808) nounwind

ST_155: tmp_2 [1/1] 0.00ns
_ifconv:2  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str1808)

ST_155: stg_647 [1/1] 0.00ns
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_155: stg_648 [1/1] 4.38ns
_ifconv:126  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_58)

ST_155: empty_16 [1/1] 0.00ns
_ifconv:127  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str1808, i32 %tmp_2)

ST_155: stg_650 [1/1] 0.00ns
_ifconv:128  br label %1


 <State 156>: 0.00ns
ST_156: stg_651 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
