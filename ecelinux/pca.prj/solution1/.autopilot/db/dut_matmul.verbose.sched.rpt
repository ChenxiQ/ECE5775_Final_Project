

================================================================
== Vivado HLS Report for 'dut_matmul'
================================================================
* Date:           Tue Dec  6 06:53:38 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        pca.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.83|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  128009|  128009|  128009|  128009|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |                                   |     Latency     | Iteration|  Initiation Interval  |  Trip |          |
        |             Loop Name             |   min  |   max  |  Latency |  achieved |   target  | Count | Pipelined|
        +-----------------------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |- LOOP_ROW_LOOP_COL_LOOP_DOT_PROD  |  128007|  128007|        13|          5|          1|  25600|    yes   |
        +-----------------------------------+--------+--------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 15
* Pipeline: 1
  Pipeline-0: II = 5, D = 13, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	15  / (exitcond_flatten1)
	3  / (!exitcond_flatten1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	2  / true
15 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: tmp [1/1] 0.00ns
:0  %tmp = alloca float

ST_1: empty [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_in_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str42, [1 x i8]* @p_str43, [1 x i8]* @p_str44, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str45)

ST_1: empty_11 [1/1] 0.00ns
:2  %empty_11 = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_out_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str46, [1 x i8]* @p_str47, [1 x i8]* @p_str48, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str49)

ST_1: A [1/1] 0.00ns
:3  %A = alloca [100 x float], align 16

ST_1: A_addr_1 [1/1] 0.00ns
:4  %A_addr_1 = getelementptr inbounds [100 x float]* %A, i64 0, i64 0

ST_1: stg_21 [1/1] 1.57ns
:5  store float 0.000000e+00, float* %tmp

ST_1: stg_22 [1/1] 1.57ns
:6  br label %1


 <State 2>: 8.51ns
ST_2: indvar_flatten1 [1/1] 0.00ns
:0  %indvar_flatten1 = phi i15 [ 0, %0 ], [ %indvar_flatten_next1, %._crit_edge9 ]

ST_2: indvar_flatten [1/1] 0.00ns
:1  %indvar_flatten = phi i12 [ 0, %0 ], [ %indvar_flatten_next, %._crit_edge9 ]

ST_2: j [1/1] 0.00ns
:2  %j = phi i5 [ 0, %0 ], [ %j_mid2, %._crit_edge9 ]

ST_2: k [1/1] 0.00ns
:3  %k = phi i7 [ 0, %0 ], [ %k_1, %._crit_edge9 ]

ST_2: exitcond_flatten1 [1/1] 2.25ns
:4  %exitcond_flatten1 = icmp eq i15 %indvar_flatten1, -7168

ST_2: indvar_flatten_next1 [1/1] 1.96ns
:5  %indvar_flatten_next1 = add i15 %indvar_flatten1, 1

ST_2: stg_29 [1/1] 0.00ns
:6  br i1 %exitcond_flatten1, label %7, label %.reset6

ST_2: exitcond_flatten [1/1] 2.14ns
.reset6:2  %exitcond_flatten = icmp eq i12 %indvar_flatten, 1600

ST_2: j_mid [1/1] 1.37ns
.reset6:3  %j_mid = select i1 %exitcond_flatten, i5 0, i5 %j

ST_2: tmp20 [1/1] 1.91ns
.reset6:4  %tmp20 = icmp eq i5 %j, 0

ST_2: tmp_mid [1/1] 0.00ns (grouped into LUT with out node tmp_mid2)
.reset6:5  %tmp_mid = or i1 %exitcond_flatten, %tmp20

ST_2: not_exitcond_flatten [1/1] 0.00ns (grouped into LUT with out node exitcond_mid)
.reset6:6  %not_exitcond_flatten = xor i1 %exitcond_flatten, true

ST_2: exitcond [1/1] 1.97ns
.reset6:7  %exitcond = icmp eq i7 %k, -28

ST_2: exitcond_mid [1/1] 1.37ns (out node of the LUT)
.reset6:8  %exitcond_mid = and i1 %exitcond, %not_exitcond_flatten

ST_2: j_1 [1/1] 1.72ns
.reset6:9  %j_1 = add i5 %j_mid, 1

ST_2: tmp_10 [1/1] 0.00ns (grouped into LUT with out node k_mid2)
.reset6:11  %tmp_10 = or i1 %exitcond_mid, %exitcond_flatten

ST_2: k_mid2 [1/1] 1.37ns (out node of the LUT)
.reset6:12  %k_mid2 = select i1 %tmp_10, i7 0, i7 %k

ST_2: tmp_mid1 [1/1] 1.91ns
.reset6:13  %tmp_mid1 = icmp eq i5 %j_1, 0

ST_2: tmp_mid2 [1/1] 1.37ns (out node of the LUT)
.reset6:14  %tmp_mid2 = select i1 %exitcond_mid, i1 %tmp_mid1, i1 %tmp_mid

ST_2: j_mid2 [1/1] 1.37ns
.reset6:15  %j_mid2 = select i1 %exitcond_mid, i5 %j_1, i5 %j_mid

ST_2: stg_43 [1/1] 0.00ns
.reset6:19  br i1 %tmp_mid2, label %2, label %._crit_edge

ST_2: indvar_flatten_op [1/1] 1.84ns
._crit_edge9:2  %indvar_flatten_op = add i12 %indvar_flatten, 1

ST_2: indvar_flatten_next [1/1] 1.37ns
._crit_edge9:3  %indvar_flatten_next = select i1 %exitcond_flatten, i12 1, i12 %indvar_flatten_op


 <State 3>: 7.08ns
ST_3: tmp_21 [1/1] 4.38ns
:0  %tmp_21 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)

ST_3: tmp_s [1/1] 0.00ns
:1  %tmp_s = zext i7 %k_mid2 to i64

ST_3: A_addr [1/1] 0.00ns
:2  %A_addr = getelementptr inbounds [100 x float]* %A, i64 0, i64 %tmp_s

ST_3: stg_49 [1/1] 2.71ns
:3  store float %tmp_21, float* %A_addr, align 4

ST_3: tmp_8 [1/1] 1.97ns
._crit_edge:0  %tmp_8 = icmp eq i7 %k_mid2, 0

ST_3: stg_51 [1/1] 0.00ns
._crit_edge:1  br i1 %tmp_8, label %3, label %4


 <State 4>: 4.38ns
ST_4: tmp_9 [1/1] 0.00ns
:1  %tmp_9 = zext i7 %k_mid2 to i64

ST_4: A_addr_2 [1/1] 0.00ns
:2  %A_addr_2 = getelementptr inbounds [100 x float]* %A, i64 0, i64 %tmp_9

ST_4: A_load_1 [2/2] 2.71ns
:3  %A_load_1 = load float* %A_addr_2, align 4

ST_4: tmp_23 [1/1] 4.38ns
:4  %tmp_23 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)

ST_4: A_load [2/2] 2.71ns
:0  %A_load = load float* %A_addr_1, align 16

ST_4: tmp_22 [1/1] 4.38ns
:1  %tmp_22 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)

ST_4: tmp_3 [1/1] 1.97ns
:0  %tmp_3 = icmp eq i7 %k_mid2, -29

ST_4: stg_59 [1/1] 0.00ns
:1  br i1 %tmp_3, label %6, label %._crit_edge9

ST_4: k_1 [1/1] 1.72ns
._crit_edge9:1  %k_1 = add i7 %k_mid2, 1


 <State 5>: 8.41ns
ST_5: A_load_1 [1/2] 2.71ns
:3  %A_load_1 = load float* %A_addr_2, align 4

ST_5: tmp_1 [4/4] 5.70ns
:5  %tmp_1 = fmul float %A_load_1, %tmp_23

ST_5: A_load [1/2] 2.71ns
:0  %A_load = load float* %A_addr_1, align 16

ST_5: result [4/4] 5.70ns
:2  %result = fmul float %A_load, %tmp_22


 <State 6>: 5.70ns
ST_6: tmp_1 [3/4] 5.70ns
:5  %tmp_1 = fmul float %A_load_1, %tmp_23

ST_6: result [3/4] 5.70ns
:2  %result = fmul float %A_load, %tmp_22


 <State 7>: 5.70ns
ST_7: tmp_1 [2/4] 5.70ns
:5  %tmp_1 = fmul float %A_load_1, %tmp_23

ST_7: result [2/4] 5.70ns
:2  %result = fmul float %A_load, %tmp_22


 <State 8>: 5.70ns
ST_8: tmp_1 [1/4] 5.70ns
:5  %tmp_1 = fmul float %A_load_1, %tmp_23

ST_8: result [1/4] 5.70ns
:2  %result = fmul float %A_load, %tmp_22


 <State 9>: 7.26ns
ST_9: p_04_2_load [1/1] 0.00ns
:0  %p_04_2_load = load float* %tmp

ST_9: result_1 [5/5] 7.26ns
:6  %result_1 = fadd float %p_04_2_load, %tmp_1

ST_9: stg_73 [1/1] 1.57ns
:3  store float %result, float* %tmp


 <State 10>: 7.26ns
ST_10: result_1 [4/5] 7.26ns
:6  %result_1 = fadd float %p_04_2_load, %tmp_1


 <State 11>: 7.26ns
ST_11: result_1 [3/5] 7.26ns
:6  %result_1 = fadd float %p_04_2_load, %tmp_1


 <State 12>: 7.26ns
ST_12: result_1 [2/5] 7.26ns
:6  %result_1 = fadd float %p_04_2_load, %tmp_1


 <State 13>: 8.83ns
ST_13: result_1 [1/5] 7.26ns
:6  %result_1 = fadd float %p_04_2_load, %tmp_1

ST_13: stg_78 [1/1] 1.57ns
:7  store float %result_1, float* %tmp


 <State 14>: 4.38ns
ST_14: stg_79 [1/1] 0.00ns
.reset6:0  call void (...)* @_ssdm_op_SpecLoopName([32 x i8]* @LOOP_ROW_LOOP_COL_LOOP_DOT_PRO)

ST_14: empty_13 [1/1] 0.00ns
.reset6:1  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 25600, i64 25600, i64 25600)

ST_14: stg_81 [1/1] 0.00ns
.reset6:10  call void (...)* @_ssdm_op_SpecLoopName([23 x i8]* @LOOP_COL_LOOP_DOT_PROD_str)

ST_14: stg_82 [1/1] 0.00ns
.reset6:16  call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str2) nounwind

ST_14: tmp_7 [1/1] 0.00ns
.reset6:17  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str2)

ST_14: stg_84 [1/1] 0.00ns
.reset6:18  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind

ST_14: stg_85 [1/1] 0.00ns
:4  br label %._crit_edge

ST_14: stg_86 [1/1] 0.00ns
:8  br label %5

ST_14: stg_87 [1/1] 0.00ns
:4  br label %5

ST_14: p_04_2_load39 [1/1] 0.00ns
:0  %p_04_2_load39 = load float* %tmp

ST_14: stg_89 [1/1] 4.38ns
:1  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %p_04_2_load39)

ST_14: stg_90 [1/1] 0.00ns
:2  br label %._crit_edge9

ST_14: empty_12 [1/1] 0.00ns
._crit_edge9:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str2, i32 %tmp_7)

ST_14: stg_92 [1/1] 0.00ns
._crit_edge9:4  br label %1


 <State 15>: 0.00ns
ST_15: stg_93 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 13>: 8.83ns
The critical path consists of the following:
	'fadd' operation ('result', dut.cpp:155) (7.26 ns)
	'store' operation (dut.cpp:155) of variable 'result', dut.cpp:155 on local variable 'tmp' (1.57 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
