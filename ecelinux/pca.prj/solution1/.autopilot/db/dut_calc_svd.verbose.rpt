

================================================================
== Vivado HLS Report for 'dut_calc_svd'
================================================================
* Date:           Fri Dec  9 18:10:37 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        pca.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.42|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  264|  264|  264|  264|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        +-----------------------------------------+------------------------------+-----+-----+-----+-----+----------+
        |                                         |                              |  Latency  |  Interval | Pipeline |
        |                 Instance                |            Module            | min | max | min | max |   Type   |
        +-----------------------------------------+------------------------------+-----+-----+-----+-----+----------+
        |grp_dut_calc_angle_float_float_s_fu_101  |dut_calc_angle_float_float_s  |  118|  118|    1|    1| function |
        +-----------------------------------------+------------------------------+-----+-----+-----+-----+----------+

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- svd_calc_diag  |  262|  262|       179|         12|          1|     8|    yes   |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|    543|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|     31|    6603|  10878|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    565|
|Register         |        -|      -|    1289|    289|
+-----------------+---------+-------+--------+-------+
|Total            |        0|     31|    7892|  12275|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|     14|       7|     23|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +------------------------------------------+--------------------------------------+---------+-------+------+------+
    |                 Instance                 |                Module                | BRAM_18K| DSP48E|  FF  |  LUT |
    +------------------------------------------+--------------------------------------+---------+-------+------+------+
    |grp_dut_calc_angle_float_float_s_fu_101   |dut_calc_angle_float_float_s          |        0|     21|  5841|  9217|
    |dut_faddfsub_32ns_32ns_32_5_full_dsp_U19  |dut_faddfsub_32ns_32ns_32_5_full_dsp  |        0|      2|   205|   390|
    |dut_faddfsub_32ns_32ns_32_5_full_dsp_U20  |dut_faddfsub_32ns_32ns_32_5_full_dsp  |        0|      2|   205|   390|
    |dut_fcmp_32ns_32ns_1_1_U23                |dut_fcmp_32ns_32ns_1_1                |        0|      0|    66|   239|
    |dut_fmul_32ns_32ns_32_4_max_dsp_U21       |dut_fmul_32ns_32ns_32_4_max_dsp       |        0|      3|   143|   321|
    |dut_fmul_32ns_32ns_32_4_max_dsp_U22       |dut_fmul_32ns_32ns_32_4_max_dsp       |        0|      3|   143|   321|
    +------------------------------------------+--------------------------------------+---------+-------+------+------+
    |Total                                     |                                      |        0|     31|  6603| 10878|
    +------------------------------------------+--------------------------------------+---------+-------+------+------+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------------+----------+-------+---+----+------------+------------+
    |     Variable Name    | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------+----------+-------+---+----+------------+------------+
    |proc_1_fu_189_p2      |     +    |      0|  0|   4|           4|           1|
    |ap_sig_220            |    and   |      0|  0|   1|           1|           1|
    |ap_sig_228            |    and   |      0|  0|   1|           1|           1|
    |ap_sig_238            |    and   |      0|  0|   1|           1|           1|
    |ap_sig_897            |    and   |      0|  0|   1|           1|           1|
    |tmp_10_fu_344_p2      |    and   |      0|  0|   1|           1|           1|
    |tmp_6_fu_286_p2       |    and   |      0|  0|   1|           1|           1|
    |exitcond_fu_183_p2    |   icmp   |      0|  0|   2|           4|           5|
    |notlhs2_fu_326_p2     |   icmp   |      0|  0|   3|           8|           2|
    |notlhs_fu_268_p2      |   icmp   |      0|  0|   3|           8|           2|
    |notrhs3_fu_332_p2     |   icmp   |      0|  0|   8|          23|           1|
    |notrhs_fu_274_p2      |   icmp   |      0|  0|   8|          23|           1|
    |tmp_3_fu_280_p2       |    or    |      0|  0|   1|           1|           1|
    |tmp_8_fu_338_p2       |    or    |      0|  0|   1|           1|           1|
    |vw_int_3_fu_380_p3    |  select  |      0|  0|  32|           1|          32|
    |vx_int_fu_387_p3      |  select  |      0|  0|  32|           1|          32|
    |vy_int_2_fu_392_p3    |  select  |      0|  0|  32|           1|          32|
    |vz_int_fu_397_p3      |  select  |      0|  0|  32|           1|          32|
    |w_out_3_fu_301_p3     |  select  |      0|  0|  32|           1|          32|
    |z_out_3_fu_359_p3     |  select  |      0|  0|  32|           1|          32|
    |tmp_8_neg_fu_212_p2   |    xor   |      0|  0|  45|          32|          33|
    |tmp_9_neg_fu_198_p2   |    xor   |      0|  0|  45|          32|          33|
    |uy_int_neg_fu_240_p2  |    xor   |      0|  0|  45|          32|          33|
    |vw_int_neg_fu_370_p2  |    xor   |      0|  0|  45|          32|          33|
    |vy_int_neg_fu_226_p2  |    xor   |      0|  0|  45|          32|          33|
    |w_out_neg_fu_291_p2   |    xor   |      0|  0|  45|          32|          33|
    |z_out_neg_fu_350_p2   |    xor   |      0|  0|  45|          32|          33|
    +----------------------+----------+-------+---+----+------------+------------+
    |Total                 |          |      0|  0| 543|         308|         443|
    +----------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +---------------------------------------------+----+-----------+-----+-----------+
    |                     Name                    | LUT| Input Size| Bits| Total Bits|
    +---------------------------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                                    |   6|         15|    1|         15|
    |ap_reg_ppiten_pp0_it14                       |   1|          2|    1|          2|
    |grp_dut_calc_angle_float_float_s_fu_101_A_i  |  32|          3|   32|         96|
    |grp_dut_calc_angle_float_float_s_fu_101_A_r  |  32|          3|   32|         96|
    |grp_fu_107_opcode                            |   2|          3|    2|          6|
    |grp_fu_107_p0                                |  64|          8|   32|        256|
    |grp_fu_107_p1                                |  64|          9|   32|        288|
    |grp_fu_111_opcode                            |   2|          3|    2|          6|
    |grp_fu_111_p0                                |  32|          5|   32|        160|
    |grp_fu_111_p1                                |  32|          6|   32|        192|
    |grp_fu_115_p0                                |  64|          9|   32|        288|
    |grp_fu_115_p1                                |  64|          8|   32|        256|
    |grp_fu_119_p0                                |  32|          7|   32|        224|
    |grp_fu_119_p1                                |  32|          7|   32|        224|
    |grp_fu_123_p0                                |  32|          3|   32|         96|
    |proc_phi_fu_94_p4                            |   4|          2|    4|          8|
    |proc_reg_90                                  |   4|          2|    4|          8|
    |strm_in_V_blk_n                              |   1|          2|    1|          2|
    |strm_out_V_blk_n                             |   1|          2|    1|          2|
    |strm_out_V_din                               |  64|         11|   32|        352|
    +---------------------------------------------+----+-----------+-----+-----------+
    |Total                                        | 565|        110|  400|       2577|
    +---------------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +----------------------------------------+----+----+-----+-----------+
    |                  Name                  | FF | LUT| Bits| Const Bits|
    +----------------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                               |  14|   0|   14|          0|
    |ap_reg_ppiten_pp0_it0                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it1                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it10                  |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it11                  |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it12                  |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it13                  |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it14                  |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it2                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it3                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it4                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it5                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it6                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it7                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it8                   |   1|   0|    1|          0|
    |ap_reg_ppiten_pp0_it9                   |   1|   0|    1|          0|
    |ap_reg_ppstg_uy_int_reg_544_pp0_iter13  |  32|   0|   32|          0|
    |c_write_assign_9_to_int_reg_593         |  32|   0|   32|          0|
    |cosA_half_reg_445                       |  32|   0|   32|          0|
    |cosB_half_reg_459                       |  32|   0|   32|          0|
    |exitcond_reg_403                        |   1|   0|    1|          0|
    |proc_1_reg_407                          |   4|   0|    4|          0|
    |proc_reg_90                             |   4|   0|    4|          0|
    |reg_136                                 |  32|   0|   32|          0|
    |reg_143                                 |  32|   0|   32|          0|
    |reg_149                                 |  32|   0|   32|          0|
    |reg_155                                 |  32|   0|   32|          0|
    |reg_161                                 |  32|   0|   32|          0|
    |reg_166                                 |  32|   0|   32|          0|
    |reg_171                                 |  32|   0|   32|          0|
    |reg_177                                 |  32|   0|   32|          0|
    |sinA_half_reg_452                       |  32|   0|   32|          0|
    |sinB_half_reg_465                       |  32|   0|   32|          0|
    |tmp_10_reg_598                          |   1|   0|    1|          0|
    |tmp_13_reg_530                          |  32|   0|   32|          0|
    |tmp_14_reg_537                          |  32|   0|   32|          0|
    |tmp_20_reg_412                          |  32|   0|   32|          0|
    |tmp_21_reg_419                          |  32|   0|   32|          0|
    |tmp_22_reg_426                          |  32|   0|   32|          0|
    |tmp_23_reg_433                          |  32|   0|   32|          0|
    |tmp_3_i1_reg_501                        |  32|   0|   32|          0|
    |tmp_3_i3_reg_491                        |  32|   0|   32|          0|
    |tmp_3_i6_reg_550                        |  32|   0|   32|          0|
    |tmp_3_i9_reg_577                        |  32|   0|   32|          0|
    |tmp_3_i_reg_496                         |  32|   0|   32|          0|
    |tmp_5_reg_567                           |   1|   0|    1|          0|
    |tmp_6_reg_582                           |   1|   0|    1|          0|
    |tmp_i1_reg_486                          |  32|   0|   32|          0|
    |tmp_i7_reg_572                          |  32|   0|   32|          0|
    |tmp_i_reg_481                           |  32|   0|   32|          0|
    |u1_1_reg_440                            |  32|   0|   32|          0|
    |uy_int_reg_544                          |  32|   0|   32|          0|
    |vx_int_reg_605                          |  32|   0|   32|          0|
    |vy_int_1_reg_515                        |  32|   0|   32|          0|
    |vy_int_2_reg_610                        |  32|   0|   32|          0|
    |vy_int_reg_523                          |  32|   0|   32|          0|
    |vz_int_1_reg_506                        |  32|   0|   32|          0|
    |vz_int_reg_615                          |  32|   0|   32|          0|
    |w_out_3_reg_588                         |  32|   0|   32|          0|
    |w_out_int_reg_560                       |  32|   0|   32|          0|
    |z_out1_reg_555                          |  32|   0|   32|          0|
    |exitcond_reg_403                        |   0|   1|    1|          0|
    |tmp_13_reg_530                          |   0|  32|   32|          0|
    |tmp_14_reg_537                          |   0|  32|   32|          0|
    |tmp_20_reg_412                          |   0|  32|   32|          0|
    |tmp_21_reg_419                          |   0|  32|   32|          0|
    |tmp_22_reg_426                          |   0|  32|   32|          0|
    |tmp_23_reg_433                          |   0|  32|   32|          0|
    |vy_int_1_reg_515                        |   0|  32|   32|          0|
    |vy_int_reg_523                          |   0|  32|   32|          0|
    |vz_int_1_reg_506                        |   0|  32|   32|          0|
    +----------------------------------------+----+----+-----+-----------+
    |Total                                   |1289| 289| 1578|          0|
    +----------------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-------------------+-----+-----+------------+--------------+--------------+
|     RTL Ports     | Dir | Bits|  Protocol  | Source Object|    C Type    |
+-------------------+-----+-----+------------+--------------+--------------+
|ap_clk             |  in |    1| ap_ctrl_hs | dut_calc_svd | return value |
|ap_rst             |  in |    1| ap_ctrl_hs | dut_calc_svd | return value |
|ap_start           |  in |    1| ap_ctrl_hs | dut_calc_svd | return value |
|ap_done            | out |    1| ap_ctrl_hs | dut_calc_svd | return value |
|ap_idle            | out |    1| ap_ctrl_hs | dut_calc_svd | return value |
|ap_ready           | out |    1| ap_ctrl_hs | dut_calc_svd | return value |
|strm_in_V_dout     |  in |   32|   ap_fifo  |   strm_in_V  |    pointer   |
|strm_in_V_empty_n  |  in |    1|   ap_fifo  |   strm_in_V  |    pointer   |
|strm_in_V_read     | out |    1|   ap_fifo  |   strm_in_V  |    pointer   |
|strm_out_V_din     | out |   32|   ap_fifo  |  strm_out_V  |    pointer   |
|strm_out_V_full_n  |  in |    1|   ap_fifo  |  strm_out_V  |    pointer   |
|strm_out_V_write   | out |    1|   ap_fifo  |  strm_out_V  |    pointer   |
+-------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 12, depth = 179


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 181
* Pipeline: 1
  Pipeline-0: II = 12, D = 179, States = {}
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	181  / (exitcond)
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / true
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	163  / true
163 --> 
	164  / true
164 --> 
	165  / true
165 --> 
	166  / true
166 --> 
	167  / true
167 --> 
	168  / true
168 --> 
	169  / true
169 --> 
	170  / true
170 --> 
	171  / true
171 --> 
	172  / true
172 --> 
	173  / true
173 --> 
	174  / true
174 --> 
	175  / true
175 --> 
	176  / true
176 --> 
	177  / true
177 --> 
	178  / true
178 --> 
	179  / true
179 --> 
	180  / true
180 --> 
	2  / true
181 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_in_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str35, [1 x i8]* @p_str36, [1 x i8]* @p_str37, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str38)

ST_1: empty_8 [1/1] 0.00ns
:1  %empty_8 = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_out_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str39, [1 x i8]* @p_str40, [1 x i8]* @p_str41, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str42)

ST_1: stg_184 [1/1] 1.57ns
:2  br label %1


 <State 2>: 1.88ns
ST_2: proc [1/1] 0.00ns
:0  %proc = phi i4 [ 0, %0 ], [ %proc_1, %_ifconv ]

ST_2: exitcond [1/1] 1.88ns
:1  %exitcond = icmp eq i4 %proc, -8

ST_2: proc_1 [1/1] 0.80ns
:2  %proc_1 = add i4 %proc, 1

ST_2: stg_188 [1/1] 0.00ns
:3  br i1 %exitcond, label %2, label %_ifconv


 <State 3>: 4.38ns
ST_3: tmp_20 [1/1] 4.38ns
_ifconv:4  %tmp_20 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 4>: 4.38ns
ST_4: tmp_21 [1/1] 4.38ns
_ifconv:5  %tmp_21 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 5>: 4.38ns
ST_5: tmp_22 [1/1] 4.38ns
_ifconv:6  %tmp_22 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)


 <State 6>: 8.42ns
ST_6: tmp_23 [1/1] 4.38ns
_ifconv:7  %tmp_23 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_V)

ST_6: u2 [5/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_22, %tmp_21

ST_6: u2_1 [5/5] 8.42ns
_ifconv:14  %u2_1 = fsub float %tmp_22, %tmp_21


 <State 7>: 8.42ns
ST_7: u1 [5/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_23, %tmp_20

ST_7: u2 [4/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_22, %tmp_21

ST_7: u1_1 [5/5] 8.42ns
_ifconv:13  %u1_1 = fadd float %tmp_23, %tmp_20

ST_7: u2_1 [4/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_22, %tmp_21


 <State 8>: 7.26ns
ST_8: u1 [4/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_23, %tmp_20

ST_8: u2 [3/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_22, %tmp_21

ST_8: u1_1 [4/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_23, %tmp_20

ST_8: u2_1 [3/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_22, %tmp_21


 <State 9>: 7.26ns
ST_9: u1 [3/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_23, %tmp_20

ST_9: u2 [2/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_22, %tmp_21

ST_9: u1_1 [3/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_23, %tmp_20

ST_9: u2_1 [2/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_22, %tmp_21


 <State 10>: 7.26ns
ST_10: u1 [2/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_23, %tmp_20

ST_10: u2 [1/5] 7.26ns
_ifconv:9  %u2 = fadd float %tmp_22, %tmp_21

ST_10: u1_1 [2/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_23, %tmp_20

ST_10: u2_1 [1/5] 7.26ns
_ifconv:14  %u2_1 = fsub float %tmp_22, %tmp_21


 <State 11>: 7.26ns
ST_11: u1 [1/5] 7.26ns
_ifconv:8  %u1 = fsub float %tmp_23, %tmp_20

ST_11: u1_1 [1/5] 7.26ns
_ifconv:13  %u1_1 = fadd float %tmp_23, %tmp_20


 <State 12>: 7.83ns
ST_12: call_ret [119/119] 7.83ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)


 <State 13>: 8.16ns
ST_13: call_ret [118/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_13: call_ret1 [119/119] 7.83ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 14>: 8.16ns
ST_14: call_ret [117/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_14: call_ret1 [118/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 15>: 8.16ns
ST_15: call_ret [116/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_15: call_ret1 [117/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 16>: 8.16ns
ST_16: call_ret [115/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_16: call_ret1 [116/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 17>: 8.16ns
ST_17: call_ret [114/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_17: call_ret1 [115/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 18>: 8.16ns
ST_18: call_ret [113/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_18: call_ret1 [114/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 19>: 8.16ns
ST_19: call_ret [112/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_19: call_ret1 [113/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 20>: 8.16ns
ST_20: call_ret [111/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_20: call_ret1 [112/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 21>: 8.16ns
ST_21: call_ret [110/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_21: call_ret1 [111/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 22>: 8.16ns
ST_22: call_ret [109/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_22: call_ret1 [110/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 23>: 8.16ns
ST_23: call_ret [108/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_23: call_ret1 [109/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 24>: 8.16ns
ST_24: call_ret [107/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_24: call_ret1 [108/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 25>: 8.16ns
ST_25: call_ret [106/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_25: call_ret1 [107/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 26>: 8.16ns
ST_26: call_ret [105/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_26: call_ret1 [106/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 27>: 8.16ns
ST_27: call_ret [104/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_27: call_ret1 [105/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 28>: 8.16ns
ST_28: call_ret [103/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_28: call_ret1 [104/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 29>: 8.16ns
ST_29: call_ret [102/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_29: call_ret1 [103/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 30>: 8.16ns
ST_30: call_ret [101/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_30: call_ret1 [102/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 31>: 8.16ns
ST_31: call_ret [100/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_31: call_ret1 [101/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 32>: 8.16ns
ST_32: call_ret [99/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_32: call_ret1 [100/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 33>: 8.16ns
ST_33: call_ret [98/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_33: call_ret1 [99/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 34>: 8.16ns
ST_34: call_ret [97/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_34: call_ret1 [98/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 35>: 8.16ns
ST_35: call_ret [96/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_35: call_ret1 [97/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 36>: 8.16ns
ST_36: call_ret [95/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_36: call_ret1 [96/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 37>: 8.16ns
ST_37: call_ret [94/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_37: call_ret1 [95/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 38>: 8.16ns
ST_38: call_ret [93/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_38: call_ret1 [94/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 39>: 8.16ns
ST_39: call_ret [92/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_39: call_ret1 [93/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 40>: 8.16ns
ST_40: call_ret [91/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_40: call_ret1 [92/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 41>: 8.16ns
ST_41: call_ret [90/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_41: call_ret1 [91/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 42>: 8.16ns
ST_42: call_ret [89/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_42: call_ret1 [90/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 43>: 8.16ns
ST_43: call_ret [88/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_43: call_ret1 [89/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 44>: 8.16ns
ST_44: call_ret [87/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_44: call_ret1 [88/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 45>: 8.16ns
ST_45: call_ret [86/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_45: call_ret1 [87/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 46>: 8.16ns
ST_46: call_ret [85/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_46: call_ret1 [86/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 47>: 8.16ns
ST_47: call_ret [84/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_47: call_ret1 [85/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 48>: 8.16ns
ST_48: call_ret [83/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_48: call_ret1 [84/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 49>: 8.16ns
ST_49: call_ret [82/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_49: call_ret1 [83/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 50>: 8.16ns
ST_50: call_ret [81/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_50: call_ret1 [82/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 51>: 8.16ns
ST_51: call_ret [80/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_51: call_ret1 [81/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 52>: 8.16ns
ST_52: call_ret [79/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_52: call_ret1 [80/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 53>: 8.16ns
ST_53: call_ret [78/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_53: call_ret1 [79/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 54>: 8.16ns
ST_54: call_ret [77/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_54: call_ret1 [78/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 55>: 8.16ns
ST_55: call_ret [76/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_55: call_ret1 [77/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 56>: 8.16ns
ST_56: call_ret [75/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_56: call_ret1 [76/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 57>: 8.16ns
ST_57: call_ret [74/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_57: call_ret1 [75/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 58>: 8.16ns
ST_58: call_ret [73/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_58: call_ret1 [74/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 59>: 8.16ns
ST_59: call_ret [72/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_59: call_ret1 [73/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 60>: 8.16ns
ST_60: call_ret [71/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_60: call_ret1 [72/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 61>: 8.16ns
ST_61: call_ret [70/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_61: call_ret1 [71/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 62>: 8.16ns
ST_62: call_ret [69/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_62: call_ret1 [70/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 63>: 8.16ns
ST_63: call_ret [68/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_63: call_ret1 [69/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 64>: 8.16ns
ST_64: call_ret [67/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_64: call_ret1 [68/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 65>: 8.16ns
ST_65: call_ret [66/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_65: call_ret1 [67/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 66>: 8.16ns
ST_66: call_ret [65/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_66: call_ret1 [66/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 67>: 8.16ns
ST_67: call_ret [64/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_67: call_ret1 [65/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 68>: 8.16ns
ST_68: call_ret [63/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_68: call_ret1 [64/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 69>: 8.16ns
ST_69: call_ret [62/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_69: call_ret1 [63/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 70>: 8.16ns
ST_70: call_ret [61/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_70: call_ret1 [62/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 71>: 8.16ns
ST_71: call_ret [60/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_71: call_ret1 [61/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 72>: 8.16ns
ST_72: call_ret [59/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_72: call_ret1 [60/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 73>: 8.16ns
ST_73: call_ret [58/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_73: call_ret1 [59/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 74>: 8.16ns
ST_74: call_ret [57/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_74: call_ret1 [58/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 75>: 8.16ns
ST_75: call_ret [56/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_75: call_ret1 [57/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 76>: 8.16ns
ST_76: call_ret [55/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_76: call_ret1 [56/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 77>: 8.16ns
ST_77: call_ret [54/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_77: call_ret1 [55/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 78>: 8.16ns
ST_78: call_ret [53/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_78: call_ret1 [54/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 79>: 8.16ns
ST_79: call_ret [52/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_79: call_ret1 [53/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 80>: 8.16ns
ST_80: call_ret [51/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_80: call_ret1 [52/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 81>: 8.16ns
ST_81: call_ret [50/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_81: call_ret1 [51/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 82>: 8.16ns
ST_82: call_ret [49/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_82: call_ret1 [50/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 83>: 8.16ns
ST_83: call_ret [48/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_83: call_ret1 [49/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 84>: 8.16ns
ST_84: call_ret [47/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_84: call_ret1 [48/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 85>: 8.16ns
ST_85: call_ret [46/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_85: call_ret1 [47/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 86>: 8.16ns
ST_86: call_ret [45/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_86: call_ret1 [46/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 87>: 8.16ns
ST_87: call_ret [44/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_87: call_ret1 [45/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 88>: 8.16ns
ST_88: call_ret [43/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_88: call_ret1 [44/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 89>: 8.16ns
ST_89: call_ret [42/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_89: call_ret1 [43/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 90>: 8.16ns
ST_90: call_ret [41/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_90: call_ret1 [42/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 91>: 8.16ns
ST_91: call_ret [40/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_91: call_ret1 [41/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 92>: 8.16ns
ST_92: call_ret [39/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_92: call_ret1 [40/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 93>: 8.16ns
ST_93: call_ret [38/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_93: call_ret1 [39/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 94>: 8.16ns
ST_94: call_ret [37/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_94: call_ret1 [38/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 95>: 8.16ns
ST_95: call_ret [36/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_95: call_ret1 [37/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 96>: 8.16ns
ST_96: call_ret [35/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_96: call_ret1 [36/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 97>: 8.16ns
ST_97: call_ret [34/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_97: call_ret1 [35/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 98>: 8.16ns
ST_98: call_ret [33/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_98: call_ret1 [34/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 99>: 8.16ns
ST_99: call_ret [32/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_99: call_ret1 [33/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 100>: 8.16ns
ST_100: call_ret [31/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_100: call_ret1 [32/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 101>: 8.16ns
ST_101: call_ret [30/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_101: call_ret1 [31/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 102>: 8.16ns
ST_102: call_ret [29/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_102: call_ret1 [30/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 103>: 8.16ns
ST_103: call_ret [28/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_103: call_ret1 [29/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 104>: 8.16ns
ST_104: call_ret [27/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_104: call_ret1 [28/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 105>: 8.16ns
ST_105: call_ret [26/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_105: call_ret1 [27/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 106>: 8.16ns
ST_106: call_ret [25/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_106: call_ret1 [26/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 107>: 8.16ns
ST_107: call_ret [24/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_107: call_ret1 [25/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 108>: 8.16ns
ST_108: call_ret [23/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_108: call_ret1 [24/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 109>: 8.16ns
ST_109: call_ret [22/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_109: call_ret1 [23/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 110>: 8.16ns
ST_110: call_ret [21/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_110: call_ret1 [22/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 111>: 8.16ns
ST_111: call_ret [20/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_111: call_ret1 [21/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 112>: 8.16ns
ST_112: call_ret [19/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_112: call_ret1 [20/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 113>: 8.16ns
ST_113: call_ret [18/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_113: call_ret1 [19/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 114>: 8.16ns
ST_114: call_ret [17/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_114: call_ret1 [18/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 115>: 8.16ns
ST_115: call_ret [16/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_115: call_ret1 [17/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 116>: 8.16ns
ST_116: call_ret [15/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_116: call_ret1 [16/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 117>: 8.16ns
ST_117: call_ret [14/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_117: call_ret1 [15/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 118>: 8.16ns
ST_118: call_ret [13/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_118: call_ret1 [14/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 119>: 8.16ns
ST_119: call_ret [12/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_119: call_ret1 [13/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 120>: 8.16ns
ST_120: call_ret [11/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_120: call_ret1 [12/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 121>: 8.16ns
ST_121: call_ret [10/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_121: call_ret1 [11/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 122>: 8.16ns
ST_122: call_ret [9/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_122: call_ret1 [10/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 123>: 8.16ns
ST_123: call_ret [8/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_123: call_ret1 [9/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 124>: 8.16ns
ST_124: call_ret [7/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_124: call_ret1 [8/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 125>: 8.16ns
ST_125: call_ret [6/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_125: call_ret1 [7/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 126>: 8.16ns
ST_126: call_ret [5/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_126: call_ret1 [6/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 127>: 8.16ns
ST_127: call_ret [4/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_127: call_ret1 [5/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 128>: 8.16ns
ST_128: call_ret [3/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_128: call_ret1 [4/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 129>: 8.16ns
ST_129: call_ret [2/119] 8.16ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_129: call_ret1 [3/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 130>: 8.16ns
ST_130: call_ret [1/119] 7.27ns
_ifconv:10  %call_ret = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1, float %u2)

ST_130: cosA_half [1/1] 0.00ns
_ifconv:11  %cosA_half = extractvalue { float, float } %call_ret, 0

ST_130: sinA_half [1/1] 0.00ns
_ifconv:12  %sinA_half = extractvalue { float, float } %call_ret, 1

ST_130: call_ret1 [2/119] 8.16ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)


 <State 131>: 7.27ns
ST_131: call_ret1 [1/119] 7.27ns
_ifconv:15  %call_ret1 = call fastcc { float, float } @"dut_calc_angle<float, float>"(float %u1_1, float %u2_1)

ST_131: cosB_half [1/1] 0.00ns
_ifconv:16  %cosB_half = extractvalue { float, float } %call_ret1, 0

ST_131: sinB_half [1/1] 0.00ns
_ifconv:17  %sinB_half = extractvalue { float, float } %call_ret1, 1


 <State 132>: 6.64ns
ST_132: tmp_i [4/4] 6.64ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_132: tmp_i1 [4/4] 5.70ns
_ifconv:24  %tmp_i1 = fmul float %sinA_half, %cosB_half


 <State 133>: 8.01ns
ST_133: tmp_i [3/4] 5.70ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_133: tmp_i1 [3/4] 5.70ns
_ifconv:24  %tmp_i1 = fmul float %sinA_half, %cosB_half

ST_133: tmp_9_to_int [1/1] 0.00ns
_ifconv:27  %tmp_9_to_int = bitcast float %sinA_half to i32

ST_133: tmp_9_neg [1/1] 1.37ns
_ifconv:28  %tmp_9_neg = xor i32 %tmp_9_to_int, -2147483648

ST_133: a2_assign_1 [1/1] 0.00ns
_ifconv:29  %a2_assign_1 = bitcast i32 %tmp_9_neg to float

ST_133: tmp_3_i2 [4/4] 6.64ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_133: tmp_3_i3 [4/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 134>: 7.07ns
ST_134: tmp_i [2/4] 5.70ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_134: tmp_3_i [4/4] 6.64ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_134: tmp_8_to_int [1/1] 0.00ns
_ifconv:21  %tmp_8_to_int = bitcast float %cosA_half to i32

ST_134: tmp_8_neg [1/1] 1.37ns
_ifconv:22  %tmp_8_neg = xor i32 %tmp_8_to_int, -2147483648

ST_134: a2_assign [1/1] 0.00ns
_ifconv:23  %a2_assign = bitcast i32 %tmp_8_neg to float

ST_134: tmp_i1 [2/4] 5.70ns
_ifconv:24  %tmp_i1 = fmul float %sinA_half, %cosB_half

ST_134: tmp_3_i1 [4/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_134: tmp_3_i2 [3/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_134: tmp_3_i3 [3/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 135>: 5.70ns
ST_135: tmp_i [1/4] 5.70ns
_ifconv:18  %tmp_i = fmul float %cosA_half, %cosB_half

ST_135: tmp_3_i [3/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_135: tmp_i1 [1/4] 5.70ns
_ifconv:24  %tmp_i1 = fmul float %sinA_half, %cosB_half

ST_135: tmp_3_i1 [3/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_135: tmp_3_i2 [2/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_135: tmp_3_i3 [2/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 136>: 5.70ns
ST_136: tmp_3_i [2/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_136: tmp_3_i1 [2/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_136: tmp_3_i2 [1/4] 5.70ns
_ifconv:30  %tmp_3_i2 = fmul float %a2_assign_1, %sinB_half

ST_136: tmp_3_i3 [1/4] 5.70ns
_ifconv:32  %tmp_3_i3 = fmul float %cosA_half, %sinB_half


 <State 137>: 8.42ns
ST_137: tmp_3_i [1/4] 5.70ns
_ifconv:19  %tmp_3_i = fmul float %sinA_half, %sinB_half

ST_137: tmp_3_i1 [1/4] 5.70ns
_ifconv:25  %tmp_3_i1 = fmul float %a2_assign, %sinB_half

ST_137: vz_int_1 [5/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i2

ST_137: vy_int_1 [5/5] 8.42ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i1, %tmp_3_i3


 <State 138>: 7.26ns
ST_138: vz_int_1 [4/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i2

ST_138: vy_int_1 [4/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i1, %tmp_3_i3


 <State 139>: 7.26ns
ST_139: vz_int_1 [3/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i2

ST_139: vy_int_1 [3/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i1, %tmp_3_i3


 <State 140>: 8.42ns
ST_140: tmp_13 [5/5] 7.26ns
_ifconv:20  %tmp_13 = fadd float %tmp_i, %tmp_3_i

ST_140: tmp_14 [5/5] 8.42ns
_ifconv:26  %tmp_14 = fadd float %tmp_i1, %tmp_3_i1

ST_140: vz_int_1 [2/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i2

ST_140: vy_int_1 [2/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i1, %tmp_3_i3


 <State 141>: 7.26ns
ST_141: tmp_13 [4/5] 7.26ns
_ifconv:20  %tmp_13 = fadd float %tmp_i, %tmp_3_i

ST_141: tmp_14 [4/5] 7.26ns
_ifconv:26  %tmp_14 = fadd float %tmp_i1, %tmp_3_i1

ST_141: vz_int_1 [1/5] 7.26ns
_ifconv:31  %vz_int_1 = fadd float %tmp_i, %tmp_3_i2

ST_141: vy_int_1 [1/5] 7.26ns
_ifconv:33  %vy_int_1 = fadd float %tmp_i1, %tmp_3_i3


 <State 142>: 7.26ns
ST_142: tmp_13 [3/5] 7.26ns
_ifconv:20  %tmp_13 = fadd float %tmp_i, %tmp_3_i

ST_142: tmp_14 [3/5] 7.26ns
_ifconv:26  %tmp_14 = fadd float %tmp_i1, %tmp_3_i1

ST_142: vy_int_to_int [1/1] 0.00ns
_ifconv:37  %vy_int_to_int = bitcast float %vy_int_1 to i32

ST_142: vy_int_neg [1/1] 1.37ns
_ifconv:38  %vy_int_neg = xor i32 %vy_int_to_int, -2147483648

ST_142: vy_int [1/1] 0.00ns
_ifconv:39  %vy_int = bitcast i32 %vy_int_neg to float

ST_142: tmp_i2 [4/4] 6.64ns
_ifconv:40  %tmp_i2 = fmul float %tmp_20, %vz_int_1

ST_142: tmp_3_i4 [4/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %tmp_21, %vy_int


 <State 143>: 7.26ns
ST_143: tmp_13 [2/5] 7.26ns
_ifconv:20  %tmp_13 = fadd float %tmp_i, %tmp_3_i

ST_143: tmp_14 [2/5] 7.26ns
_ifconv:26  %tmp_14 = fadd float %tmp_i1, %tmp_3_i1

ST_143: tmp_i2 [3/4] 5.70ns
_ifconv:40  %tmp_i2 = fmul float %tmp_20, %vz_int_1

ST_143: tmp_3_i4 [3/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %tmp_21, %vy_int

ST_143: tmp_i3 [4/4] 6.64ns
_ifconv:43  %tmp_i3 = fmul float %tmp_22, %vz_int_1

ST_143: tmp_3_i5 [4/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %tmp_23, %vy_int


 <State 144>: 7.26ns
ST_144: tmp_13 [1/5] 7.26ns
_ifconv:20  %tmp_13 = fadd float %tmp_i, %tmp_3_i

ST_144: tmp_14 [1/5] 7.26ns
_ifconv:26  %tmp_14 = fadd float %tmp_i1, %tmp_3_i1

ST_144: tmp_i2 [2/4] 5.70ns
_ifconv:40  %tmp_i2 = fmul float %tmp_20, %vz_int_1

ST_144: tmp_3_i4 [2/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %tmp_21, %vy_int

ST_144: tmp_i3 [3/4] 5.70ns
_ifconv:43  %tmp_i3 = fmul float %tmp_22, %vz_int_1

ST_144: tmp_3_i5 [3/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %tmp_23, %vy_int


 <State 145>: 5.70ns
ST_145: tmp_i2 [1/4] 5.70ns
_ifconv:40  %tmp_i2 = fmul float %tmp_20, %vz_int_1

ST_145: tmp_3_i4 [1/4] 5.70ns
_ifconv:41  %tmp_3_i4 = fmul float %tmp_21, %vy_int

ST_145: tmp_i3 [2/4] 5.70ns
_ifconv:43  %tmp_i3 = fmul float %tmp_22, %vz_int_1

ST_145: tmp_3_i5 [2/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %tmp_23, %vy_int


 <State 146>: 7.26ns
ST_146: w_out1 [5/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i2, %tmp_3_i4

ST_146: tmp_i3 [1/4] 5.70ns
_ifconv:43  %tmp_i3 = fmul float %tmp_22, %vz_int_1

ST_146: tmp_3_i5 [1/4] 5.70ns
_ifconv:44  %tmp_3_i5 = fmul float %tmp_23, %vy_int


 <State 147>: 7.26ns
ST_147: w_out1 [4/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i2, %tmp_3_i4

ST_147: w_out2 [5/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i3, %tmp_3_i5

ST_147: tmp_i5 [4/4] 6.64ns
_ifconv:49  %tmp_i5 = fmul float %tmp_20, %vy_int_1

ST_147: tmp_3_i7 [4/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %tmp_21, %vz_int_1


 <State 148>: 7.26ns
ST_148: w_out1 [3/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i2, %tmp_3_i4

ST_148: w_out2 [4/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i3, %tmp_3_i5

ST_148: tmp_i5 [3/4] 5.70ns
_ifconv:49  %tmp_i5 = fmul float %tmp_20, %vy_int_1

ST_148: tmp_3_i7 [3/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %tmp_21, %vz_int_1

ST_148: tmp_i6 [4/4] 6.64ns
_ifconv:52  %tmp_i6 = fmul float %tmp_22, %vy_int_1

ST_148: tmp_3_i8 [4/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %tmp_23, %vz_int_1


 <State 149>: 7.26ns
ST_149: w_out1 [2/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i2, %tmp_3_i4

ST_149: w_out2 [3/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i3, %tmp_3_i5

ST_149: tmp_i5 [2/4] 5.70ns
_ifconv:49  %tmp_i5 = fmul float %tmp_20, %vy_int_1

ST_149: tmp_3_i7 [2/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %tmp_21, %vz_int_1

ST_149: tmp_i6 [3/4] 5.70ns
_ifconv:52  %tmp_i6 = fmul float %tmp_22, %vy_int_1

ST_149: tmp_3_i8 [3/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %tmp_23, %vz_int_1


 <State 150>: 7.26ns
ST_150: w_out1 [1/5] 7.26ns
_ifconv:42  %w_out1 = fadd float %tmp_i2, %tmp_3_i4

ST_150: w_out2 [2/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i3, %tmp_3_i5

ST_150: tmp_i5 [1/4] 5.70ns
_ifconv:49  %tmp_i5 = fmul float %tmp_20, %vy_int_1

ST_150: tmp_3_i7 [1/4] 5.70ns
_ifconv:50  %tmp_3_i7 = fmul float %tmp_21, %vz_int_1

ST_150: tmp_i6 [2/4] 5.70ns
_ifconv:52  %tmp_i6 = fmul float %tmp_22, %vy_int_1

ST_150: tmp_3_i8 [2/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %tmp_23, %vz_int_1


 <State 151>: 7.26ns
ST_151: w_out2 [1/5] 7.26ns
_ifconv:45  %w_out2 = fadd float %tmp_i3, %tmp_3_i5

ST_151: tmp_i4 [4/4] 6.64ns
_ifconv:46  %tmp_i4 = fmul float %tmp_13, %w_out1

ST_151: tmp_i6 [1/4] 5.70ns
_ifconv:52  %tmp_i6 = fmul float %tmp_22, %vy_int_1

ST_151: tmp_3_i8 [1/4] 5.70ns
_ifconv:53  %tmp_3_i8 = fmul float %tmp_23, %vz_int_1


 <State 152>: 8.01ns
ST_152: uy_int_to_int [1/1] 0.00ns
_ifconv:34  %uy_int_to_int = bitcast float %tmp_14 to i32

ST_152: uy_int_neg [1/1] 1.37ns
_ifconv:35  %uy_int_neg = xor i32 %uy_int_to_int, -2147483648

ST_152: uy_int [1/1] 0.00ns
_ifconv:36  %uy_int = bitcast i32 %uy_int_neg to float

ST_152: tmp_i4 [3/4] 5.70ns
_ifconv:46  %tmp_i4 = fmul float %tmp_13, %w_out1

ST_152: tmp_3_i6 [4/4] 6.64ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2


 <State 153>: 8.42ns
ST_153: tmp_i4 [2/4] 5.70ns
_ifconv:46  %tmp_i4 = fmul float %tmp_13, %w_out1

ST_153: tmp_3_i6 [3/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_153: z_out1 [5/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i5, %tmp_3_i7

ST_153: z_out2 [5/5] 8.42ns
_ifconv:54  %z_out2 = fadd float %tmp_i6, %tmp_3_i8


 <State 154>: 7.26ns
ST_154: tmp_i4 [1/4] 5.70ns
_ifconv:46  %tmp_i4 = fmul float %tmp_13, %w_out1

ST_154: tmp_3_i6 [2/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_154: z_out1 [4/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i5, %tmp_3_i7

ST_154: z_out2 [4/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i6, %tmp_3_i8


 <State 155>: 7.26ns
ST_155: tmp_3_i6 [1/4] 5.70ns
_ifconv:47  %tmp_3_i6 = fmul float %uy_int, %w_out2

ST_155: z_out1 [3/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i5, %tmp_3_i7

ST_155: z_out2 [3/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i6, %tmp_3_i8


 <State 156>: 7.26ns
ST_156: w_out_int [5/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i4, %tmp_3_i6

ST_156: z_out1 [2/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i5, %tmp_3_i7

ST_156: z_out2 [2/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i6, %tmp_3_i8


 <State 157>: 7.26ns
ST_157: w_out_int [4/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i4, %tmp_3_i6

ST_157: z_out1 [1/5] 7.26ns
_ifconv:51  %z_out1 = fadd float %tmp_i5, %tmp_3_i7

ST_157: z_out2 [1/5] 7.26ns
_ifconv:54  %z_out2 = fadd float %tmp_i6, %tmp_3_i8


 <State 158>: 7.26ns
ST_158: w_out_int [3/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i4, %tmp_3_i6


 <State 159>: 7.26ns
ST_159: w_out_int [2/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i4, %tmp_3_i6


 <State 160>: 7.26ns
ST_160: w_out_int [1/5] 7.26ns
_ifconv:48  %w_out_int = fadd float %tmp_i4, %tmp_3_i6


 <State 161>: 6.79ns
ST_161: tmp_i7 [4/4] 6.64ns
_ifconv:55  %tmp_i7 = fmul float %tmp_14, %z_out1

ST_161: tmp_3_i9 [4/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %tmp_13, %z_out2

ST_161: tmp_5 [1/1] 6.79ns
_ifconv:64  %tmp_5 = fcmp olt float %w_out_int, 0.000000e+00


 <State 162>: 5.70ns
ST_162: tmp_i7 [3/4] 5.70ns
_ifconv:55  %tmp_i7 = fmul float %tmp_14, %z_out1

ST_162: tmp_3_i9 [3/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %tmp_13, %z_out2


 <State 163>: 5.70ns
ST_163: tmp_i7 [2/4] 5.70ns
_ifconv:55  %tmp_i7 = fmul float %tmp_14, %z_out1

ST_163: tmp_3_i9 [2/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %tmp_13, %z_out2


 <State 164>: 5.70ns
ST_164: tmp_i7 [1/4] 5.70ns
_ifconv:55  %tmp_i7 = fmul float %tmp_14, %z_out1

ST_164: tmp_3_i9 [1/4] 5.70ns
_ifconv:56  %tmp_3_i9 = fmul float %tmp_13, %z_out2


 <State 165>: 0.00ns

 <State 166>: 7.26ns
ST_166: z_out_int [5/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i7, %tmp_3_i9


 <State 167>: 7.26ns
ST_167: z_out_int [4/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i7, %tmp_3_i9


 <State 168>: 7.26ns
ST_168: z_out_int [3/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i7, %tmp_3_i9

ST_168: c_write_assign_6_to_int [1/1] 0.00ns
_ifconv:58  %c_write_assign_6_to_int = bitcast float %w_out_int to i32

ST_168: tmp_4 [1/1] 0.00ns
_ifconv:59  %tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %c_write_assign_6_to_int, i32 23, i32 30)

ST_168: tmp [1/1] 0.00ns
_ifconv:60  %tmp = trunc i32 %c_write_assign_6_to_int to i23

ST_168: notlhs [1/1] 2.00ns
_ifconv:61  %notlhs = icmp ne i8 %tmp_4, -1

ST_168: notrhs [1/1] 2.39ns
_ifconv:62  %notrhs = icmp eq i23 %tmp, 0

ST_168: tmp_3 [1/1] 0.00ns (grouped into LUT with out node tmp_6)
_ifconv:63  %tmp_3 = or i1 %notrhs, %notlhs

ST_168: tmp_6 [1/1] 1.37ns (out node of the LUT)
_ifconv:65  %tmp_6 = and i1 %tmp_3, %tmp_5

ST_168: w_out_neg [1/1] 0.00ns (grouped into LUT with out node w_out_3)
_ifconv:66  %w_out_neg = xor i32 %c_write_assign_6_to_int, -2147483648

ST_168: w_out [1/1] 0.00ns (grouped into LUT with out node w_out_3)
_ifconv:67  %w_out = bitcast i32 %w_out_neg to float

ST_168: w_out_3 [1/1] 1.37ns (out node of the LUT)
_ifconv:71  %w_out_3 = select i1 %tmp_6, float %w_out, float %w_out_int


 <State 169>: 7.26ns
ST_169: z_out_int [2/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i7, %tmp_3_i9

ST_169: stg_599 [1/1] 4.38ns
_ifconv:87  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %w_out_3)


 <State 170>: 7.26ns
ST_170: z_out_int [1/5] 7.26ns
_ifconv:57  %z_out_int = fadd float %tmp_i7, %tmp_3_i9

ST_170: stg_601 [1/1] 4.38ns
_ifconv:88  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float 0.000000e+00)


 <State 171>: 8.16ns
ST_171: c_write_assign_9_to_int [1/1] 0.00ns
_ifconv:74  %c_write_assign_9_to_int = bitcast float %z_out_int to i32

ST_171: tmp_7 [1/1] 0.00ns
_ifconv:75  %tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %c_write_assign_9_to_int, i32 23, i32 30)

ST_171: tmp_2 [1/1] 0.00ns
_ifconv:76  %tmp_2 = trunc i32 %c_write_assign_9_to_int to i23

ST_171: notlhs2 [1/1] 2.00ns
_ifconv:77  %notlhs2 = icmp ne i8 %tmp_7, -1

ST_171: notrhs3 [1/1] 2.39ns
_ifconv:78  %notrhs3 = icmp eq i23 %tmp_2, 0

ST_171: tmp_8 [1/1] 0.00ns (grouped into LUT with out node tmp_10)
_ifconv:79  %tmp_8 = or i1 %notrhs3, %notlhs2

ST_171: tmp_9 [1/1] 6.79ns
_ifconv:80  %tmp_9 = fcmp olt float %z_out_int, 0.000000e+00

ST_171: tmp_10 [1/1] 1.37ns (out node of the LUT)
_ifconv:81  %tmp_10 = and i1 %tmp_8, %tmp_9

ST_171: stg_610 [1/1] 4.38ns
_ifconv:89  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float 0.000000e+00)


 <State 172>: 5.75ns
ST_172: z_out_neg [1/1] 0.00ns (grouped into LUT with out node z_out_3)
_ifconv:82  %z_out_neg = xor i32 %c_write_assign_9_to_int, -2147483648

ST_172: z_out [1/1] 0.00ns (grouped into LUT with out node z_out_3)
_ifconv:83  %z_out = bitcast i32 %z_out_neg to float

ST_172: z_out_3 [1/1] 1.37ns (out node of the LUT)
_ifconv:84  %z_out_3 = select i1 %tmp_10, float %z_out, float %z_out_int

ST_172: stg_614 [1/1] 4.38ns
_ifconv:90  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %z_out_3)


 <State 173>: 4.38ns
ST_173: stg_615 [1/1] 4.38ns
_ifconv:91  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_13)


 <State 174>: 4.38ns
ST_174: stg_616 [1/1] 4.38ns
_ifconv:92  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_14)


 <State 175>: 4.38ns
ST_175: stg_617 [1/1] 4.38ns
_ifconv:93  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %uy_int)


 <State 176>: 4.38ns
ST_176: stg_618 [1/1] 4.38ns
_ifconv:94  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp_13)


 <State 177>: 7.12ns
ST_177: vw_int_to_int [1/1] 0.00ns
_ifconv:68  %vw_int_to_int = bitcast float %vz_int_1 to i32

ST_177: vw_int_neg [1/1] 1.37ns
_ifconv:69  %vw_int_neg = xor i32 %vw_int_to_int, -2147483648

ST_177: vw_int [1/1] 0.00ns
_ifconv:70  %vw_int = bitcast i32 %vw_int_neg to float

ST_177: vw_int_3 [1/1] 1.37ns
_ifconv:72  %vw_int_3 = select i1 %tmp_6, float %vw_int, float %vz_int_1

ST_177: vx_int [1/1] 1.37ns
_ifconv:73  %vx_int = select i1 %tmp_6, float %vy_int_1, float %vy_int

ST_177: vy_int_2 [1/1] 1.37ns
_ifconv:85  %vy_int_2 = select i1 %tmp_10, float %vy_int, float %vy_int_1

ST_177: vz_int [1/1] 1.37ns
_ifconv:86  %vz_int = select i1 %tmp_10, float %vw_int, float %vz_int_1

ST_177: stg_626 [1/1] 4.38ns
_ifconv:95  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vw_int_3)


 <State 178>: 4.38ns
ST_178: stg_627 [1/1] 4.38ns
_ifconv:96  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vy_int_2)


 <State 179>: 4.38ns
ST_179: stg_628 [1/1] 4.38ns
_ifconv:97  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vx_int)


 <State 180>: 4.38ns
ST_180: empty_9 [1/1] 0.00ns
_ifconv:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_180: stg_630 [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str) nounwind

ST_180: tmp_s [1/1] 0.00ns
_ifconv:2  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str)

ST_180: stg_632 [1/1] 0.00ns
_ifconv:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_180: stg_633 [1/1] 4.38ns
_ifconv:98  call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %vz_int)

ST_180: empty_10 [1/1] 0.00ns
_ifconv:99  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str, i32 %tmp_s)

ST_180: stg_635 [1/1] 0.00ns
_ifconv:100  br label %1


 <State 181>: 0.00ns
ST_181: stg_636 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is clock enabled: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ strm_in_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ strm_out_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
empty                   (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_8                 (specinterface    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_184                 (br               ) [ 01111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
proc                    (phi              ) [ 00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
exitcond                (icmp             ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
proc_1                  (add              ) [ 01111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_188                 (br               ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_20                  (read             ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000]
tmp_21                  (read             ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000]
tmp_22                  (read             ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000]
tmp_23                  (read             ) [ 00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000]
u2                      (fadd             ) [ 00000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
u2_1                    (fsub             ) [ 00000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
u1                      (fsub             ) [ 00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
u1_1                    (fadd             ) [ 00000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
call_ret                (call             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
cosA_half               (extractvalue     ) [ 00111000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111000000000000000000000000000000000000000000000]
sinA_half               (extractvalue     ) [ 00111100000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111100000000000000000000000000000000000000000000]
call_ret1               (call             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
cosB_half               (extractvalue     ) [ 00110000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110000000000000000000000000000000000000000000000]
sinB_half               (extractvalue     ) [ 00111100000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111100000000000000000000000000000000000000000000]
tmp_9_to_int            (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_9_neg               (xor              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
a2_assign_1             (bitcast          ) [ 00111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000000000]
tmp_8_to_int            (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_8_neg               (xor              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
a2_assign               (bitcast          ) [ 00011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000]
tmp_i                   (fmul             ) [ 00001111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111110000000000000000000000000000000000000]
tmp_i1                  (fmul             ) [ 00001111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111110000000000000000000000000000000000000]
tmp_3_i2                (fmul             ) [ 00000111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110000000000000000000000000000000000000000]
tmp_3_i3                (fmul             ) [ 00000111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110000000000000000000000000000000000000000]
tmp_3_i                 (fmul             ) [ 00000011111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110000000000000000000000000000000000000]
tmp_3_i1                (fmul             ) [ 00000011111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110000000000000000000000000000000000000]
vz_int_1                (fadd             ) [ 00111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111110000]
vy_int_1                (fadd             ) [ 00111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111110000]
vy_int_to_int           (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
vy_int_neg              (xor              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
vy_int                  (bitcast          ) [ 00111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111111111111111111111111110000]
tmp_13                  (fadd             ) [ 00111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111100000]
tmp_14                  (fadd             ) [ 00111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111110000000]
tmp_i2                  (fmul             ) [ 00111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110000000000000000000000000000000]
tmp_3_i4                (fmul             ) [ 00111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110000000000000000000000000000000]
tmp_i3                  (fmul             ) [ 00011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000]
tmp_3_i5                (fmul             ) [ 00011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000]
w_out1                  (fadd             ) [ 00000001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000000000000000000]
tmp_i5                  (fmul             ) [ 00000001111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111000000000000000000000000]
tmp_3_i7                (fmul             ) [ 00000001111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111000000000000000000000000]
w_out2                  (fadd             ) [ 00000000111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000]
tmp_i6                  (fmul             ) [ 00000000111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111000000000000000000000000]
tmp_3_i8                (fmul             ) [ 00000000111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111000000000000000000000000]
uy_int_to_int           (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
uy_int_neg              (xor              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
uy_int                  (bitcast          ) [ 00111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111000000]
tmp_i4                  (fmul             ) [ 00111000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111000000000000000000000]
tmp_3_i6                (fmul             ) [ 00111000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000]
z_out1                  (fadd             ) [ 00111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111100000000000000000]
z_out2                  (fadd             ) [ 00111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111100000000000000000]
w_out_int               (fadd             ) [ 00000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111110000000000000]
tmp_5                   (fcmp             ) [ 00000011111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110000000000000]
tmp_i7                  (fmul             ) [ 00100000011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111100000000000]
tmp_3_i9                (fmul             ) [ 00100000011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111100000000000]
c_write_assign_6_to_int (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_4                   (partselect       ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp                     (trunc            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
notlhs                  (icmp             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
notrhs                  (icmp             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_3                   (or               ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_6                   (and              ) [ 00111111110001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111110000]
w_out_neg               (xor              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
w_out                   (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
w_out_3                 (select           ) [ 00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000]
stg_599                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
z_out_int               (fadd             ) [ 00011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000]
stg_601                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
c_write_assign_9_to_int (bitcast          ) [ 00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000]
tmp_7                   (partselect       ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_2                   (trunc            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
notlhs2                 (icmp             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
notrhs3                 (icmp             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_8                   (or               ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_9                   (fcmp             ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_10                  (and              ) [ 00001111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110000]
stg_610                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
z_out_neg               (xor              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
z_out                   (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
z_out_3                 (select           ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_614                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_615                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_616                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_617                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_618                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
vw_int_to_int           (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
vw_int_neg              (xor              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
vw_int                  (bitcast          ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
vw_int_3                (select           ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
vx_int                  (select           ) [ 00000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100]
vy_int_2                (select           ) [ 00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000]
vz_int                  (select           ) [ 00000000001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110]
stg_626                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_627                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_628                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_9                 (speclooptripcount) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_630                 (specloopname     ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_s                   (specregionbegin  ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_632                 (specpipeline     ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_633                 (write            ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_10                (specregionend    ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_635                 (br               ) [ 01111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_636                 (ret              ) [ 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="strm_in_V">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="strm_in_V"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="strm_out_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="strm_out_V"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="ap_fifo_str"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str35"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str36"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str37"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str38"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str39"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str40"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str41"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str42"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_fifo.volatile.floatP"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="dut_calc_angle<float, float>"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i8.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_fifo.volatile.floatP"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="76" class="1004" name="grp_read_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="32" slack="0"/>
<pin id="78" dir="0" index="1" bw="32" slack="0"/>
<pin id="79" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="tmp_20/3 tmp_21/4 tmp_22/5 tmp_23/6 "/>
</bind>
</comp>

<comp id="82" class="1004" name="grp_write_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="0" slack="0"/>
<pin id="84" dir="0" index="1" bw="32" slack="0"/>
<pin id="85" dir="0" index="2" bw="32" slack="0"/>
<pin id="86" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_599/169 stg_601/170 stg_610/171 stg_614/172 stg_615/173 stg_616/174 stg_617/175 stg_618/176 stg_626/177 stg_627/178 stg_628/179 stg_633/180 "/>
</bind>
</comp>

<comp id="90" class="1005" name="proc_reg_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="4" slack="1"/>
<pin id="92" dir="1" index="1" bw="4" slack="1"/>
</pin_list>
<bind>
<opset="proc (phireg) "/>
</bind>
</comp>

<comp id="94" class="1004" name="proc_phi_fu_94">
<pin_list>
<pin id="95" dir="0" index="0" bw="1" slack="1"/>
<pin id="96" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="97" dir="0" index="2" bw="4" slack="0"/>
<pin id="98" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="99" dir="1" index="4" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="proc/2 "/>
</bind>
</comp>

<comp id="101" class="1004" name="grp_dut_calc_angle_float_float_s_fu_101">
<pin_list>
<pin id="102" dir="0" index="0" bw="64" slack="0"/>
<pin id="103" dir="0" index="1" bw="32" slack="1"/>
<pin id="104" dir="0" index="2" bw="32" slack="2"/>
<pin id="105" dir="1" index="3" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret/12 call_ret1/13 "/>
</bind>
</comp>

<comp id="107" class="1004" name="grp_fu_107">
<pin_list>
<pin id="108" dir="0" index="0" bw="32" slack="1"/>
<pin id="109" dir="0" index="1" bw="32" slack="1"/>
<pin id="110" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fadd(9) fsub(11) " fcode="fadd"/>
<opset="u2/6 u1/7 vz_int_1/137 tmp_13/140 w_out1/146 w_out2/147 z_out1/153 w_out_int/156 z_out_int/166 "/>
</bind>
</comp>

<comp id="111" class="1004" name="grp_fu_111">
<pin_list>
<pin id="112" dir="0" index="0" bw="32" slack="1"/>
<pin id="113" dir="0" index="1" bw="32" slack="1"/>
<pin id="114" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fadd(9) fsub(11) " fcode="fadd"/>
<opset="u2_1/6 u1_1/7 vy_int_1/137 tmp_14/140 z_out2/153 "/>
</bind>
</comp>

<comp id="115" class="1004" name="grp_fu_115">
<pin_list>
<pin id="116" dir="0" index="0" bw="32" slack="0"/>
<pin id="117" dir="0" index="1" bw="32" slack="1"/>
<pin id="118" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fmul(13) " fcode="fmul"/>
<opset="tmp_i/132 tmp_3_i2/133 tmp_3_i/134 tmp_i2/142 tmp_i3/143 tmp_i5/147 tmp_i6/148 tmp_i4/151 tmp_3_i6/152 tmp_i7/161 "/>
</bind>
</comp>

<comp id="119" class="1004" name="grp_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="32" slack="0"/>
<pin id="121" dir="0" index="1" bw="32" slack="0"/>
<pin id="122" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fmul(13) " fcode="fmul"/>
<opset="tmp_i1/132 tmp_3_i3/133 tmp_3_i1/134 tmp_3_i4/142 tmp_3_i5/143 tmp_3_i7/147 tmp_3_i8/148 tmp_3_i9/161 "/>
</bind>
</comp>

<comp id="123" class="1004" name="grp_fu_123">
<pin_list>
<pin id="124" dir="0" index="0" bw="32" slack="1"/>
<pin id="125" dir="0" index="1" bw="32" slack="0"/>
<pin id="126" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="fcmp(46) " fcode="fcmp"/>
<opset="tmp_5/161 tmp_9/171 "/>
</bind>
</comp>

<comp id="128" class="1004" name="grp_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="64" slack="0"/>
<pin id="130" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="cosA_half/130 cosB_half/131 "/>
</bind>
</comp>

<comp id="132" class="1004" name="grp_fu_132">
<pin_list>
<pin id="133" dir="0" index="0" bw="64" slack="0"/>
<pin id="134" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sinA_half/130 sinB_half/131 "/>
</bind>
</comp>

<comp id="136" class="1005" name="reg_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="32" slack="1"/>
<pin id="138" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="u2 w_out1 z_out_int "/>
</bind>
</comp>

<comp id="143" class="1005" name="reg_143">
<pin_list>
<pin id="144" dir="0" index="0" bw="32" slack="3"/>
<pin id="145" dir="1" index="1" bw="32" slack="3"/>
</pin_list>
<bind>
<opset="u2_1 z_out2 "/>
</bind>
</comp>

<comp id="149" class="1005" name="reg_149">
<pin_list>
<pin id="150" dir="0" index="0" bw="32" slack="1"/>
<pin id="151" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="u1 w_out2 "/>
</bind>
</comp>

<comp id="155" class="1005" name="reg_155">
<pin_list>
<pin id="156" dir="0" index="0" bw="32" slack="1"/>
<pin id="157" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3_i2 tmp_i4 "/>
</bind>
</comp>

<comp id="161" class="1005" name="reg_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="32" slack="1"/>
<pin id="163" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_i2 tmp_i5 "/>
</bind>
</comp>

<comp id="166" class="1005" name="reg_166">
<pin_list>
<pin id="167" dir="0" index="0" bw="32" slack="1"/>
<pin id="168" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3_i4 tmp_3_i7 "/>
</bind>
</comp>

<comp id="171" class="1005" name="reg_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="32" slack="1"/>
<pin id="173" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_i3 tmp_i6 "/>
</bind>
</comp>

<comp id="177" class="1005" name="reg_177">
<pin_list>
<pin id="178" dir="0" index="0" bw="32" slack="1"/>
<pin id="179" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3_i5 tmp_3_i8 "/>
</bind>
</comp>

<comp id="183" class="1004" name="exitcond_fu_183">
<pin_list>
<pin id="184" dir="0" index="0" bw="4" slack="0"/>
<pin id="185" dir="0" index="1" bw="4" slack="0"/>
<pin id="186" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond/2 "/>
</bind>
</comp>

<comp id="189" class="1004" name="proc_1_fu_189">
<pin_list>
<pin id="190" dir="0" index="0" bw="4" slack="0"/>
<pin id="191" dir="0" index="1" bw="1" slack="0"/>
<pin id="192" dir="1" index="2" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="proc_1/2 "/>
</bind>
</comp>

<comp id="195" class="1004" name="tmp_9_to_int_fu_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="32" slack="3"/>
<pin id="197" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="tmp_9_to_int/133 "/>
</bind>
</comp>

<comp id="198" class="1004" name="tmp_9_neg_fu_198">
<pin_list>
<pin id="199" dir="0" index="0" bw="32" slack="0"/>
<pin id="200" dir="0" index="1" bw="32" slack="0"/>
<pin id="201" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="tmp_9_neg/133 "/>
</bind>
</comp>

<comp id="204" class="1004" name="a2_assign_1_fu_204">
<pin_list>
<pin id="205" dir="0" index="0" bw="32" slack="0"/>
<pin id="206" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="a2_assign_1/133 "/>
</bind>
</comp>

<comp id="209" class="1004" name="tmp_8_to_int_fu_209">
<pin_list>
<pin id="210" dir="0" index="0" bw="32" slack="4"/>
<pin id="211" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="tmp_8_to_int/134 "/>
</bind>
</comp>

<comp id="212" class="1004" name="tmp_8_neg_fu_212">
<pin_list>
<pin id="213" dir="0" index="0" bw="32" slack="0"/>
<pin id="214" dir="0" index="1" bw="32" slack="0"/>
<pin id="215" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="tmp_8_neg/134 "/>
</bind>
</comp>

<comp id="218" class="1004" name="a2_assign_fu_218">
<pin_list>
<pin id="219" dir="0" index="0" bw="32" slack="0"/>
<pin id="220" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="a2_assign/134 "/>
</bind>
</comp>

<comp id="223" class="1004" name="vy_int_to_int_fu_223">
<pin_list>
<pin id="224" dir="0" index="0" bw="32" slack="1"/>
<pin id="225" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="vy_int_to_int/142 "/>
</bind>
</comp>

<comp id="226" class="1004" name="vy_int_neg_fu_226">
<pin_list>
<pin id="227" dir="0" index="0" bw="32" slack="0"/>
<pin id="228" dir="0" index="1" bw="32" slack="0"/>
<pin id="229" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="vy_int_neg/142 "/>
</bind>
</comp>

<comp id="232" class="1004" name="vy_int_fu_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="32" slack="0"/>
<pin id="234" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="vy_int/142 "/>
</bind>
</comp>

<comp id="237" class="1004" name="uy_int_to_int_fu_237">
<pin_list>
<pin id="238" dir="0" index="0" bw="32" slack="8"/>
<pin id="239" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="uy_int_to_int/152 "/>
</bind>
</comp>

<comp id="240" class="1004" name="uy_int_neg_fu_240">
<pin_list>
<pin id="241" dir="0" index="0" bw="32" slack="0"/>
<pin id="242" dir="0" index="1" bw="32" slack="0"/>
<pin id="243" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="uy_int_neg/152 "/>
</bind>
</comp>

<comp id="246" class="1004" name="uy_int_fu_246">
<pin_list>
<pin id="247" dir="0" index="0" bw="32" slack="0"/>
<pin id="248" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="uy_int/152 "/>
</bind>
</comp>

<comp id="251" class="1004" name="c_write_assign_6_to_int_fu_251">
<pin_list>
<pin id="252" dir="0" index="0" bw="32" slack="8"/>
<pin id="253" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="c_write_assign_6_to_int/168 "/>
</bind>
</comp>

<comp id="254" class="1004" name="tmp_4_fu_254">
<pin_list>
<pin id="255" dir="0" index="0" bw="8" slack="0"/>
<pin id="256" dir="0" index="1" bw="32" slack="0"/>
<pin id="257" dir="0" index="2" bw="6" slack="0"/>
<pin id="258" dir="0" index="3" bw="6" slack="0"/>
<pin id="259" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_4/168 "/>
</bind>
</comp>

<comp id="264" class="1004" name="tmp_fu_264">
<pin_list>
<pin id="265" dir="0" index="0" bw="32" slack="0"/>
<pin id="266" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp/168 "/>
</bind>
</comp>

<comp id="268" class="1004" name="notlhs_fu_268">
<pin_list>
<pin id="269" dir="0" index="0" bw="8" slack="0"/>
<pin id="270" dir="0" index="1" bw="8" slack="0"/>
<pin id="271" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notlhs/168 "/>
</bind>
</comp>

<comp id="274" class="1004" name="notrhs_fu_274">
<pin_list>
<pin id="275" dir="0" index="0" bw="23" slack="0"/>
<pin id="276" dir="0" index="1" bw="23" slack="0"/>
<pin id="277" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notrhs/168 "/>
</bind>
</comp>

<comp id="280" class="1004" name="tmp_3_fu_280">
<pin_list>
<pin id="281" dir="0" index="0" bw="1" slack="0"/>
<pin id="282" dir="0" index="1" bw="1" slack="0"/>
<pin id="283" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="tmp_3/168 "/>
</bind>
</comp>

<comp id="286" class="1004" name="tmp_6_fu_286">
<pin_list>
<pin id="287" dir="0" index="0" bw="1" slack="0"/>
<pin id="288" dir="0" index="1" bw="1" slack="7"/>
<pin id="289" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="tmp_6/168 "/>
</bind>
</comp>

<comp id="291" class="1004" name="w_out_neg_fu_291">
<pin_list>
<pin id="292" dir="0" index="0" bw="32" slack="0"/>
<pin id="293" dir="0" index="1" bw="32" slack="0"/>
<pin id="294" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="w_out_neg/168 "/>
</bind>
</comp>

<comp id="297" class="1004" name="w_out_fu_297">
<pin_list>
<pin id="298" dir="0" index="0" bw="32" slack="0"/>
<pin id="299" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="w_out/168 "/>
</bind>
</comp>

<comp id="301" class="1004" name="w_out_3_fu_301">
<pin_list>
<pin id="302" dir="0" index="0" bw="1" slack="0"/>
<pin id="303" dir="0" index="1" bw="32" slack="0"/>
<pin id="304" dir="0" index="2" bw="32" slack="8"/>
<pin id="305" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="w_out_3/168 "/>
</bind>
</comp>

<comp id="308" class="1004" name="c_write_assign_9_to_int_fu_308">
<pin_list>
<pin id="309" dir="0" index="0" bw="32" slack="1"/>
<pin id="310" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="c_write_assign_9_to_int/171 "/>
</bind>
</comp>

<comp id="312" class="1004" name="tmp_7_fu_312">
<pin_list>
<pin id="313" dir="0" index="0" bw="8" slack="0"/>
<pin id="314" dir="0" index="1" bw="32" slack="0"/>
<pin id="315" dir="0" index="2" bw="6" slack="0"/>
<pin id="316" dir="0" index="3" bw="6" slack="0"/>
<pin id="317" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_7/171 "/>
</bind>
</comp>

<comp id="322" class="1004" name="tmp_2_fu_322">
<pin_list>
<pin id="323" dir="0" index="0" bw="32" slack="0"/>
<pin id="324" dir="1" index="1" bw="23" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_2/171 "/>
</bind>
</comp>

<comp id="326" class="1004" name="notlhs2_fu_326">
<pin_list>
<pin id="327" dir="0" index="0" bw="8" slack="0"/>
<pin id="328" dir="0" index="1" bw="8" slack="0"/>
<pin id="329" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notlhs2/171 "/>
</bind>
</comp>

<comp id="332" class="1004" name="notrhs3_fu_332">
<pin_list>
<pin id="333" dir="0" index="0" bw="23" slack="0"/>
<pin id="334" dir="0" index="1" bw="23" slack="0"/>
<pin id="335" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="notrhs3/171 "/>
</bind>
</comp>

<comp id="338" class="1004" name="tmp_8_fu_338">
<pin_list>
<pin id="339" dir="0" index="0" bw="1" slack="0"/>
<pin id="340" dir="0" index="1" bw="1" slack="0"/>
<pin id="341" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="tmp_8/171 "/>
</bind>
</comp>

<comp id="344" class="1004" name="tmp_10_fu_344">
<pin_list>
<pin id="345" dir="0" index="0" bw="1" slack="0"/>
<pin id="346" dir="0" index="1" bw="1" slack="0"/>
<pin id="347" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="tmp_10/171 "/>
</bind>
</comp>

<comp id="350" class="1004" name="z_out_neg_fu_350">
<pin_list>
<pin id="351" dir="0" index="0" bw="32" slack="1"/>
<pin id="352" dir="0" index="1" bw="32" slack="0"/>
<pin id="353" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="z_out_neg/172 "/>
</bind>
</comp>

<comp id="355" class="1004" name="z_out_fu_355">
<pin_list>
<pin id="356" dir="0" index="0" bw="32" slack="0"/>
<pin id="357" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="z_out/172 "/>
</bind>
</comp>

<comp id="359" class="1004" name="z_out_3_fu_359">
<pin_list>
<pin id="360" dir="0" index="0" bw="1" slack="1"/>
<pin id="361" dir="0" index="1" bw="32" slack="0"/>
<pin id="362" dir="0" index="2" bw="32" slack="2"/>
<pin id="363" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="z_out_3/172 "/>
</bind>
</comp>

<comp id="367" class="1004" name="vw_int_to_int_fu_367">
<pin_list>
<pin id="368" dir="0" index="0" bw="32" slack="36"/>
<pin id="369" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="vw_int_to_int/177 "/>
</bind>
</comp>

<comp id="370" class="1004" name="vw_int_neg_fu_370">
<pin_list>
<pin id="371" dir="0" index="0" bw="32" slack="0"/>
<pin id="372" dir="0" index="1" bw="32" slack="0"/>
<pin id="373" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="vw_int_neg/177 "/>
</bind>
</comp>

<comp id="376" class="1004" name="vw_int_fu_376">
<pin_list>
<pin id="377" dir="0" index="0" bw="32" slack="0"/>
<pin id="378" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="bitcast(44) " fcode="bitcast"/>
<opset="vw_int/177 "/>
</bind>
</comp>

<comp id="380" class="1004" name="vw_int_3_fu_380">
<pin_list>
<pin id="381" dir="0" index="0" bw="1" slack="9"/>
<pin id="382" dir="0" index="1" bw="32" slack="0"/>
<pin id="383" dir="0" index="2" bw="32" slack="36"/>
<pin id="384" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="vw_int_3/177 "/>
</bind>
</comp>

<comp id="387" class="1004" name="vx_int_fu_387">
<pin_list>
<pin id="388" dir="0" index="0" bw="1" slack="9"/>
<pin id="389" dir="0" index="1" bw="32" slack="36"/>
<pin id="390" dir="0" index="2" bw="32" slack="35"/>
<pin id="391" dir="1" index="3" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="vx_int/177 "/>
</bind>
</comp>

<comp id="392" class="1004" name="vy_int_2_fu_392">
<pin_list>
<pin id="393" dir="0" index="0" bw="1" slack="6"/>
<pin id="394" dir="0" index="1" bw="32" slack="35"/>
<pin id="395" dir="0" index="2" bw="32" slack="36"/>
<pin id="396" dir="1" index="3" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="vy_int_2/177 "/>
</bind>
</comp>

<comp id="397" class="1004" name="vz_int_fu_397">
<pin_list>
<pin id="398" dir="0" index="0" bw="1" slack="6"/>
<pin id="399" dir="0" index="1" bw="32" slack="0"/>
<pin id="400" dir="0" index="2" bw="32" slack="36"/>
<pin id="401" dir="1" index="3" bw="32" slack="3"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="vz_int/177 "/>
</bind>
</comp>

<comp id="403" class="1005" name="exitcond_reg_403">
<pin_list>
<pin id="404" dir="0" index="0" bw="1" slack="1"/>
<pin id="405" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond "/>
</bind>
</comp>

<comp id="407" class="1005" name="proc_1_reg_407">
<pin_list>
<pin id="408" dir="0" index="0" bw="4" slack="0"/>
<pin id="409" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opset="proc_1 "/>
</bind>
</comp>

<comp id="412" class="1005" name="tmp_20_reg_412">
<pin_list>
<pin id="413" dir="0" index="0" bw="32" slack="4"/>
<pin id="414" dir="1" index="1" bw="32" slack="4"/>
</pin_list>
<bind>
<opset="tmp_20 "/>
</bind>
</comp>

<comp id="419" class="1005" name="tmp_21_reg_419">
<pin_list>
<pin id="420" dir="0" index="0" bw="32" slack="2"/>
<pin id="421" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_21 "/>
</bind>
</comp>

<comp id="426" class="1005" name="tmp_22_reg_426">
<pin_list>
<pin id="427" dir="0" index="0" bw="32" slack="1"/>
<pin id="428" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_22 "/>
</bind>
</comp>

<comp id="433" class="1005" name="tmp_23_reg_433">
<pin_list>
<pin id="434" dir="0" index="0" bw="32" slack="1"/>
<pin id="435" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_23 "/>
</bind>
</comp>

<comp id="440" class="1005" name="u1_1_reg_440">
<pin_list>
<pin id="441" dir="0" index="0" bw="32" slack="2"/>
<pin id="442" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="u1_1 "/>
</bind>
</comp>

<comp id="445" class="1005" name="cosA_half_reg_445">
<pin_list>
<pin id="446" dir="0" index="0" bw="32" slack="2"/>
<pin id="447" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="cosA_half "/>
</bind>
</comp>

<comp id="452" class="1005" name="sinA_half_reg_452">
<pin_list>
<pin id="453" dir="0" index="0" bw="32" slack="2"/>
<pin id="454" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="sinA_half "/>
</bind>
</comp>

<comp id="459" class="1005" name="cosB_half_reg_459">
<pin_list>
<pin id="460" dir="0" index="0" bw="32" slack="1"/>
<pin id="461" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="cosB_half "/>
</bind>
</comp>

<comp id="465" class="1005" name="sinB_half_reg_465">
<pin_list>
<pin id="466" dir="0" index="0" bw="32" slack="2"/>
<pin id="467" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="sinB_half "/>
</bind>
</comp>

<comp id="471" class="1005" name="a2_assign_1_reg_471">
<pin_list>
<pin id="472" dir="0" index="0" bw="32" slack="1"/>
<pin id="473" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="a2_assign_1 "/>
</bind>
</comp>

<comp id="476" class="1005" name="a2_assign_reg_476">
<pin_list>
<pin id="477" dir="0" index="0" bw="32" slack="1"/>
<pin id="478" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="a2_assign "/>
</bind>
</comp>

<comp id="481" class="1005" name="tmp_i_reg_481">
<pin_list>
<pin id="482" dir="0" index="0" bw="32" slack="2"/>
<pin id="483" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_i "/>
</bind>
</comp>

<comp id="486" class="1005" name="tmp_i1_reg_486">
<pin_list>
<pin id="487" dir="0" index="0" bw="32" slack="2"/>
<pin id="488" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_i1 "/>
</bind>
</comp>

<comp id="491" class="1005" name="tmp_3_i3_reg_491">
<pin_list>
<pin id="492" dir="0" index="0" bw="32" slack="1"/>
<pin id="493" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3_i3 "/>
</bind>
</comp>

<comp id="496" class="1005" name="tmp_3_i_reg_496">
<pin_list>
<pin id="497" dir="0" index="0" bw="32" slack="3"/>
<pin id="498" dir="1" index="1" bw="32" slack="3"/>
</pin_list>
<bind>
<opset="tmp_3_i "/>
</bind>
</comp>

<comp id="501" class="1005" name="tmp_3_i1_reg_501">
<pin_list>
<pin id="502" dir="0" index="0" bw="32" slack="3"/>
<pin id="503" dir="1" index="1" bw="32" slack="3"/>
</pin_list>
<bind>
<opset="tmp_3_i1 "/>
</bind>
</comp>

<comp id="506" class="1005" name="vz_int_1_reg_506">
<pin_list>
<pin id="507" dir="0" index="0" bw="32" slack="1"/>
<pin id="508" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="vz_int_1 "/>
</bind>
</comp>

<comp id="515" class="1005" name="vy_int_1_reg_515">
<pin_list>
<pin id="516" dir="0" index="0" bw="32" slack="1"/>
<pin id="517" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="vy_int_1 "/>
</bind>
</comp>

<comp id="523" class="1005" name="vy_int_reg_523">
<pin_list>
<pin id="524" dir="0" index="0" bw="32" slack="1"/>
<pin id="525" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="vy_int "/>
</bind>
</comp>

<comp id="530" class="1005" name="tmp_13_reg_530">
<pin_list>
<pin id="531" dir="0" index="0" bw="32" slack="7"/>
<pin id="532" dir="1" index="1" bw="32" slack="7"/>
</pin_list>
<bind>
<opset="tmp_13 "/>
</bind>
</comp>

<comp id="537" class="1005" name="tmp_14_reg_537">
<pin_list>
<pin id="538" dir="0" index="0" bw="32" slack="8"/>
<pin id="539" dir="1" index="1" bw="32" slack="8"/>
</pin_list>
<bind>
<opset="tmp_14 "/>
</bind>
</comp>

<comp id="544" class="1005" name="uy_int_reg_544">
<pin_list>
<pin id="545" dir="0" index="0" bw="32" slack="1"/>
<pin id="546" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="uy_int "/>
</bind>
</comp>

<comp id="550" class="1005" name="tmp_3_i6_reg_550">
<pin_list>
<pin id="551" dir="0" index="0" bw="32" slack="1"/>
<pin id="552" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3_i6 "/>
</bind>
</comp>

<comp id="555" class="1005" name="z_out1_reg_555">
<pin_list>
<pin id="556" dir="0" index="0" bw="32" slack="4"/>
<pin id="557" dir="1" index="1" bw="32" slack="4"/>
</pin_list>
<bind>
<opset="z_out1 "/>
</bind>
</comp>

<comp id="560" class="1005" name="w_out_int_reg_560">
<pin_list>
<pin id="561" dir="0" index="0" bw="32" slack="1"/>
<pin id="562" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="w_out_int "/>
</bind>
</comp>

<comp id="567" class="1005" name="tmp_5_reg_567">
<pin_list>
<pin id="568" dir="0" index="0" bw="1" slack="7"/>
<pin id="569" dir="1" index="1" bw="1" slack="7"/>
</pin_list>
<bind>
<opset="tmp_5 "/>
</bind>
</comp>

<comp id="572" class="1005" name="tmp_i7_reg_572">
<pin_list>
<pin id="573" dir="0" index="0" bw="32" slack="2"/>
<pin id="574" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_i7 "/>
</bind>
</comp>

<comp id="577" class="1005" name="tmp_3_i9_reg_577">
<pin_list>
<pin id="578" dir="0" index="0" bw="32" slack="2"/>
<pin id="579" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_3_i9 "/>
</bind>
</comp>

<comp id="582" class="1005" name="tmp_6_reg_582">
<pin_list>
<pin id="583" dir="0" index="0" bw="1" slack="9"/>
<pin id="584" dir="1" index="1" bw="1" slack="9"/>
</pin_list>
<bind>
<opset="tmp_6 "/>
</bind>
</comp>

<comp id="588" class="1005" name="w_out_3_reg_588">
<pin_list>
<pin id="589" dir="0" index="0" bw="32" slack="1"/>
<pin id="590" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="w_out_3 "/>
</bind>
</comp>

<comp id="593" class="1005" name="c_write_assign_9_to_int_reg_593">
<pin_list>
<pin id="594" dir="0" index="0" bw="32" slack="1"/>
<pin id="595" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="c_write_assign_9_to_int "/>
</bind>
</comp>

<comp id="598" class="1005" name="tmp_10_reg_598">
<pin_list>
<pin id="599" dir="0" index="0" bw="1" slack="1"/>
<pin id="600" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_10 "/>
</bind>
</comp>

<comp id="605" class="1005" name="vx_int_reg_605">
<pin_list>
<pin id="606" dir="0" index="0" bw="32" slack="2"/>
<pin id="607" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="vx_int "/>
</bind>
</comp>

<comp id="610" class="1005" name="vy_int_2_reg_610">
<pin_list>
<pin id="611" dir="0" index="0" bw="32" slack="1"/>
<pin id="612" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="vy_int_2 "/>
</bind>
</comp>

<comp id="615" class="1005" name="vz_int_reg_615">
<pin_list>
<pin id="616" dir="0" index="0" bw="32" slack="3"/>
<pin id="617" dir="1" index="1" bw="32" slack="3"/>
</pin_list>
<bind>
<opset="vz_int "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="80"><net_src comp="36" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="0" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="87"><net_src comp="54" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="88"><net_src comp="2" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="89"><net_src comp="42" pin="0"/><net_sink comp="82" pin=2"/></net>

<net id="93"><net_src comp="30" pin="0"/><net_sink comp="90" pin=0"/></net>

<net id="100"><net_src comp="90" pin="1"/><net_sink comp="94" pin=0"/></net>

<net id="106"><net_src comp="38" pin="0"/><net_sink comp="101" pin=0"/></net>

<net id="127"><net_src comp="42" pin="0"/><net_sink comp="123" pin=1"/></net>

<net id="131"><net_src comp="101" pin="3"/><net_sink comp="128" pin=0"/></net>

<net id="135"><net_src comp="101" pin="3"/><net_sink comp="132" pin=0"/></net>

<net id="139"><net_src comp="107" pin="2"/><net_sink comp="136" pin=0"/></net>

<net id="140"><net_src comp="136" pin="1"/><net_sink comp="101" pin=2"/></net>

<net id="141"><net_src comp="136" pin="1"/><net_sink comp="115" pin=1"/></net>

<net id="142"><net_src comp="136" pin="1"/><net_sink comp="123" pin=0"/></net>

<net id="146"><net_src comp="111" pin="2"/><net_sink comp="143" pin=0"/></net>

<net id="147"><net_src comp="143" pin="1"/><net_sink comp="101" pin=2"/></net>

<net id="148"><net_src comp="143" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="152"><net_src comp="107" pin="2"/><net_sink comp="149" pin=0"/></net>

<net id="153"><net_src comp="149" pin="1"/><net_sink comp="101" pin=1"/></net>

<net id="154"><net_src comp="149" pin="1"/><net_sink comp="115" pin=1"/></net>

<net id="158"><net_src comp="115" pin="2"/><net_sink comp="155" pin=0"/></net>

<net id="159"><net_src comp="155" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="160"><net_src comp="155" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="164"><net_src comp="115" pin="2"/><net_sink comp="161" pin=0"/></net>

<net id="165"><net_src comp="161" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="169"><net_src comp="119" pin="2"/><net_sink comp="166" pin=0"/></net>

<net id="170"><net_src comp="166" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="174"><net_src comp="115" pin="2"/><net_sink comp="171" pin=0"/></net>

<net id="175"><net_src comp="171" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="176"><net_src comp="171" pin="1"/><net_sink comp="111" pin=0"/></net>

<net id="180"><net_src comp="119" pin="2"/><net_sink comp="177" pin=0"/></net>

<net id="181"><net_src comp="177" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="182"><net_src comp="177" pin="1"/><net_sink comp="111" pin=1"/></net>

<net id="187"><net_src comp="94" pin="4"/><net_sink comp="183" pin=0"/></net>

<net id="188"><net_src comp="32" pin="0"/><net_sink comp="183" pin=1"/></net>

<net id="193"><net_src comp="94" pin="4"/><net_sink comp="189" pin=0"/></net>

<net id="194"><net_src comp="34" pin="0"/><net_sink comp="189" pin=1"/></net>

<net id="202"><net_src comp="195" pin="1"/><net_sink comp="198" pin=0"/></net>

<net id="203"><net_src comp="40" pin="0"/><net_sink comp="198" pin=1"/></net>

<net id="207"><net_src comp="198" pin="2"/><net_sink comp="204" pin=0"/></net>

<net id="208"><net_src comp="204" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="216"><net_src comp="209" pin="1"/><net_sink comp="212" pin=0"/></net>

<net id="217"><net_src comp="40" pin="0"/><net_sink comp="212" pin=1"/></net>

<net id="221"><net_src comp="212" pin="2"/><net_sink comp="218" pin=0"/></net>

<net id="222"><net_src comp="218" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="230"><net_src comp="223" pin="1"/><net_sink comp="226" pin=0"/></net>

<net id="231"><net_src comp="40" pin="0"/><net_sink comp="226" pin=1"/></net>

<net id="235"><net_src comp="226" pin="2"/><net_sink comp="232" pin=0"/></net>

<net id="236"><net_src comp="232" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="244"><net_src comp="237" pin="1"/><net_sink comp="240" pin=0"/></net>

<net id="245"><net_src comp="40" pin="0"/><net_sink comp="240" pin=1"/></net>

<net id="249"><net_src comp="240" pin="2"/><net_sink comp="246" pin=0"/></net>

<net id="250"><net_src comp="246" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="260"><net_src comp="44" pin="0"/><net_sink comp="254" pin=0"/></net>

<net id="261"><net_src comp="251" pin="1"/><net_sink comp="254" pin=1"/></net>

<net id="262"><net_src comp="46" pin="0"/><net_sink comp="254" pin=2"/></net>

<net id="263"><net_src comp="48" pin="0"/><net_sink comp="254" pin=3"/></net>

<net id="267"><net_src comp="251" pin="1"/><net_sink comp="264" pin=0"/></net>

<net id="272"><net_src comp="254" pin="4"/><net_sink comp="268" pin=0"/></net>

<net id="273"><net_src comp="50" pin="0"/><net_sink comp="268" pin=1"/></net>

<net id="278"><net_src comp="264" pin="1"/><net_sink comp="274" pin=0"/></net>

<net id="279"><net_src comp="52" pin="0"/><net_sink comp="274" pin=1"/></net>

<net id="284"><net_src comp="274" pin="2"/><net_sink comp="280" pin=0"/></net>

<net id="285"><net_src comp="268" pin="2"/><net_sink comp="280" pin=1"/></net>

<net id="290"><net_src comp="280" pin="2"/><net_sink comp="286" pin=0"/></net>

<net id="295"><net_src comp="251" pin="1"/><net_sink comp="291" pin=0"/></net>

<net id="296"><net_src comp="40" pin="0"/><net_sink comp="291" pin=1"/></net>

<net id="300"><net_src comp="291" pin="2"/><net_sink comp="297" pin=0"/></net>

<net id="306"><net_src comp="286" pin="2"/><net_sink comp="301" pin=0"/></net>

<net id="307"><net_src comp="297" pin="1"/><net_sink comp="301" pin=1"/></net>

<net id="311"><net_src comp="136" pin="1"/><net_sink comp="308" pin=0"/></net>

<net id="318"><net_src comp="44" pin="0"/><net_sink comp="312" pin=0"/></net>

<net id="319"><net_src comp="308" pin="1"/><net_sink comp="312" pin=1"/></net>

<net id="320"><net_src comp="46" pin="0"/><net_sink comp="312" pin=2"/></net>

<net id="321"><net_src comp="48" pin="0"/><net_sink comp="312" pin=3"/></net>

<net id="325"><net_src comp="308" pin="1"/><net_sink comp="322" pin=0"/></net>

<net id="330"><net_src comp="312" pin="4"/><net_sink comp="326" pin=0"/></net>

<net id="331"><net_src comp="50" pin="0"/><net_sink comp="326" pin=1"/></net>

<net id="336"><net_src comp="322" pin="1"/><net_sink comp="332" pin=0"/></net>

<net id="337"><net_src comp="52" pin="0"/><net_sink comp="332" pin=1"/></net>

<net id="342"><net_src comp="332" pin="2"/><net_sink comp="338" pin=0"/></net>

<net id="343"><net_src comp="326" pin="2"/><net_sink comp="338" pin=1"/></net>

<net id="348"><net_src comp="338" pin="2"/><net_sink comp="344" pin=0"/></net>

<net id="349"><net_src comp="123" pin="2"/><net_sink comp="344" pin=1"/></net>

<net id="354"><net_src comp="40" pin="0"/><net_sink comp="350" pin=1"/></net>

<net id="358"><net_src comp="350" pin="2"/><net_sink comp="355" pin=0"/></net>

<net id="364"><net_src comp="355" pin="1"/><net_sink comp="359" pin=1"/></net>

<net id="365"><net_src comp="136" pin="1"/><net_sink comp="359" pin=2"/></net>

<net id="366"><net_src comp="359" pin="3"/><net_sink comp="82" pin=2"/></net>

<net id="374"><net_src comp="367" pin="1"/><net_sink comp="370" pin=0"/></net>

<net id="375"><net_src comp="40" pin="0"/><net_sink comp="370" pin=1"/></net>

<net id="379"><net_src comp="370" pin="2"/><net_sink comp="376" pin=0"/></net>

<net id="385"><net_src comp="376" pin="1"/><net_sink comp="380" pin=1"/></net>

<net id="386"><net_src comp="380" pin="3"/><net_sink comp="82" pin=2"/></net>

<net id="402"><net_src comp="376" pin="1"/><net_sink comp="397" pin=1"/></net>

<net id="406"><net_src comp="183" pin="2"/><net_sink comp="403" pin=0"/></net>

<net id="410"><net_src comp="189" pin="2"/><net_sink comp="407" pin=0"/></net>

<net id="411"><net_src comp="407" pin="1"/><net_sink comp="94" pin=2"/></net>

<net id="415"><net_src comp="76" pin="2"/><net_sink comp="412" pin=0"/></net>

<net id="416"><net_src comp="412" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="417"><net_src comp="412" pin="1"/><net_sink comp="111" pin=1"/></net>

<net id="418"><net_src comp="412" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="422"><net_src comp="76" pin="2"/><net_sink comp="419" pin=0"/></net>

<net id="423"><net_src comp="419" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="424"><net_src comp="419" pin="1"/><net_sink comp="111" pin=1"/></net>

<net id="425"><net_src comp="419" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="429"><net_src comp="76" pin="2"/><net_sink comp="426" pin=0"/></net>

<net id="430"><net_src comp="426" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="431"><net_src comp="426" pin="1"/><net_sink comp="111" pin=0"/></net>

<net id="432"><net_src comp="426" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="436"><net_src comp="76" pin="2"/><net_sink comp="433" pin=0"/></net>

<net id="437"><net_src comp="433" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="438"><net_src comp="433" pin="1"/><net_sink comp="111" pin=0"/></net>

<net id="439"><net_src comp="433" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="443"><net_src comp="111" pin="2"/><net_sink comp="440" pin=0"/></net>

<net id="444"><net_src comp="440" pin="1"/><net_sink comp="101" pin=1"/></net>

<net id="448"><net_src comp="128" pin="1"/><net_sink comp="445" pin=0"/></net>

<net id="449"><net_src comp="445" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="450"><net_src comp="445" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="451"><net_src comp="445" pin="1"/><net_sink comp="209" pin=0"/></net>

<net id="455"><net_src comp="132" pin="1"/><net_sink comp="452" pin=0"/></net>

<net id="456"><net_src comp="452" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="457"><net_src comp="452" pin="1"/><net_sink comp="195" pin=0"/></net>

<net id="458"><net_src comp="452" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="462"><net_src comp="128" pin="1"/><net_sink comp="459" pin=0"/></net>

<net id="463"><net_src comp="459" pin="1"/><net_sink comp="115" pin=1"/></net>

<net id="464"><net_src comp="459" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="468"><net_src comp="132" pin="1"/><net_sink comp="465" pin=0"/></net>

<net id="469"><net_src comp="465" pin="1"/><net_sink comp="115" pin=1"/></net>

<net id="470"><net_src comp="465" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="474"><net_src comp="204" pin="1"/><net_sink comp="471" pin=0"/></net>

<net id="475"><net_src comp="471" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="479"><net_src comp="218" pin="1"/><net_sink comp="476" pin=0"/></net>

<net id="480"><net_src comp="476" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="484"><net_src comp="115" pin="2"/><net_sink comp="481" pin=0"/></net>

<net id="485"><net_src comp="481" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="489"><net_src comp="119" pin="2"/><net_sink comp="486" pin=0"/></net>

<net id="490"><net_src comp="486" pin="1"/><net_sink comp="111" pin=0"/></net>

<net id="494"><net_src comp="119" pin="2"/><net_sink comp="491" pin=0"/></net>

<net id="495"><net_src comp="491" pin="1"/><net_sink comp="111" pin=1"/></net>

<net id="499"><net_src comp="115" pin="2"/><net_sink comp="496" pin=0"/></net>

<net id="500"><net_src comp="496" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="504"><net_src comp="119" pin="2"/><net_sink comp="501" pin=0"/></net>

<net id="505"><net_src comp="501" pin="1"/><net_sink comp="111" pin=1"/></net>

<net id="509"><net_src comp="107" pin="2"/><net_sink comp="506" pin=0"/></net>

<net id="510"><net_src comp="506" pin="1"/><net_sink comp="115" pin=1"/></net>

<net id="511"><net_src comp="506" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="512"><net_src comp="506" pin="1"/><net_sink comp="367" pin=0"/></net>

<net id="513"><net_src comp="506" pin="1"/><net_sink comp="380" pin=2"/></net>

<net id="514"><net_src comp="506" pin="1"/><net_sink comp="397" pin=2"/></net>

<net id="518"><net_src comp="111" pin="2"/><net_sink comp="515" pin=0"/></net>

<net id="519"><net_src comp="515" pin="1"/><net_sink comp="223" pin=0"/></net>

<net id="520"><net_src comp="515" pin="1"/><net_sink comp="115" pin=1"/></net>

<net id="521"><net_src comp="515" pin="1"/><net_sink comp="387" pin=1"/></net>

<net id="522"><net_src comp="515" pin="1"/><net_sink comp="392" pin=2"/></net>

<net id="526"><net_src comp="232" pin="1"/><net_sink comp="523" pin=0"/></net>

<net id="527"><net_src comp="523" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="528"><net_src comp="523" pin="1"/><net_sink comp="387" pin=2"/></net>

<net id="529"><net_src comp="523" pin="1"/><net_sink comp="392" pin=1"/></net>

<net id="533"><net_src comp="107" pin="2"/><net_sink comp="530" pin=0"/></net>

<net id="534"><net_src comp="530" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="535"><net_src comp="530" pin="1"/><net_sink comp="119" pin=0"/></net>

<net id="536"><net_src comp="530" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="540"><net_src comp="111" pin="2"/><net_sink comp="537" pin=0"/></net>

<net id="541"><net_src comp="537" pin="1"/><net_sink comp="237" pin=0"/></net>

<net id="542"><net_src comp="537" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="543"><net_src comp="537" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="547"><net_src comp="246" pin="1"/><net_sink comp="544" pin=0"/></net>

<net id="548"><net_src comp="544" pin="1"/><net_sink comp="115" pin=0"/></net>

<net id="549"><net_src comp="544" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="553"><net_src comp="115" pin="2"/><net_sink comp="550" pin=0"/></net>

<net id="554"><net_src comp="550" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="558"><net_src comp="107" pin="2"/><net_sink comp="555" pin=0"/></net>

<net id="559"><net_src comp="555" pin="1"/><net_sink comp="115" pin=1"/></net>

<net id="563"><net_src comp="107" pin="2"/><net_sink comp="560" pin=0"/></net>

<net id="564"><net_src comp="560" pin="1"/><net_sink comp="123" pin=0"/></net>

<net id="565"><net_src comp="560" pin="1"/><net_sink comp="251" pin=0"/></net>

<net id="566"><net_src comp="560" pin="1"/><net_sink comp="301" pin=2"/></net>

<net id="570"><net_src comp="123" pin="2"/><net_sink comp="567" pin=0"/></net>

<net id="571"><net_src comp="567" pin="1"/><net_sink comp="286" pin=1"/></net>

<net id="575"><net_src comp="115" pin="2"/><net_sink comp="572" pin=0"/></net>

<net id="576"><net_src comp="572" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="580"><net_src comp="119" pin="2"/><net_sink comp="577" pin=0"/></net>

<net id="581"><net_src comp="577" pin="1"/><net_sink comp="107" pin=1"/></net>

<net id="585"><net_src comp="286" pin="2"/><net_sink comp="582" pin=0"/></net>

<net id="586"><net_src comp="582" pin="1"/><net_sink comp="380" pin=0"/></net>

<net id="587"><net_src comp="582" pin="1"/><net_sink comp="387" pin=0"/></net>

<net id="591"><net_src comp="301" pin="3"/><net_sink comp="588" pin=0"/></net>

<net id="592"><net_src comp="588" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="596"><net_src comp="308" pin="1"/><net_sink comp="593" pin=0"/></net>

<net id="597"><net_src comp="593" pin="1"/><net_sink comp="350" pin=0"/></net>

<net id="601"><net_src comp="344" pin="2"/><net_sink comp="598" pin=0"/></net>

<net id="602"><net_src comp="598" pin="1"/><net_sink comp="359" pin=0"/></net>

<net id="603"><net_src comp="598" pin="1"/><net_sink comp="392" pin=0"/></net>

<net id="604"><net_src comp="598" pin="1"/><net_sink comp="397" pin=0"/></net>

<net id="608"><net_src comp="387" pin="3"/><net_sink comp="605" pin=0"/></net>

<net id="609"><net_src comp="605" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="613"><net_src comp="392" pin="3"/><net_sink comp="610" pin=0"/></net>

<net id="614"><net_src comp="610" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="618"><net_src comp="397" pin="3"/><net_sink comp="615" pin=0"/></net>

<net id="619"><net_src comp="615" pin="1"/><net_sink comp="82" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: strm_in_V | {}
	Port: strm_out_V | {169 170 171 172 173 174 175 176 177 178 179 180 }
 - Input state : 
	Port: dut_calc_svd : strm_in_V | {3 4 5 6 }
	Port: dut_calc_svd : strm_out_V | {}
  - Chain level:
	State 1
	State 2
		exitcond : 1
		proc_1 : 1
		stg_188 : 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
		cosA_half : 1
		sinA_half : 1
	State 131
		cosB_half : 1
		sinB_half : 1
	State 132
	State 133
		tmp_9_neg : 1
		a2_assign_1 : 1
		tmp_3_i2 : 2
	State 134
		tmp_8_neg : 1
		a2_assign : 1
		tmp_3_i1 : 2
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
		vy_int_neg : 1
		vy_int : 1
		tmp_3_i4 : 2
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
		uy_int_neg : 1
		uy_int : 1
		tmp_3_i6 : 2
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
		tmp_4 : 1
		tmp : 1
		notlhs : 2
		notrhs : 2
		tmp_3 : 3
		tmp_6 : 3
		w_out_neg : 1
		w_out : 1
		w_out_3 : 3
	State 169
	State 170
	State 171
		tmp_7 : 1
		tmp_2 : 1
		notlhs2 : 2
		notrhs3 : 2
		tmp_8 : 3
		tmp_10 : 3
	State 172
		z_out_3 : 1
		stg_614 : 2
	State 173
	State 174
	State 175
	State 176
	State 177
		vw_int_neg : 1
		vw_int : 1
		vw_int_3 : 2
		vz_int : 2
		stg_626 : 3
	State 178
	State 179
	State 180
		empty_10 : 1
	State 181


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-----------------------------------------|---------|---------|---------|---------|
| Operation|             Functional Unit             |  DSP48E |  Delay  |    FF   |   LUT   |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   call   | grp_dut_calc_angle_float_float_s_fu_101 |    21   |  12.568 |   6033  |   8922  |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   fadd   |                grp_fu_107               |    2    |    0    |   205   |   390   |
|          |                grp_fu_111               |    2    |    0    |   205   |   390   |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   fmul   |                grp_fu_115               |    3    |    0    |   143   |   321   |
|          |                grp_fu_119               |    3    |    0    |   143   |   321   |
|----------|-----------------------------------------|---------|---------|---------|---------|
|          |             tmp_9_neg_fu_198            |    0    |    0    |    0    |    44   |
|          |             tmp_8_neg_fu_212            |    0    |    0    |    0    |    44   |
|          |            vy_int_neg_fu_226            |    0    |    0    |    0    |    44   |
|    xor   |            uy_int_neg_fu_240            |    0    |    0    |    0    |    44   |
|          |             w_out_neg_fu_291            |    0    |    0    |    0    |    44   |
|          |             z_out_neg_fu_350            |    0    |    0    |    0    |    44   |
|          |            vw_int_neg_fu_370            |    0    |    0    |    0    |    44   |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   fcmp   |                grp_fu_123               |    0    |    0    |    66   |   239   |
|----------|-----------------------------------------|---------|---------|---------|---------|
|          |              w_out_3_fu_301             |    0    |    0    |    0    |    32   |
|          |              z_out_3_fu_359             |    0    |    0    |    0    |    32   |
|  select  |             vw_int_3_fu_380             |    0    |    0    |    0    |    32   |
|          |              vx_int_fu_387              |    0    |    0    |    0    |    32   |
|          |             vy_int_2_fu_392             |    0    |    0    |    0    |    32   |
|          |              vz_int_fu_397              |    0    |    0    |    0    |    32   |
|----------|-----------------------------------------|---------|---------|---------|---------|
|          |             exitcond_fu_183             |    0    |    0    |    0    |    2    |
|          |              notlhs_fu_268              |    0    |    0    |    0    |    3    |
|   icmp   |              notrhs_fu_274              |    0    |    0    |    0    |    8    |
|          |              notlhs2_fu_326             |    0    |    0    |    0    |    3    |
|          |              notrhs3_fu_332             |    0    |    0    |    0    |    8    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|    add   |              proc_1_fu_189              |    0    |    0    |    0    |    4    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|    or    |               tmp_3_fu_280              |    0    |    0    |    0    |    1    |
|          |               tmp_8_fu_338              |    0    |    0    |    0    |    1    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|    and   |               tmp_6_fu_286              |    0    |    0    |    0    |    1    |
|          |              tmp_10_fu_344              |    0    |    0    |    0    |    1    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   read   |              grp_read_fu_76             |    0    |    0    |    0    |    0    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   write  |             grp_write_fu_82             |    0    |    0    |    0    |    0    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|extractvalue|                grp_fu_128               |    0    |    0    |    0    |    0    |
|          |                grp_fu_132               |    0    |    0    |    0    |    0    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|partselect|               tmp_4_fu_254              |    0    |    0    |    0    |    0    |
|          |               tmp_7_fu_312              |    0    |    0    |    0    |    0    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   trunc  |                tmp_fu_264               |    0    |    0    |    0    |    0    |
|          |               tmp_2_fu_322              |    0    |    0    |    0    |    0    |
|----------|-----------------------------------------|---------|---------|---------|---------|
|   Total  |                                         |    31   |  12.568 |   6795  |  11115  |
|----------|-----------------------------------------|---------|---------|---------|---------|

Memories:
N/A

* Register list:
+-------------------------------+--------+
|                               |   FF   |
+-------------------------------+--------+
|      a2_assign_1_reg_471      |   32   |
|       a2_assign_reg_476       |   32   |
|c_write_assign_9_to_int_reg_593|   32   |
|       cosA_half_reg_445       |   32   |
|       cosB_half_reg_459       |   32   |
|        exitcond_reg_403       |    1   |
|         proc_1_reg_407        |    4   |
|          proc_reg_90          |    4   |
|            reg_136            |   32   |
|            reg_143            |   32   |
|            reg_149            |   32   |
|            reg_155            |   32   |
|            reg_161            |   32   |
|            reg_166            |   32   |
|            reg_171            |   32   |
|            reg_177            |   32   |
|       sinA_half_reg_452       |   32   |
|       sinB_half_reg_465       |   32   |
|         tmp_10_reg_598        |    1   |
|         tmp_13_reg_530        |   32   |
|         tmp_14_reg_537        |   32   |
|         tmp_20_reg_412        |   32   |
|         tmp_21_reg_419        |   32   |
|         tmp_22_reg_426        |   32   |
|         tmp_23_reg_433        |   32   |
|        tmp_3_i1_reg_501       |   32   |
|        tmp_3_i3_reg_491       |   32   |
|        tmp_3_i6_reg_550       |   32   |
|        tmp_3_i9_reg_577       |   32   |
|        tmp_3_i_reg_496        |   32   |
|         tmp_5_reg_567         |    1   |
|         tmp_6_reg_582         |    1   |
|         tmp_i1_reg_486        |   32   |
|         tmp_i7_reg_572        |   32   |
|         tmp_i_reg_481         |   32   |
|          u1_1_reg_440         |   32   |
|         uy_int_reg_544        |   32   |
|         vx_int_reg_605        |   32   |
|        vy_int_1_reg_515       |   32   |
|        vy_int_2_reg_610       |   32   |
|         vy_int_reg_523        |   32   |
|        vz_int_1_reg_506       |   32   |
|         vz_int_reg_615        |   32   |
|        w_out_3_reg_588        |   32   |
|       w_out_int_reg_560       |   32   |
|         z_out1_reg_555        |   32   |
+-------------------------------+--------+
|             Total             |  1292  |
+-------------------------------+--------+

* Multiplexer (MUX) list: 
|-----------------------------------------|------|------|------|--------||---------||---------|
|                   Comp                  |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------------------------------------|------|------|------|--------||---------||---------|
|             grp_write_fu_82             |  p2  |  10  |  32  |   320  ||    64   |
| grp_dut_calc_angle_float_float_s_fu_101 |  p1  |   2  |  32  |   64   ||    32   |
| grp_dut_calc_angle_float_float_s_fu_101 |  p2  |   2  |  32  |   64   ||    32   |
|                grp_fu_107               |  p0  |   7  |  32  |   224  ||    32   |
|                grp_fu_107               |  p1  |   8  |  32  |   256  ||    64   |
|                grp_fu_111               |  p0  |   4  |  32  |   128  ||    32   |
|                grp_fu_111               |  p1  |   5  |  32  |   160  ||    32   |
|                grp_fu_115               |  p0  |  10  |  32  |   320  ||    64   |
|                grp_fu_115               |  p1  |   7  |  32  |   224  ||    32   |
|                grp_fu_119               |  p0  |   7  |  32  |   224  ||    32   |
|                grp_fu_119               |  p1  |   6  |  32  |   192  ||    32   |
|                grp_fu_123               |  p0  |   2  |  32  |   64   ||    32   |
|-----------------------------------------|------|------|------|--------||---------||---------|
|                  Total                  |      |      |      |  2240  ||  22.388 ||   480   |
|-----------------------------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |   31   |   12   |  6795  |  11115 |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |   22   |    -   |   480  |
|  Register |    -   |    -   |  1292  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |   31   |   34   |  8087  |  11595 |
+-----------+--------+--------+--------+--------+
