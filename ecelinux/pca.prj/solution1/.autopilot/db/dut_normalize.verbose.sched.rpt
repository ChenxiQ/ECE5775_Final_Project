

================================================================
== Vivado HLS Report for 'dut_normalize'
================================================================
* Date:           Fri Nov 11 18:59:54 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        pca.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2366897|  2366897|  2366897|  2366897|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  2366896|  2366896|      3019|          -|          -|   784|    no    |
        | + Loop 1.1  |     1400|     1400|         7|          -|          -|   200|    no    |
        | + Loop 1.2  |     1600|     1600|         8|          -|          -|   200|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 33
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
3 --> 
	4  / (!exitcond1)
	10  / (exitcond1)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	3  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	2  / (exitcond)
	27  / (!exitcond)
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	26  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_34 [1/1] 1.57ns
:0  br label %.loopexit


 <State 2>: 2.08ns
ST_2: j [1/1] 0.00ns
.loopexit:0  %j = phi i10 [ 0, %0 ], [ %j_2, %3 ]

ST_2: phi_mul [1/1] 0.00ns
.loopexit:1  %phi_mul = phi i18 [ 0, %0 ], [ %next_mul, %3 ]

ST_2: next_mul [1/1] 2.08ns
.loopexit:2  %next_mul = add i18 %phi_mul, 200

ST_2: empty [1/1] 0.00ns
.loopexit:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)

ST_2: exitcond2 [1/1] 2.07ns
.loopexit:4  %exitcond2 = icmp eq i10 %j, -240

ST_2: j_2 [1/1] 1.84ns
.loopexit:5  %j_2 = add i10 %j, 1

ST_2: stg_41 [1/1] 0.00ns
.loopexit:6  br i1 %exitcond2, label %5, label %.preheader.preheader

ST_2: tmp_s [1/1] 0.00ns
.preheader.preheader:0  %tmp_s = zext i10 %j to i64

ST_2: stg_43 [1/1] 1.57ns
.preheader.preheader:1  br label %.preheader

ST_2: stg_44 [1/1] 0.00ns
:0  ret void


 <State 3>: 6.08ns
ST_3: sum [1/1] 0.00ns
.preheader:0  %sum = phi float [ %sum_1, %1 ], [ 0.000000e+00, %.preheader.preheader ]

ST_3: i [1/1] 0.00ns
.preheader:1  %i = phi i8 [ %i_3, %1 ], [ 0, %.preheader.preheader ]

ST_3: empty_22 [1/1] 0.00ns
.preheader:2  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 200, i64 200, i64 200)

ST_3: exitcond1 [1/1] 2.00ns
.preheader:3  %exitcond1 = icmp eq i8 %i, -56

ST_3: i_3 [1/1] 1.72ns
.preheader:4  %i_3 = add i8 %i, 1

ST_3: stg_50 [1/1] 0.00ns
.preheader:5  br i1 %exitcond1, label %2, label %1

ST_3: tmp_134_cast [1/1] 0.00ns
:0  %tmp_134_cast = zext i8 %i to i18

ST_3: tmp_157 [1/1] 2.08ns
:1  %tmp_157 = add i18 %phi_mul, %tmp_134_cast

ST_3: tmp_172_cast [1/1] 0.00ns
:2  %tmp_172_cast = zext i18 %tmp_157 to i64

ST_3: X_addr [1/1] 0.00ns
:3  %X_addr = getelementptr [156800 x float]* %X, i64 0, i64 %tmp_172_cast

ST_3: X_load [2/2] 2.71ns
:4  %X_load = load float* %X_addr, align 4

ST_3: tmp_133 [16/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 4>: 2.71ns
ST_4: X_load [1/2] 2.71ns
:4  %X_load = load float* %X_addr, align 4


 <State 5>: 7.26ns
ST_5: sum_1 [5/5] 7.26ns
:5  %sum_1 = fadd float %sum, %X_load


 <State 6>: 7.26ns
ST_6: sum_1 [4/5] 7.26ns
:5  %sum_1 = fadd float %sum, %X_load


 <State 7>: 7.26ns
ST_7: sum_1 [3/5] 7.26ns
:5  %sum_1 = fadd float %sum, %X_load


 <State 8>: 7.26ns
ST_8: sum_1 [2/5] 7.26ns
:5  %sum_1 = fadd float %sum, %X_load


 <State 9>: 7.26ns
ST_9: sum_1 [1/5] 7.26ns
:5  %sum_1 = fadd float %sum, %X_load

ST_9: stg_63 [1/1] 0.00ns
:6  br label %.preheader


 <State 10>: 6.08ns
ST_10: tmp_133 [15/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 11>: 6.08ns
ST_11: tmp_133 [14/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 12>: 6.08ns
ST_12: tmp_133 [13/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 13>: 6.08ns
ST_13: tmp_133 [12/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 14>: 6.08ns
ST_14: tmp_133 [11/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 15>: 6.08ns
ST_15: tmp_133 [10/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 16>: 6.08ns
ST_16: tmp_133 [9/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 17>: 6.08ns
ST_17: tmp_133 [8/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 18>: 6.08ns
ST_18: tmp_133 [7/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 19>: 6.08ns
ST_19: tmp_133 [6/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 20>: 6.08ns
ST_20: tmp_133 [5/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 21>: 6.08ns
ST_21: tmp_133 [4/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 22>: 6.08ns
ST_22: tmp_133 [3/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 23>: 6.08ns
ST_23: tmp_133 [2/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 24>: 6.08ns
ST_24: tmp_133 [1/16] 6.08ns
:0  %tmp_133 = fdiv float %sum, 2.000000e+02


 <State 25>: 2.71ns
ST_25: mean_addr [1/1] 0.00ns
:1  %mean_addr = getelementptr [784 x float]* %mean, i64 0, i64 %tmp_s

ST_25: stg_80 [1/1] 2.71ns
:2  store float %tmp_133, float* %mean_addr, align 4

ST_25: stg_81 [1/1] 1.57ns
:3  br label %3


 <State 26>: 4.79ns
ST_26: i1 [1/1] 0.00ns
:0  %i1 = phi i8 [ 0, %2 ], [ %i_4, %4 ]

ST_26: empty_23 [1/1] 0.00ns
:1  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 200, i64 200, i64 200)

ST_26: exitcond [1/1] 2.00ns
:2  %exitcond = icmp eq i8 %i1, -56

ST_26: i_4 [1/1] 1.72ns
:3  %i_4 = add i8 %i1, 1

ST_26: stg_86 [1/1] 0.00ns
:4  br i1 %exitcond, label %.loopexit, label %4

ST_26: tmp_135_cast [1/1] 0.00ns
:0  %tmp_135_cast = zext i8 %i1 to i18

ST_26: tmp_158 [1/1] 2.08ns
:1  %tmp_158 = add i18 %phi_mul, %tmp_135_cast

ST_26: tmp_173_cast [1/1] 0.00ns
:2  %tmp_173_cast = zext i18 %tmp_158 to i64

ST_26: X_addr_1 [1/1] 0.00ns
:3  %X_addr_1 = getelementptr [156800 x float]* %X, i64 0, i64 %tmp_173_cast

ST_26: X_load_1 [2/2] 2.71ns
:4  %X_load_1 = load float* %X_addr_1, align 4


 <State 27>: 2.71ns
ST_27: X_load_1 [1/2] 2.71ns
:4  %X_load_1 = load float* %X_addr_1, align 4


 <State 28>: 7.26ns
ST_28: tmp_136 [5/5] 7.26ns
:5  %tmp_136 = fsub float %X_load_1, %tmp_133


 <State 29>: 7.26ns
ST_29: tmp_136 [4/5] 7.26ns
:5  %tmp_136 = fsub float %X_load_1, %tmp_133


 <State 30>: 7.26ns
ST_30: tmp_136 [3/5] 7.26ns
:5  %tmp_136 = fsub float %X_load_1, %tmp_133


 <State 31>: 7.26ns
ST_31: tmp_136 [2/5] 7.26ns
:5  %tmp_136 = fsub float %X_load_1, %tmp_133


 <State 32>: 7.26ns
ST_32: tmp_136 [1/5] 7.26ns
:5  %tmp_136 = fsub float %X_load_1, %tmp_133


 <State 33>: 2.71ns
ST_33: stg_98 [1/1] 2.71ns
:6  store float %tmp_136, float* %X_addr_1, align 4

ST_33: stg_99 [1/1] 0.00ns
:7  br label %3



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
